<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:HemeraSamplerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4077ac18"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405f5320"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405f5320"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405f64e0"/></to>
    </wire>
    <wire loc="19:HemeraSamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4077a010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40439a78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407b3180"/></to>
    </wire>
    <wire loc="24:HemeraSamplerC.nc">
      <from><interface-ref name="TimerTHL" scoped="" ref="0x4077dd48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409020a0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409020a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:HemeraSamplerC.nc">
      <from><interface-ref name="MotionSensorGpIO" scoped="" ref="0x40783768"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x407c8ae8"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x407c8ae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40834140"/></to>
    </wire>
    <wire loc="42:HemeraSamplerC.nc">
      <from><interface-ref name="MotionSensor" scoped="" ref="0x407958b0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x409f6288"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x409f6288"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x409eba28"/></to>
    </wire>
    <wire loc="46:HemeraSamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x4078d930"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40b80078"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x40b80078"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x41a16ce0"/></to>
    </wire>
    <wire loc="47:HemeraSamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x4078e698"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40b7e010"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x40b7e010"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x41a15ca8"/></to>
    </wire>
    <wire loc="51:HemeraSamplerC.nc">
      <from><interface-ref name="LightSensor" scoped="" ref="0x4078c3b0"/></from>
      <to><interface-ref name="ReadLux" scoped="" ref="0x40ba0010"/></to>
    </wire>
    <wire loc="16:../../tos/chips/bh17/RohmBH17C.nc">
      <from><interface-ref name="ReadLux" scoped="" ref="0x40ba0010"/></from>
      <to><interface-ref name="ReadLux" scoped="" ref="0x40b9c430"/></to>
    </wire>
    <wire loc="55:HemeraSamplerC.nc">
      <from><interface-ref name="BatSensor" scoped="" ref="0x4078b0c0"/></from>
      <to><interface-ref name="ReadSen" scoped="" ref="0x40d410a8"/></to>
    </wire>
    <wire loc="12:../../tos/platforms/hemera/BatteryAdcC.nc">
      <from><interface-ref name="ReadSen" scoped="" ref="0x40d410a8"/></from>
      <to><interface-ref name="ReadAdc" scoped="" ref="0x40e6b750"/></to>
    </wire>
    <wire loc="66:HemeraSamplerC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x407921f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e60178"/></to>
    </wire>
    <wire loc="50:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e60178"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x416aa680"/></to>
    </wire>
    <wire loc="67:HemeraSamplerC.nc">
      <from><interface-ref name="UDPService" scoped="" ref="0x4078fe80"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x416bc260"/></to>
    </wire>
    <wire loc="15:../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x416bc260"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x4170c3b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41706960"/></to>
    </wire>
    <wire loc="48:../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c68c88"/></to>
    </wire>
    <wire loc="48:../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c71120"/></to>
    </wire>
    <wire loc="48:../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c81120"/></to>
    </wire>
    <wire loc="48:../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c8c970"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4157b8f8"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415869f0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4153aef8"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41549180"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4150d5e0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41454c90"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413bbb28"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fe44a8"/></to>
    </wire>
    <wire loc="58:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411d91d0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410e3ab8"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fa1868"/></to>
    </wire>
    <wire loc="11:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f30a68"/></to>
    </wire>
    <wire loc="96:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41acde30"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d748b8"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a98e48"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a2b100"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f9d78"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405f6878"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403a69d8"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403a69d8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x405d5d38"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405f6e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405f7900"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405f7900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406011a8"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406ed280"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x406015d8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x406036b0"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/epic/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x406036b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40603f00"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40601998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405fce10"/></to>
    </wire>
    <wire loc="20:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40601d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407cdc88"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40603f00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4060c478"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x406065d8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x4060c848"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x405e4570"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4061b2f8"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x4062e468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406a9870"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x406442a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406a5700"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x40637358"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406acb08"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x4064c788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406bf430"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x4063b438"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406ac430"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x40650bf8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406c0c78"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x4064a278"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406c6010"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x406411c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406bc120"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x4063dcc8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x4066da10"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x4064d5f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406b46e8"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x40651bf8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406b4010"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x40644e18"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406b5588"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x40637bf8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406a8a28"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x4064b090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406bb270"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x40643a58"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406b0430"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x4063bbf8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406a8350"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x40634070"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4065ae58"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x4064f438"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406bcb78"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x406338c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x4069a8f8"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x40641d38"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406b7010"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x406469d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4067dbe8"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x4064de98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406af570"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x40638b98"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4067d510"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x40650438"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406b0e88"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x4064b930"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406ca190"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x40642628"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406c0220"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x4064fbf8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406b7a68"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x4064ecf8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406a4868"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x4064e438"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406c78d0"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x40651438"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406a4190"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x406408c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x406c8e68"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x40659e90"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40659b28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x40672200"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x406c4980"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x40672558"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x406c4e08"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4069d430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4065ae58"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x4069c080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40659b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406ab350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4065ae58"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406aa010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40659b28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406a7270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4065ae58"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406a7e88"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40659b28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x4066f910"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x4066fc68"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x406c12c0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x4066e010"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x406c1748"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406a3050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406a3c68"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406b4ea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406b2b00"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406afd28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406ae970"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406bfbe8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406be890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406bba28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406ba6d0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406ca948"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406c95f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406c67c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40670838"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x406c5430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4066f5a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x405d4590"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x405e3210"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403a5a90"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407cdc88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407b6dc8"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407b2010"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407b5e18"/></to>
    </wire>
    <wire loc="22:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407b5e18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408df1f0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407b29f8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407ce820"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407ce820"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408f09a0"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407b14a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407cd2e0"/></to>
    </wire>
    <wire loc="28:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407cd2e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408ed1a8"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x408dfb68"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x407de178"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x407de178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087fe68"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x408ef350"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x407f3768"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x407f3768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408765c8"/></to>
    </wire>
    <wire loc="29:../../tos/platforms/epic/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x408edb20"/></from>
      <to><interface-ref name="Port47" scoped="" ref="0x407efe68"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x407efe68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408865c8"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x407c6e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40849010"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x407d1010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40864d68"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x40808158"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085c5c8"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x4080de58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408afd68"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x40807280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085ad68"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x407e7368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085fd68"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x407f45a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087ad68"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x407e9688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40894d68"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x407f84c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b4d68"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x40804760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086fd68"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x408133d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a3d68"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x408203e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x407da368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408425c8"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x40803920"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086c5c8"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x407d8688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408575c8"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x407e4848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408715c8"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x407f1ae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088b5c8"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x407febc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a65c8"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x407f5a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x407d4bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40850de8"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x407e1d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086ad68"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x4080a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085c5c8"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40810918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089b5c8"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x40821280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x40816010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408965c8"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x407eb368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40899d68"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x407fa178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089ed68"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x4080fad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b4d68"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x40802ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40884d68"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x407dc010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40847730"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x407e8178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408615c8"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x407fdd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a3d68"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x407e64c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085c5c8"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x40800848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408915c8"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x407f7688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b15c8"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x40818e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40899d68"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x407cc808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4081c220"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x407d7848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40855d68"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x407e3a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086fd68"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x407f0ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40889d68"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x40815170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086ad68"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x40812598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a05c8"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x40823010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x407ed010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40884d68"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x40814288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408675c8"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x407c7ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408328a0"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x407d3d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084d5c8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x407df010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408675c8"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x40801ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408815c8"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x4080ec98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b15c8"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x407dd3e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087c5c8"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x407ea4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408965c8"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x407f9368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089b5c8"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x407db178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40845df8"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x407fb010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a05c8"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x407d94c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40840d68"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x407e5688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085ad68"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x407f2928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40874d68"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x407ffa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088fd68"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x407f6848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408afd68"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x407c9930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40837918"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x407d6a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408525c8"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x407e2bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086c5c8"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x40805588"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408715c8"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40811758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089ed68"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x408063e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408715c8"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x407ec178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408815c8"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x40822168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408afd68"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x4081f5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a65c8"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x4080cbe8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4085fd68"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409125e8"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409125e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409af338"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408f9d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4090d520"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4090c7f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409ded28"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4090d520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419a66b0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x409c9688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4098f270"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409b55b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4090d978"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4090d978"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x419a25b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409e46e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4095b938"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4095b938"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4096a980"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x419a66b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41996010"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4199e380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x419a6b08"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x419a6b08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41996488"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x419a00a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4095b938"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x41995de8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x41999440"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x41999440"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x41994a30"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x41998060"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x41998060"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x419934f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x41998a98"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x41998a98"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x406442a8"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x40651438"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x40643a58"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x40650438"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x40642628"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x40650bf8"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x406411c8"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x4064f438"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x40641d38"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x4064fbf8"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x406408c8"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x4064e438"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40978bd0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40959440"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40959440"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4094ee10"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40956f08"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x409b3010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x409e6948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x409f5448"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x409eac18"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x409f0dd8"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x40a04608"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x409f4eb8"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x409e86e8"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x409f2070"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x40a078c0"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x409f1b38"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x40a05368"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x409f5cf8"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x409e9528"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x409ef6e8"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x40a04eb8"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x409f7070"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x409ee828"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x409f2920"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x40a06188"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x409f6b38"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x409ea368"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x409f0528"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x40a05c98"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x409f4608"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x409e9dd8"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x409f3798"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x40a07010"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x409f7920"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x409eb178"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x409f1288"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x40a06a38"/></to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x40b7eba8"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x41a158c0"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x40b80c10"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x41a168f8"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x41a14858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a8e740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x41a136e8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x40aad1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x41a13010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a8e740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x41a12270"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x40aad1b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x40aad1b8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x40aaae78"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a8e740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aef8e8"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aef8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b0d908"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40af79d0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x40aeb090"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40aeb090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ae9518"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x40af6358"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x40aeba88"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40aeba88"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ae7cc0"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x40af6cd0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x40aea540"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x40aea540"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40b175e8"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40af43c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b88c58"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b88c58"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40af25d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x40af16a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x40af1270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b0d908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a2a5b8"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40ae9e90"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x407dc010"/></to>
    </wire>
    <wire loc="57:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40b0a6d0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x407db178"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40b08e90"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x407da368"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x40aff050"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40b08518"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40affa58"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ae9518"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40afe4b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ae7cc0"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b05d88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b1c2e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b1c2e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x40b17be0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x409f5cf8"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b5dc68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b056a8"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5cbe8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5fb08"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5fb08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41a287e8"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5c550"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5f470"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5f470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a28150"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x40afd308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b5f068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a2acf8"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a28ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b5e010"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41a27170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41a2b438"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a26358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41a6e010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b5dc68"/></to>
    </wire>
    <wire loc="81:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41a6e5c8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40b5c238"/></to>
    </wire>
    <wire loc="83:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a6e8e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5c550"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41a6d010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5cbe8"/></to>
    </wire>
    <wire loc="78:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x41a6d448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x41a6d880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../../tos/chips/bh17/RohmBH17C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40b92a08"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40bc7ac0"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40bc7ac0"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x40d4e0c0"/></to>
    </wire>
    <wire loc="20:../../tos/chips/bh17/RohmBH17C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40b98980"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x40bc5a48"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40bc5a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bc2518"/></to>
    </wire>
    <wire loc="21:../../tos/chips/bh17/RohmBH17C.nc">
      <from><interface-ref name="LightReset" scoped="" ref="0x40b9b0c8"/></from>
      <to><interface-ref name="LightReset" scoped="" ref="0x40bc7010"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <from><interface-ref name="LightReset" scoped="" ref="0x40bc7010"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40d4a1a8"/></to>
    </wire>
    <wire loc="24:../../tos/chips/bh17/RohmBH17C.nc">
      <from><interface-ref name="TimerWait" scoped="" ref="0x40b911b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d47658"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d47658"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../tos/chips/bh17/RohmBH17P.nc">
      <from><interface-ref name="perform_action" scoped="" ref="0x40bb1010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40bc2518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40be6f00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="I2CBasicAddr" scoped="" ref="0x40d4e0c0"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x40c08010"/></to>
    </wire>
    <wire loc="22:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40d4ab20"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x407febc8"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40bc2bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a5d748"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41a5d748"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40cf5e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="I2CBasicAddr" scoped="" ref="0x40c08010"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x40c00950"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40c06cf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40d4b010"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a56b50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c0a960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x40c062a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a5d090"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41a5d090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cf53c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x40c05d08"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x41a5aba8"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x41a5aba8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x40cf6d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c0a960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c00320"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40be6f00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c048a0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40bfd6c8"/></from>
      <to><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40c06cf8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x40bfec40"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x40c062a8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x40c0b678"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x40c05d08"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x40c0d9a0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x40c3bb20"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x40c3bb20"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x40c35f28"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c0b9e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x40ca6250"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x40c35f28"/></to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x40c72da8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x40ca9098"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x40c706d8"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x4080a010"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x40c6f838"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x408063e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x40c9f168"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x408063e0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x40c9e280"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x40803920"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x40c9d3d8"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x40804760"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x40ca0010"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x40807280"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x40ca2e18"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x4080a010"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x41a5aee0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x40c3bb20"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x41a5a790"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x40cf64c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x41a5c010"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x40d0fc50"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x40d0fc50"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x40ca9098"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41a5db60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d202c0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d202c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d11c88"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d20a68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41a56b50"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40cf5e10"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40d111e8"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d111e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a95a58"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x40cf64c0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x40d1e268"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cf53c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d12a48"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d12a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a95318"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x40cf6d40"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x40d1e748"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d11c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41a93510"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d10208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d20a68"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d13240"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d11c88"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x40d1eab0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x40d37508"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x40d37508"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x40ca4840"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x40d1eee8"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x40d37a00"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x40d37a00"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x40ca4de0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d115f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a95e60"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a939d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d10208"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41a93df8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41a961b0"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a91030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="9:../../tos/platforms/hemera/BatteryAdcC.nc">
      <from><interface-ref name="ReadSingleChannel" scoped="" ref="0x40e6e580"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x40d3f7e8"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x40d3f7e8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x40d78e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:../../tos/platforms/hemera/BatteryAdcC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x40e6eec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d3f150"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d3f150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d78340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x40e6f070"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x40d76b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x40e6f548"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x40d75478"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x40d76b38"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x40d70dc0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x40d72c98"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x40d6d010"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x40d75478"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x40d6e728"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x40d78e58"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x40d70100"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d78340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e07d48"/></to>
    </wire>
    <wire loc="98:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e07d48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ac91a8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x40d6d568"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e4a970"/></to>
    </wire>
    <wire loc="100:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e4a970"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41ac9cf0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x40d92078"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x40e09470"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x40d8f508"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x407fdd88"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x40d8e748"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x407fb010"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x40d8d908"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x407fa178"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x40d8cac8"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x407f9368"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x40d8bc88"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x407f84c8"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x40d8ae48"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x407f7688"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x40d88010"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x407f6848"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x40d87178"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x407f5a08"/></to>
    </wire>
    <wire loc="74:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x40d6c140"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x40634070"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x40d6ce50"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x4063dcc8"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x40d6b9c8"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x406338c8"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x40d91500"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x40638b98"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x40d91ca0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x4063b438"/></to>
    </wire>
    <wire loc="99:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40e4a568"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41ac98e8"/></to>
    </wire>
    <wire loc="101:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41ac8218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e4ae20"/></to>
    </wire>
    <wire loc="103:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41ac8640"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41aca1b0"/></to>
    </wire>
    <wire loc="68:../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41ac8c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x40e86e78"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40e987c0"/></to>
    </wire>
    <wire loc="56:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40e57670"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40e98010"/></to>
    </wire>
    <wire loc="66:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x40e5f2a0"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x40e971c0"/></to>
    </wire>
    <wire loc="55:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x40e58178"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40e857e8"/></to>
    </wire>
    <wire loc="60:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x40e5ddf0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40e7b228"/></to>
    </wire>
    <wire loc="51:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x416aace0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e5e428"/></to>
    </wire>
    <wire loc="52:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x416a7268"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x40e5e938"/></to>
    </wire>
    <wire loc="53:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x416a7798"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411b10e0"/></to>
    </wire>
    <wire loc="51:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x411b10e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411db938"/></to>
    </wire>
    <wire loc="61:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x40e75a88"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40e98cb0"/></to>
    </wire>
    <wire loc="63:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40e92a78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40ee1810"/></to>
    </wire>
    <wire loc="19:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40ee1810"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40ee47b0"/></to>
    </wire>
    <wire loc="65:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40edea10"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x411b16e0"/></to>
    </wire>
    <wire loc="52:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x411b16e0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x411d9540"/></to>
    </wire>
    <wire loc="72:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x41690460"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40e7b228"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x416908b8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></to>
    </wire>
    <wire loc="36:../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ef1a40"/></to>
    </wire>
    <wire loc="77:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40e95010"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></to>
    </wire>
    <wire loc="78:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40e958c0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x41699c30"/></to>
    </wire>
    <wire loc="79:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40e72ea8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x41699c30"/></to>
    </wire>
    <wire loc="80:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x416a7db0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></to>
    </wire>
    <wire loc="83:../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40e8d4c0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416cf278"/></to>
    </wire>
    <wire loc="49:../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x416cf278"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41c67058"/></to>
    </wire>
    <wire loc="95:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40eb7228"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x40ee12d8"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40ee4d38"/></to>
    </wire>
    <wire loc="21:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40edc2b8"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x40edea10"/></to>
    </wire>
    <wire loc="22:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40edc7f0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></to>
    </wire>
    <wire loc="23:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40ed7a18"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40f31ec0"/></to>
    </wire>
    <wire loc="9:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40f31ec0"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40f30e10"/></to>
    </wire>
    <wire loc="37:../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x40ef1218"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x40f22608"/></to>
    </wire>
    <wire loc="38:../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40f229f0"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40f31ec0"/></to>
    </wire>
    <wire loc="12:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f2dd68"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4f010"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4f010"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4c658"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40f59af0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40f2fe28"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40f2fe28"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40f9b3b0"/></to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x40f492d0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x40f45e38"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x40f45e38"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x40f41b30"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x40f72370"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x40f6a170"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x40f6a170"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x40f69630"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x40f72870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f6b900"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x40f6a648"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x40f42910"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x40f42910"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40f7bcb0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40f63748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40f883e8"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40f883e8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40f86c40"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x40f69b08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40f6a648"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f85718"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x40f7a4a8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x40f7a4a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f77208"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40f76308"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x40634070"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40faa6d0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x407d4bc8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40fa24c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40f9af10"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40f9e9c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40f9a428"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f2f6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fa1bf8"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x40f98128"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40fe4a70"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x40fe4a70"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x410164d8"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40f96b48"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4102b210"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4102b210"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x41024030"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40f955a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x410290b0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x410290b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4101d8a0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40f94010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x410284c8"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x410284c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x410508a0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40f94a90"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x41041ef0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x41041ef0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4106cea0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40fbf430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41158ea8"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41158ea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410867b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40fbe1e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x411554e8"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x411554e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40fbe5f8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x41155ef0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x41155ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40fbf010"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x41157e10"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x41157e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40fbea28"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x41154260"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x41154260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40fc2dc8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x4114f190"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4114f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40f91340"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x4114e2b0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4114e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40f91848"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x4114e6e8"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4114e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40f91d68"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x41152270"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x41152270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40fc6358"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x411526a8"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x411526a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40fc3660"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x411478c0"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x411478c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40fc3110"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x41147488"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x41147488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40fc6868"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x41151bd8"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x41151bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40fc6d60"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x41152ae0"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x41152ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40fc1340"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x41151368"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x41151368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40fbd428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4117be88"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4117be88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410867b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40fbfbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41163980"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41163980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410867b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f90a68"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41189718"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f99b38"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4f010"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x40fb8d48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40fb8568"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40fe44a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41016060"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41016060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41b03b30"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x410164d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41b01010"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41b03b30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41affc68"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41b01010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41afbb48"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41affc68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41aef628"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41af7870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41afd0e8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41afd0e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41aefaa0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41af8630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41007218"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41007218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41005a98"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x41aed4b8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x41af3a90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x41af3a90"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x41aec170"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x41af16b0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x41af16b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x41aecba8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x41af0170"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x41af0170"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x41003cd8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40959440"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x4102bc18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x410227c0"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x4102a688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4101f060"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40fe37e8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x410277f0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x41029aa8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x410530a0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x41026190"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x407c6e68"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x410249a8"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x407f45a8"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x41021190"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x407c7ca8"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4101f9d8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x407cc808"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4101c270"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x407f0ca8"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x41053a18"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x407dd3e8"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4104f270"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x407f1ae8"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x410417f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x410408b8"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x41043618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4106a848"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x41040e90"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x40644e18"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x4106f8e0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x4064d5f8"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x4106e0b0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x407dd3e8"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x4106b4e0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x409f5448"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x4106ae40"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x409f7070"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x41155190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4114fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x4114b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x4114fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x41145b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x41146a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x41155b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x41148190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41146190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x4114c5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x4114d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x411575a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4107bd60"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x41154910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x41154c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x41148c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x41153080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x411465c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x41149cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x41152f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x41149448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x4114b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x41149880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x411456e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x41146e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x4114dcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x4114bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x41147cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4114eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x41144010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x41157ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x41153de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x411517a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x4114ca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x4114ce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4114f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x411533d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x41153a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x411545b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41147050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x411452b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4114c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x41149010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x41155840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4114d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x41153730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x4114d448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x411485c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x411446e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x41077100"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4107d208"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x41077b28"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x410762f0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410867b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41078648"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x41076aa8"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x410a5970"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410ac770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x410ac770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x41076ee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410e4a70"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410e4a70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b4e680"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x41075ec0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x410e2170"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x410e2170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x41bb2170"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x410a7210"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x410e24a8"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x410e24a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x41bb2a80"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41073180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x410a4ef8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x410e6a10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e0100"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x41bb2a80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x41102238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x41bb2170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x41103560"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41b4e680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410cd610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41b4ed38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41baeba8"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41baeba8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40cf5e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x41103560"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x4110a438"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x41bb24a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x41103908"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x41103908"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x4110a770"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41100508"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41bb2e98"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41ba7df0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41103100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x41102a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41bae4f0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41bae4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cf53c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x411009f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x41babbf0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x41babbf0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x40cf64c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41103100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4110a010"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x41102238"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x4110ade0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410cd610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4110b868"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41109a68"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41100508"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x41109308"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x41102a30"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x411065f0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x411009f0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x41109dd0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x40d0fc50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41106a08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x411056d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x41baa030"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x40cf6d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x41baa368"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x40c3bb20"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x41bad428"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x40d0fc50"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41bad010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d202c0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d20a68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41ba7df0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x41174bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x41179190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x41176270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x41173a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x4116e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x41173e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x41168b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x4116aa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x41179b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x4116c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4116a190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x41176ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x41174368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x411705c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x41171880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x411722b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4117a550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x41178910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x41178c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x4116cc00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x41177080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4116a5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x41178260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x4116dcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x41176f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x411766a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x4117adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x4116d448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x4116e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x4116d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x411686e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x4116ae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x41171cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x4116eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4116bcf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x41172b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x41167010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x4117aa68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x41177de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x411747a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x41170a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x411726e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x41170e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x41173190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x411794e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x411735c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x411773d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x41177a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4116b8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4116b488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x411785b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4116b050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x411682b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x41170190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x4116d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x41179840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x41179ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x41171010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x41177730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x41171448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x4116c5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x411676e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4119a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x41162c28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4119ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x411996a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x41195e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x41199ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x4118e6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x4118f5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x411616c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x41193cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41191cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4119b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4119a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x41195190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x41196468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x41199f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x41162060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x4119e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x4119e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x411927c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x4119ec18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4118f190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x41161d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x41193880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4119bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4119b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x411628d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x41193010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x411942b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x41193448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x4118e2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x4118fa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x411968a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x411946e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x411918c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x411987a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4118eb20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x41162578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x4119ca18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4119a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x411955c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x41198368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x41195a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4119adb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x41161010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x41199270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4119c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x4119c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x41191488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x41191050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x4119e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41192c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x4118fe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x41196cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x41194b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x41161368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x41161a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x41198bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x4119c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x41196030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x41192190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4118d270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x411aeb50"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x411d9bd0"/></to>
    </wire>
    <wire loc="59:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x411d8838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4135d360"/></to>
    </wire>
    <wire loc="30:../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4135d360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4138a3c0"/></to>
    </wire>
    <wire loc="60:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x411d2b88"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x4135d9e0"/></to>
    </wire>
    <wire loc="32:../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x4135d9e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x41388010"/></to>
    </wire>
    <wire loc="61:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x411cb108"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4138d1f8"/></to>
    </wire>
    <wire loc="33:../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x4138d1f8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x41389498"/></to>
    </wire>
    <wire loc="62:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x411c72f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x4138d968"/></to>
    </wire>
    <wire loc="34:../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x4138d968"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x41389c08"/></to>
    </wire>
    <wire loc="65:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x411fe068"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4138e328"/></to>
    </wire>
    <wire loc="20:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4138e328"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4137e8c8"/></to>
    </wire>
    <wire loc="68:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x411c11b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4138e948"/></to>
    </wire>
    <wire loc="21:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4138e948"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4137eee8"/></to>
    </wire>
    <wire loc="69:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x411c89b0"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x41646178"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x41646178"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x4163feb8"/></to>
    </wire>
    <wire loc="70:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x411f1dc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x411ac1a0"/></to>
    </wire>
    <wire loc="71:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x411f8bc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41645238"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41645238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x411fe7c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41688ba8"/></to>
    </wire>
    <wire loc="49:../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41688ba8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41c8cd18"/></to>
    </wire>
    <wire loc="79:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x411fc598"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41672ef8"/></to>
    </wire>
    <wire loc="49:../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41672ef8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41c814c8"/></to>
    </wire>
    <wire loc="80:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x411d6ea8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416b0828"/></to>
    </wire>
    <wire loc="49:../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x416b0828"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41c714c8"/></to>
    </wire>
    <wire loc="81:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x411f5f20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x416b1ce8"/></to>
    </wire>
    <wire loc="84:../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x411c76c8"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40ee4d38"/></to>
    </wire>
    <wire loc="430:../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41365610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4138a3c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4157d0e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x41389c08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4156c060"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x41388010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x4156b010"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x41389498"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4156e960"/></to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4157d0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x415d58d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4137e500"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4149bb20"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4149bb20"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x414dc4a8"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4137eee8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x41625cc0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x41625cc0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4161f800"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x413813b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x414920e0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x41388760"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x4156c430"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x4156c430"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x415669b8"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4137e8c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4157e010"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4157e010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4157bcc0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4156c060"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x415665e8"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4137c0f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4149b010"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4149b010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41492988"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4138acf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4156e298"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4156e298"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41567718"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4156e960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x41567e58"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x4156b010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x41565540"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x41388ee8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x4156cbb8"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x4156cbb8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x41565160"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4157cb98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41386c20"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41386c20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41372218"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4156bb68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4154f380"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4154f380"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4154ca10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4154faf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x416255c0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416255c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4161f100"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x416224c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4157e5f8"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4157e5f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41578340"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4157c010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4137a280"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4137a280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41372820"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4156b7b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4157ecd8"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4157ecd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41578a20"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4157c778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4153b2d8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4153b2d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4153a788"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4153bb28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4137a980"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4137a980"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41455b60"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x41373270"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x41371010"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41455b60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41451a40"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41371800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f2f6f0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x41371f28"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40f9e9c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x413b6980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413c55d8"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x413b6980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41455180"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41455180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41451060"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413c55d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413bbec8"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x413b5040"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x413c5a60"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x413c5a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x413b93e0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x413b5800"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x413c11d0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x413c11d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x413b9b18"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x413afe18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x413a95b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x41492f08"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x413b4c98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4150e948"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4150e948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4150a478"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x413a9bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x41511608"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x41511608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x413af1a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x413a8da8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x413a8598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x413accb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x413be2a0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x413b8490"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x413be708"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x413b8918"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x413b8ee0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40fe4a70"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x413f57d0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40fe37e8"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x413f42f0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4102b210"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x413f4ce8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x41029aa8"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x413f5158"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x410417f0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x413f2798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41428e60"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41428e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410867b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x413f2ee8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41427530"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x41427530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x413ee670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x41427a48"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x41427a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x413eea80"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x41426840"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x41426840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x413eeeb0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x41426b98"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x41426b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x413ed318"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x41425910"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x41425910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x413ee188"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x4146b368"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4146b368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x413ef4c8"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x4145e6e8"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4145e6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x413efc68"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41460190"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41460190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x413ed758"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x4146c6a8"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4146c6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x413ec1a0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x4146a5c8"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4146a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x413ec6c0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x4146aa00"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4146aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x413edd50"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x41424730"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x41424730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x413eb570"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x4145f6e8"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x4145f6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x413ecb88"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x41460a00"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x41460a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x413eb090"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x41460e38"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x41460e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x413e62b0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x41455620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x41455620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x41451500"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x413fe910"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x413fd218"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x413f7b78"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414991a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414991a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414dcb00"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x413f0a38"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x41495308"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x41495308"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x414d8cb0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x413e67d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4146bbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x41426190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4146c270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x414652b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x4146ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x4145fb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x41463190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4146cae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x414665c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x41468880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x414692b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x41425c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x41463c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x41424080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x414605c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x41425260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x41464cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4146cf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x41427da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x41464448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x414656e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x41464880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x41468cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x41465b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x41462cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x41469b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4145e010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x41424de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4146b7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x41466a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x414696e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x41466e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4146a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x414264e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x414243d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x41424a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x414628c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x41462488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x414255b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41462050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x4145f2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x41466190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x41464010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x41426ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x41468010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x41468448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x414635c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x41454010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x41451ed8"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4148f0a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x414502c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4102b210"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x41450cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x4102bc18"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x4144f768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x4102a688"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x4144e2a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x41043618"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4144e968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4149c848"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4149c848"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410867b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4144d128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x41527a00"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x41527a00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x4144dce0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x414ea010"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x414ea010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x4144d8b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x414ea6c0"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x414ea6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4144b1f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4144ba30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x414492b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414991a0"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x4144a010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40f2fe28"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x41448e58"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x414e5080"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x414e5080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x41491398"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x414e54b8"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x414e54b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x41448a18"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x414eadf0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x414eadf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x41490238"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x415275c8"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x415275c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x41491860"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x41528448"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x41528448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x41491d28"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x41528880"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x41528880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x41490738"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x41528010"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x41528010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x41490c20"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x414ed430"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x414ed430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x41488330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x41498b50"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414da578"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x414f48c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41007218"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x414d7c18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x41493ef0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x414d6688"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4090c7f0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414f2c38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x414e76e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x414edae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x414e9c78"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x414e2cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x414e58f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x414eb528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x414dfb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x414ddb90"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x414e85c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x414e8e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x414e2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x414e32b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x414e5d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4149cf00"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x414ea368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x414de648"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x414eaa98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x414ebbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x414df6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x414e8a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x414e8190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x414ed788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x414e1e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x414e1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x414df2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x41527190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x414e36e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x414e15c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x414dd758"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x414e45c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x414e9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x414e72b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x414e2448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x414e4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x414e2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x414e7c20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x414ede38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x414e94e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x414dd320"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x414deeb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x414dea80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x41528cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4107d208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x414e3b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x414e1a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x414eb1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x414eb880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x414e4a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x414e9190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x414e4e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x414de010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x41526190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4150e088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4150db00"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41512e20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4150d5e0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41549570"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4154faf0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x41549c40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4154bab8"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4154bab8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41548430"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4150e948"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x415488d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x4153b700"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x4153abb0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41537330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4153bb28"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x415376f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41565cb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4156bb68"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x415644c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4156b7b8"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x41564858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x41563108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x415636c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41586d28"/></to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x41597250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x415d58d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x415d1af0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x4157d750"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4163bcd8"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4163bcd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x415c59c0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4157cb98"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x415c55a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4157c778"/></to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41578e10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4157c010"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x415c25d8"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x415d2010"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x415d2010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x415f7070"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x415c3cf0"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x415d2878"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x415d2878"/></from>
      <to><interface-ref name="State" scoped="" ref="0x415f9e58"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x415c3408"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4163bcd8"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x415c2ed0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41639010"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41639010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x415bd2b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41637e18"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41637e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x415c0300"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x415d5378"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x415d5378"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x415d1598"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x415775c0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x413c5a60"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x415c0e38"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4137c0f0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x415c0880"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x41577cd8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x41373270"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x415ba4b8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4150e948"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x415ba8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x415b6e48"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41633a68"/></to>
    </wire>
    <wire loc="9:../../tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41633a68"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x416306c0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x415b4040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x415b3110"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x415b4830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x415b38f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x415f9e58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x415f7070"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x415c92b0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x413be2a0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x415c9718"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x413be708"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x415c9b90"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x41454010"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x415cc5b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41386c20"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x415cbd28"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x4157d750"/></to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x415ccc60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x415f9e58"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x415cb4f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x415f7070"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x415ce300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x415f62c0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415f62c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x415ca500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40439a78"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x415c69f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x41615250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x415c61d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415f20a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4161e010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x416224c8"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x4161e760"/></from>
      <to><interface-ref name="State" scoped="" ref="0x416510a0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x416510a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x410e6a10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x4161c678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x416502f0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x416502f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4161c010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4149b010"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4161a8d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x41619ee0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41644140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4137c0f0"/></to>
    </wire>
    <wire loc="18:../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4163e380"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></to>
    </wire>
    <wire loc="19:../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x4170cb38"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x41706e40"/></to>
    </wire>
    <wire loc="18:../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x4170c3b8"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x41706100"/></to>
    </wire>
    <wire loc="22:../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x417059c0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40e5ddf0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41705e18"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="43:../../tos/platforms/hemera/hardware.h">
        <short>&#10; Hardware definition for the Hemera platform.</short>
        <long>&#10; Hardware definition for the Hemera platform.&#10;&#10; @author Brad Campbell&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="43:../../tos/platforms/epic/PlatformC.nc">
      <documentation loc="43:../../tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="43:../../tos/platforms/epic/PlatformP.nc">
      <documentation loc="43:../../tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/epic/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/epic/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/epic/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/epic/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/epic/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="HemeraSamplerP" loc="7:HemeraSamplerP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="3:../../tos/platforms/epic/PlatformLedsC.nc">
      <documentation loc="43:../../tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HemeraSamplerC.TimerTHL" loc="44(HemeraSamplerC.TimerTHL):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <value cst="I:11">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HemeraSamplerC.SensirionSen" loc="45(HemeraSamplerC.SensirionSen):../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP" loc="45(HemeraSamplerC.SensirionSen.SensirionSht11ReaderP):../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RohmBH17C" loc="9:../../tos/chips/bh17/RohmBH17C.nc">
      <documentation loc="1:../../tos/chips/bh17/RohmBH17C.nc">
        <short>&#10; RohmBH17C is a top-level access component for the Rohm&#10; BH17xx model light sensor.</short>
        <long>&#10; RohmBH17C is a top-level access component for the Rohm&#10; BH17xx model light sensor.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10; @version 1.5&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RohmBH17P" loc="17:../../tos/chips/bh17/RohmBH17P.nc">
      <documentation loc="3:../../tos/chips/bh17/RohmBH17P.nc">
        <short>&#10; RohmBH17P contains the actual driver logic needed to&#10; read from the Rohm BH17xx digital light sensor.</short>
        <long>&#10; RohmBH17P contains the actual driver logic needed to&#10; read from the Rohm BH17xx digital light sensor. It&#10; uses the I2C interface and timer to wait for the measurement to&#10; complete.&#10;&#10; Currently the driver only supports single measurements in&#10; high-resolution mode.&#10;&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10; @version 1.5&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRohmBH17C" loc="9:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <documentation loc="1:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
        <short>&#10; HplRhomBH17C defines which GPIO the reset pin is connected to and which&#10; I2C bus to use.</short>
        <long>&#10; HplRhomBH17C defines which GPIO the reset pin is connected to and which&#10; I2C bus to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10; @version 1.5&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplRohmBH17C.Msp430I2CC" loc="40(HplRohmBH17C.Msp430I2CC):../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <instance number="0">
        <component-ref qname="Msp430I2CC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430I2C0P" loc="37:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430I2CP" loc="39:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <documentation loc="32:../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRohmBH17C.Msp430I2CC.UsartC" loc="39(HplRohmBH17C.Msp430I2CC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplRohmBH17C.MspGpio" loc="42(HplRohmBH17C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="RohmBH17C.TimerWait" loc="44(RohmBH17C.TimerWait):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BatteryAdcC" loc="2:../../tos/platforms/hemera/BatteryAdcC.nc">
      <configuration/>
    </component>
    <component qname="BatteryAdcC.Adc" loc="45(BatteryAdcC.Adc):../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="BatteryAdcP" loc="3:../../tos/platforms/hemera/BatteryAdcP.nc">
      <module/>
    </component>
    <component qname="IPStackC" loc="29:../../tos/lib/net/blip/IPStackC.nc">
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="7:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="20:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPAddressC" loc="28:../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
        <long>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchC" loc="33:../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="86:../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="47:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="44(PowerCycleC.OnTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="44(PowerCycleC.CheckTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="44(DefaultLplC.OffTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="44(DefaultLplC.SendDoneTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:../../tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:../../tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="PacketLinkC" loc="40:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../tos/system/PoolC.nc">
      <documentation loc="33:../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
            <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../tos/system/PoolP.nc">
      <documentation loc="34:../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41689688"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../tos/system/PoolC.nc">
      <documentation loc="33:../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../tos/system/PoolP.nc">
      <documentation loc="34:../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41689688"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../tos/system/QueueC.nc">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../tos/system/PoolC.nc">
      <documentation loc="33:../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../tos/system/PoolP.nc">
      <documentation loc="34:../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41689688"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="8:../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../tos/system/PoolC.nc">
      <documentation loc="33:../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40752010"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../tos/system/PoolP.nc">
      <documentation loc="34:../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41689688"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HemeraSamplerC.UDPService" loc="7(HemeraSamplerC.UDPService):../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x40649b88" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x40649dc0" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x40658030" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x40658248" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x40658460" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x40658670" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x40658898" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x40658ac0" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x40658d30" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x4067c108" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x4067c368" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x4081b7b8" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x4081b9e8" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x4081bc18" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x4081be48" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x4081a068" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40921428" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40921428"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40954010" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40954010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40968090" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40968090"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x409684f0" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x409684f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40968758" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40968758"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40968bc8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40968bc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40968e30" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x409672e0" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x409672e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40942b00" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40942b00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40973010" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40973010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40973278" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40973278"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x409736e8" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x409736e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40973950" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40991e18" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40991e18"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409b1630" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409b1630"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x409b1810" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409e5cd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409e5cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b0fb30" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40b25010" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40b27970" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430I2CC" loc="40:../../tos/chips/msp430/usart/Msp430I2CC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ClientC" loc="45:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e08908" loc="83:../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40e143f8" loc="42:../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40f877c8" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40f877c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40f87bf8" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f87bf8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x41689688" loc="41:../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41689688"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x416898a8" loc="41:../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x41685b88" loc="53:../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41685b88"/></type-var>
        </typedef>
        <constant name="size" ref="0x41685d78" loc="53:../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x41670dd8" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x41670dd8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x4166d030" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x405f7010" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x405f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405f5320" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x405f5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405f54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405f7900" loc="45:../../tos/platforms/epic/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x405f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40601998" loc="49:../../tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x40601998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40601b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406011a8" loc="45:../../tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406011a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40601380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x406015d8" loc="48:../../tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x406015d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406017b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40601d58" loc="50:../../tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x40601d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40600010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x406036b0" loc="39:../../tos/platforms/epic/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x406036b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40603888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x406065d8" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x406065d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x40606dd0"/>
        <function-ref name="initTimerB" scoped="" ref="0x40606890"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x40606970"/>
        <function-ref name="initTimerA" scoped="" ref="0x40606a50"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x406067b0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x40606b30"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x40606c10"/>
        <function-ref name="initClocks" scoped="" ref="0x40606cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40603f00" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40603f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x4060c848" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x4060c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x4061b0f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x4060cb00"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x4060cbe0"/>
        <function-ref name="initTimerA" scoped="" ref="0x4060ccc0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x4060ca20"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x4060cda0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x4060ce80"/>
        <function-ref name="initClocks" scoped="" ref="0x4061b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4061b2f8" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x4061b2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4061b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4060c478" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4060c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060c650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x4062e468" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x4062e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4062e640"/>
        <function-ref name="getControl" scoped="" ref="0x4062e720"/>
        <function-ref name="enableEvents" scoped="" ref="0x4062e800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4062e8e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4062e9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4062eaa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4062eb80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4062ec60"/>
        <function-ref name="setControl" scoped="" ref="0x4062ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x406442a8" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x406442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40644480"/>
        <function-ref name="getControl" scoped="" ref="0x40644560"/>
        <function-ref name="enableEvents" scoped="" ref="0x40644640"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40644720"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40644800"/>
        <function-ref name="disableEvents" scoped="" ref="0x406448e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406449c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40644aa0"/>
        <function-ref name="setControl" scoped="" ref="0x40644b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x40637358" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x40637358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40637530"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40637610"/>
        <function-ref name="captured" scoped="" ref="0x406376f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406377d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406378b0"/>
        <function-ref name="setEdge" scoped="" ref="0x40637990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x4064c788" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x4064c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064c960"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064ca40"/>
        <function-ref name="captured" scoped="" ref="0x4064cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064cc00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064cce0"/>
        <function-ref name="setEdge" scoped="" ref="0x4064cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x4063b438" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x4063b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4063b610"/>
        <function-ref name="setEvent" scoped="" ref="0x4063b6f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4063b7d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4063b8b0"/>
        <function-ref name="fired" scoped="" ref="0x4063b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x40650bf8" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x40650bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40650dd0"/>
        <function-ref name="setEvent" scoped="" ref="0x40650eb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4064f010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4064f0f0"/>
        <function-ref name="fired" scoped="" ref="0x4064f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x4064a278" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x4064a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064a450"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064a530"/>
        <function-ref name="captured" scoped="" ref="0x4064a610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064a6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064a7d0"/>
        <function-ref name="setEdge" scoped="" ref="0x4064a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x406411c8" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x406411c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406413a0"/>
        <function-ref name="getControl" scoped="" ref="0x40641480"/>
        <function-ref name="enableEvents" scoped="" ref="0x40641560"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40641640"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40641720"/>
        <function-ref name="disableEvents" scoped="" ref="0x40641800"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406418e0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406419c0"/>
        <function-ref name="setControl" scoped="" ref="0x40641aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x4063dcc8" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x4063dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4063dea0"/>
        <function-ref name="getControl" scoped="" ref="0x40633010"/>
        <function-ref name="enableEvents" scoped="" ref="0x406330f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406331d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406332b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40633390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40633470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40633550"/>
        <function-ref name="setControl" scoped="" ref="0x40633630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x4064d5f8" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x4064d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064d7d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064d8b0"/>
        <function-ref name="captured" scoped="" ref="0x4064d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064da70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064db50"/>
        <function-ref name="setEdge" scoped="" ref="0x4064dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x40651bf8" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x40651bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40651dd0"/>
        <function-ref name="setEvent" scoped="" ref="0x40651eb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40650010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406500f0"/>
        <function-ref name="fired" scoped="" ref="0x406501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x40644e18" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x40644e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406430c0"/>
        <function-ref name="getControl" scoped="" ref="0x406431a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40643280"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40643360"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40643440"/>
        <function-ref name="disableEvents" scoped="" ref="0x40643520"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40643600"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406436e0"/>
        <function-ref name="setControl" scoped="" ref="0x406437c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x40637bf8" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x40637bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40637dd0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40637eb0"/>
        <function-ref name="captured" scoped="" ref="0x40645010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406450f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406451d0"/>
        <function-ref name="setEdge" scoped="" ref="0x406452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x4064b090" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x4064b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064b268"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064b348"/>
        <function-ref name="captured" scoped="" ref="0x4064b428"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064b508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064b5e8"/>
        <function-ref name="setEdge" scoped="" ref="0x4064b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x40643a58" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x40643a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40643c30"/>
        <function-ref name="getControl" scoped="" ref="0x40643d10"/>
        <function-ref name="enableEvents" scoped="" ref="0x40643df0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40643ed0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40642010"/>
        <function-ref name="disableEvents" scoped="" ref="0x406420f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406421d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406422b0"/>
        <function-ref name="setControl" scoped="" ref="0x40642390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x4063bbf8" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x4063bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4063bdd0"/>
        <function-ref name="setEvent" scoped="" ref="0x4063beb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4063a010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4063a0f0"/>
        <function-ref name="fired" scoped="" ref="0x4063a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x40634070" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x40634070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40634248"/>
        <function-ref name="setClockSource" scoped="" ref="0x40634328"/>
        <function-ref name="enableEvents" scoped="" ref="0x40634408"/>
        <function-ref name="get" scoped="" ref="0x406344e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x406345c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406346a8"/>
        <function-ref name="getMode" scoped="" ref="0x40634788"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40634868"/>
        <function-ref name="overflow" scoped="" ref="0x40634948"/>
        <function-ref name="setMode" scoped="" ref="0x40634a28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40634b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x4064f438" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x4064f438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064f610"/>
        <function-ref name="setEvent" scoped="" ref="0x4064f6f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4064f7d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4064f8b0"/>
        <function-ref name="fired" scoped="" ref="0x4064f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x406338c8" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x406338c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40633aa0"/>
        <function-ref name="getControl" scoped="" ref="0x40633b80"/>
        <function-ref name="enableEvents" scoped="" ref="0x40633c60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40633d40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40633e20"/>
        <function-ref name="disableEvents" scoped="" ref="0x40633f00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4062e010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4062e0f0"/>
        <function-ref name="setControl" scoped="" ref="0x4062e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x40641d38" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x40641d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40641f10"/>
        <function-ref name="getControl" scoped="" ref="0x40640010"/>
        <function-ref name="enableEvents" scoped="" ref="0x406400f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406401d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406402b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40640390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40640470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40640550"/>
        <function-ref name="setControl" scoped="" ref="0x40640630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x406469d8" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x406469d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40646bb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40646c90"/>
        <function-ref name="captured" scoped="" ref="0x40646d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40646e50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40637010"/>
        <function-ref name="setEdge" scoped="" ref="0x406370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x4064de98" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x4064de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064c0c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064c1a0"/>
        <function-ref name="captured" scoped="" ref="0x4064c280"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064c440"/>
        <function-ref name="setEdge" scoped="" ref="0x4064c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x40638b98" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x40638b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40638d70"/>
        <function-ref name="setEvent" scoped="" ref="0x40638e50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4063b010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4063b0f0"/>
        <function-ref name="fired" scoped="" ref="0x4063b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x40650438" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x40650438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40650610"/>
        <function-ref name="setEvent" scoped="" ref="0x406506f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406507d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406508b0"/>
        <function-ref name="fired" scoped="" ref="0x40650990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x4064b930" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x4064b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064bb08"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064bbe8"/>
        <function-ref name="captured" scoped="" ref="0x4064bcc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064bda8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064be88"/>
        <function-ref name="setEdge" scoped="" ref="0x4064a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x40642628" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x40642628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40642800"/>
        <function-ref name="getControl" scoped="" ref="0x406428e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x406429c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40642aa0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40642b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x40642c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40642d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40642e20"/>
        <function-ref name="setControl" scoped="" ref="0x40642f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x406454e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x406454e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406456b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x40645798"/>
        <function-ref name="enableEvents" scoped="" ref="0x40645878"/>
        <function-ref name="get" scoped="" ref="0x40645958"/>
        <function-ref name="disableEvents" scoped="" ref="0x40645a38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40645b18"/>
        <function-ref name="getMode" scoped="" ref="0x40645bf8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40645cd8"/>
        <function-ref name="overflow" scoped="" ref="0x40645db8"/>
        <function-ref name="setMode" scoped="" ref="0x40645e98"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40644010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x4064fbf8" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x4064fbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064fdd0"/>
        <function-ref name="setEvent" scoped="" ref="0x4064feb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4064e010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4064e0f0"/>
        <function-ref name="fired" scoped="" ref="0x4064e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x4064ecf8" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x4064ecf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064eed0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4064d010"/>
        <function-ref name="captured" scoped="" ref="0x4064d0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064d1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064d2b0"/>
        <function-ref name="setEdge" scoped="" ref="0x4064d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x4064e438" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x4064e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4064e710"/>
        <function-ref name="setEvent" scoped="" ref="0x4064e7f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4064e8d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4064e9b0"/>
        <function-ref name="fired" scoped="" ref="0x4064ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x40651438" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x40651438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40651610"/>
        <function-ref name="setEvent" scoped="" ref="0x406516f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406517d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406518b0"/>
        <function-ref name="fired" scoped="" ref="0x40651990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x406408c8" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x406408c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40640aa0"/>
        <function-ref name="getControl" scoped="" ref="0x40640b80"/>
        <function-ref name="enableEvents" scoped="" ref="0x40640c60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40640d40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40640e20"/>
        <function-ref name="disableEvents" scoped="" ref="0x40640f00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40651010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406510f0"/>
        <function-ref name="setControl" scoped="" ref="0x406511d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x40672200" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x40672200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406723d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x40659e90" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x40659e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40672080"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x40672558" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x40672558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40672730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x40659b28" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40659b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40659d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4065ae58" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4065ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40659050"/>
        <function-ref name="setClockSource" scoped="" ref="0x40659130"/>
        <function-ref name="enableEvents" scoped="" ref="0x40659210"/>
        <function-ref name="get" scoped="" ref="0x406592f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406593d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406594b0"/>
        <function-ref name="getMode" scoped="" ref="0x40659590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40659670"/>
        <function-ref name="overflow" scoped="" ref="0x40659750"/>
        <function-ref name="setMode" scoped="" ref="0x40659830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40659910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x4066fc68" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x4066fc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x4066f910" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x4066f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066fae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x4066e010" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x4066e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x4066f5a8" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x4066f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40670838" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40670838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40670a10"/>
        <function-ref name="setClockSource" scoped="" ref="0x40670af0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40670bd0"/>
        <function-ref name="get" scoped="" ref="0x40670cb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40670d90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40670e70"/>
        <function-ref name="getMode" scoped="" ref="0x4066f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4066f0f0"/>
        <function-ref name="overflow" scoped="" ref="0x4066f1d0"/>
        <function-ref name="setMode" scoped="" ref="0x4066f2b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4066f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4067dbe8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x4067dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4067ddc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4067dea0"/>
        <function-ref name="captured" scoped="" ref="0x4069d010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4069d0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4069d1d0"/>
        <function-ref name="setEdge" scoped="" ref="0x4069d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x4066da10" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x4066da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4066dbe8"/>
        <function-ref name="getControl" scoped="" ref="0x4066dcc8"/>
        <function-ref name="enableEvents" scoped="" ref="0x4066dda8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4066de88"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4067d010"/>
        <function-ref name="disableEvents" scoped="" ref="0x4067d0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4067d1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4067d2b0"/>
        <function-ref name="setControl" scoped="" ref="0x4067d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x4069c080" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x4069c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4069c258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4067d510" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x4067d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4067d6e8"/>
        <function-ref name="setEvent" scoped="" ref="0x4067d7c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4067d8a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4067d988"/>
        <function-ref name="fired" scoped="" ref="0x4067da68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4069d430" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4069d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4069d608"/>
        <function-ref name="setClockSource" scoped="" ref="0x4069d6e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x4069d7c8"/>
        <function-ref name="get" scoped="" ref="0x4069d8a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x4069d988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4069da68"/>
        <function-ref name="getMode" scoped="" ref="0x4069db48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4069dc28"/>
        <function-ref name="overflow" scoped="" ref="0x4069dd08"/>
        <function-ref name="setMode" scoped="" ref="0x4069dde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4069dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406acb08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406acb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406acce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406acdc0"/>
        <function-ref name="captured" scoped="" ref="0x406acea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ab010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ab0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x406ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x4069a8f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x4069a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4069aad0"/>
        <function-ref name="getControl" scoped="" ref="0x4069abb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4069ac90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4069ad70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4069ae50"/>
        <function-ref name="disableEvents" scoped="" ref="0x406ac010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406ac0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406ac1d0"/>
        <function-ref name="setControl" scoped="" ref="0x406ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406aa010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406aa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406ac430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406ac430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406ac608"/>
        <function-ref name="setEvent" scoped="" ref="0x406ac6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406ac7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406ac8a8"/>
        <function-ref name="fired" scoped="" ref="0x406ac988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406ab350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406ab350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ab528"/>
        <function-ref name="setClockSource" scoped="" ref="0x406ab608"/>
        <function-ref name="enableEvents" scoped="" ref="0x406ab6e8"/>
        <function-ref name="get" scoped="" ref="0x406ab7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x406ab8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ab988"/>
        <function-ref name="getMode" scoped="" ref="0x406aba68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406abb48"/>
        <function-ref name="overflow" scoped="" ref="0x406abc28"/>
        <function-ref name="setMode" scoped="" ref="0x406abd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406abde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406a8a28" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406a8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406a8c00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406a8ce0"/>
        <function-ref name="captured" scoped="" ref="0x406a8dc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a8ea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a7010"/>
        <function-ref name="setEdge" scoped="" ref="0x406a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406a9870" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406a9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406a9a48"/>
        <function-ref name="getControl" scoped="" ref="0x406a9b28"/>
        <function-ref name="enableEvents" scoped="" ref="0x406a9c08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406a9ce8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406a9dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x406a9ea8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406a8010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406a80f0"/>
        <function-ref name="setControl" scoped="" ref="0x406a81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406a7e88" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406a7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406a6070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406a8350" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406a8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406a8528"/>
        <function-ref name="setEvent" scoped="" ref="0x406a8608"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406a86e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406a87c8"/>
        <function-ref name="fired" scoped="" ref="0x406a88a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406a7270" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406a7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a7448"/>
        <function-ref name="setClockSource" scoped="" ref="0x406a7528"/>
        <function-ref name="enableEvents" scoped="" ref="0x406a7608"/>
        <function-ref name="get" scoped="" ref="0x406a76e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x406a77c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a78a8"/>
        <function-ref name="getMode" scoped="" ref="0x406a7988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a7a68"/>
        <function-ref name="overflow" scoped="" ref="0x406a7b48"/>
        <function-ref name="setMode" scoped="" ref="0x406a7c28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406a7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406a4868" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406a4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406a4a40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406a4b20"/>
        <function-ref name="captured" scoped="" ref="0x406a4c00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a4ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a4dc0"/>
        <function-ref name="setEdge" scoped="" ref="0x406a4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406a5700" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406a5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406a58d8"/>
        <function-ref name="getControl" scoped="" ref="0x406a59b8"/>
        <function-ref name="enableEvents" scoped="" ref="0x406a5a98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406a5b78"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406a5c58"/>
        <function-ref name="disableEvents" scoped="" ref="0x406a5d38"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406a5e18"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406a5ef8"/>
        <function-ref name="setControl" scoped="" ref="0x406a4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406a3c68" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406a3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406a3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406a4190" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406a4368"/>
        <function-ref name="setEvent" scoped="" ref="0x406a4448"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406a4528"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406a4608"/>
        <function-ref name="fired" scoped="" ref="0x406a46e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406a3050" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406a3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a3228"/>
        <function-ref name="setClockSource" scoped="" ref="0x406a3308"/>
        <function-ref name="enableEvents" scoped="" ref="0x406a33e8"/>
        <function-ref name="get" scoped="" ref="0x406a34c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x406a35a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a3688"/>
        <function-ref name="getMode" scoped="" ref="0x406a3768"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a3848"/>
        <function-ref name="overflow" scoped="" ref="0x406a3928"/>
        <function-ref name="setMode" scoped="" ref="0x406a3a08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406a3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406b46e8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406b46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406b48c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406b49a0"/>
        <function-ref name="captured" scoped="" ref="0x406b4a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b4b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b4c40"/>
        <function-ref name="setEdge" scoped="" ref="0x406b4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406b5588" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406b5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406b5760"/>
        <function-ref name="getControl" scoped="" ref="0x406b5840"/>
        <function-ref name="enableEvents" scoped="" ref="0x406b5920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406b5a00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406b5ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406b5bc0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406b5ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406b5d80"/>
        <function-ref name="setControl" scoped="" ref="0x406b5e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406b2b00" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406b2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406b2cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406b4010" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406b41e8"/>
        <function-ref name="setEvent" scoped="" ref="0x406b42c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406b43a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406b4488"/>
        <function-ref name="fired" scoped="" ref="0x406b4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406b4ea0" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406b4ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406b20c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x406b21a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x406b2280"/>
        <function-ref name="get" scoped="" ref="0x406b2360"/>
        <function-ref name="disableEvents" scoped="" ref="0x406b2440"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b2520"/>
        <function-ref name="getMode" scoped="" ref="0x406b2600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b26e0"/>
        <function-ref name="overflow" scoped="" ref="0x406b27c0"/>
        <function-ref name="setMode" scoped="" ref="0x406b28a0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406af570" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406af570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406af748"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406af828"/>
        <function-ref name="captured" scoped="" ref="0x406af908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406af9e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406afac8"/>
        <function-ref name="setEdge" scoped="" ref="0x406afba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406b0430" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406b0608"/>
        <function-ref name="getControl" scoped="" ref="0x406b06e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x406b07c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406b08a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406b0988"/>
        <function-ref name="disableEvents" scoped="" ref="0x406b0a68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406b0b48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406b0c28"/>
        <function-ref name="setControl" scoped="" ref="0x406b0d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406ae970" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406ae970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406aeb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406b0e88" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406b0e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406af070"/>
        <function-ref name="setEvent" scoped="" ref="0x406af150"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406af230"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406af310"/>
        <function-ref name="fired" scoped="" ref="0x406af3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406afd28" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406afd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406aff00"/>
        <function-ref name="setClockSource" scoped="" ref="0x406ae010"/>
        <function-ref name="enableEvents" scoped="" ref="0x406ae0f0"/>
        <function-ref name="get" scoped="" ref="0x406ae1d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406ae2b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ae390"/>
        <function-ref name="getMode" scoped="" ref="0x406ae470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ae550"/>
        <function-ref name="overflow" scoped="" ref="0x406ae630"/>
        <function-ref name="setMode" scoped="" ref="0x406ae710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406bf430" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406bf608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406bf6e8"/>
        <function-ref name="captured" scoped="" ref="0x406bf7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406bf8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406bf988"/>
        <function-ref name="setEdge" scoped="" ref="0x406bfa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406c0220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406c0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406c03f8"/>
        <function-ref name="getControl" scoped="" ref="0x406c04d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x406c05b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406c0698"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406c0778"/>
        <function-ref name="disableEvents" scoped="" ref="0x406c0858"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406c0938"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406c0a18"/>
        <function-ref name="setControl" scoped="" ref="0x406c0af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406be890" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406be890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406bea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406c0c78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406c0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406c0e50"/>
        <function-ref name="setEvent" scoped="" ref="0x406bf010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406bf0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406bf1d0"/>
        <function-ref name="fired" scoped="" ref="0x406bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406bfbe8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406bfbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406bfdc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x406bfea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x406be010"/>
        <function-ref name="get" scoped="" ref="0x406be0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406be1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406be2b0"/>
        <function-ref name="getMode" scoped="" ref="0x406be390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406be470"/>
        <function-ref name="overflow" scoped="" ref="0x406be550"/>
        <function-ref name="setMode" scoped="" ref="0x406be630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406be710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406bb270" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406bb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406bb448"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406bb528"/>
        <function-ref name="captured" scoped="" ref="0x406bb608"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406bb6e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406bb7c8"/>
        <function-ref name="setEdge" scoped="" ref="0x406bb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406bc120" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406bc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406bc2f8"/>
        <function-ref name="getControl" scoped="" ref="0x406bc3d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x406bc4b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406bc598"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406bc678"/>
        <function-ref name="disableEvents" scoped="" ref="0x406bc758"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406bc838"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406bc918"/>
        <function-ref name="setControl" scoped="" ref="0x406bc9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406ba6d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406ba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406ba8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406bcb78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406bcb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406bcd50"/>
        <function-ref name="setEvent" scoped="" ref="0x406bce30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406bcf10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406bb010"/>
        <function-ref name="fired" scoped="" ref="0x406bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406bba28" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406bba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406bbc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x406bbce0"/>
        <function-ref name="enableEvents" scoped="" ref="0x406bbdc0"/>
        <function-ref name="get" scoped="" ref="0x406bbea0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406ba010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ba0f0"/>
        <function-ref name="getMode" scoped="" ref="0x406ba1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ba2b0"/>
        <function-ref name="overflow" scoped="" ref="0x406ba390"/>
        <function-ref name="setMode" scoped="" ref="0x406ba470"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406ca190" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406ca190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406ca368"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406ca448"/>
        <function-ref name="captured" scoped="" ref="0x406ca528"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ca608"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ca6e8"/>
        <function-ref name="setEdge" scoped="" ref="0x406ca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406b7010" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406b71e8"/>
        <function-ref name="getControl" scoped="" ref="0x406b72c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x406b73a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406b7488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406b7568"/>
        <function-ref name="disableEvents" scoped="" ref="0x406b7648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406b7728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406b7808"/>
        <function-ref name="setControl" scoped="" ref="0x406b78e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406c95f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406c95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406b7a68" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406b7a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406b7c40"/>
        <function-ref name="setEvent" scoped="" ref="0x406b7d20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406b7e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406b7ee0"/>
        <function-ref name="fired" scoped="" ref="0x406ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406ca948" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406ca948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406cab20"/>
        <function-ref name="setClockSource" scoped="" ref="0x406cac00"/>
        <function-ref name="enableEvents" scoped="" ref="0x406cace0"/>
        <function-ref name="get" scoped="" ref="0x406cadc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406caea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c9010"/>
        <function-ref name="getMode" scoped="" ref="0x406c90f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c91d0"/>
        <function-ref name="overflow" scoped="" ref="0x406c92b0"/>
        <function-ref name="setMode" scoped="" ref="0x406c9390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406c6010" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x406c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406c61e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x406c62c8"/>
        <function-ref name="captured" scoped="" ref="0x406c63a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c6488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c6568"/>
        <function-ref name="setEdge" scoped="" ref="0x406c6648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x406c8e68" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x406c8e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406c7050"/>
        <function-ref name="getControl" scoped="" ref="0x406c7130"/>
        <function-ref name="enableEvents" scoped="" ref="0x406c7210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x406c72f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x406c73d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x406c74b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x406c7590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x406c7670"/>
        <function-ref name="setControl" scoped="" ref="0x406c7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x406c5430" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x406c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406c78d0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x406c78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406c7aa8"/>
        <function-ref name="setEvent" scoped="" ref="0x406c7b88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x406c7c68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x406c7d48"/>
        <function-ref name="fired" scoped="" ref="0x406c7e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406c67c8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406c67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c69a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x406c6a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x406c6b60"/>
        <function-ref name="get" scoped="" ref="0x406c6c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x406c6d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c6e00"/>
        <function-ref name="getMode" scoped="" ref="0x406c6ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c5010"/>
        <function-ref name="overflow" scoped="" ref="0x406c50f0"/>
        <function-ref name="setMode" scoped="" ref="0x406c51d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x406c1748" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x406c1748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c1920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x406c4980" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x406c4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c4b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x406c4e08" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x406c4e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x406c12c0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x406c12c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c1498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x405e4570" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x405e4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405e4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403a5a90" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x403a5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403a5c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x405e5780" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x405e5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405e5958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x406e5f28" loc="39:../../tos/platforms/epic/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x406e5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x406e4730"/>
        <function-ref name="initTimerB" scoped="" ref="0x406e41f0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x406e42d0"/>
        <function-ref name="initTimerA" scoped="" ref="0x406e43b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x406e4110"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x406e4490"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x406e4570"/>
        <function-ref name="initClocks" scoped="" ref="0x406e4650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4060b208" loc="3:../../tos/platforms/epic/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubInit" scoped="" ref="0x4060b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405fce10" loc="2:../../tos/platforms/epic/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x405fce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x406ed280" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x406ed280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ed458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405f64e0" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x405f64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405f66b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x405f6e40" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x405f6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ed050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405f6878" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x405f6878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f6a50"/>
        <function-ref name="taskLoop" scoped="" ref="0x405f6b30"/>
        <function-ref name="runNextTask" scoped="" ref="0x405f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403a7178" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x403a7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403a7350"/>
        <function-ref name="runTask" scoped="" ref="0x403a7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403a69d8" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x403a69d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a6bb0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403a6c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x403a6d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x405d4590" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x405d4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405d4768"/>
        <function-ref name="runTask" scoped="" ref="0x405d4848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x405e3210" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x405e3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405e33e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x405d5d38" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x405d5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d5f10"/>
        <function-ref name="taskLoop" scoped="" ref="0x405d4010"/>
        <function-ref name="runNextTask" scoped="" ref="0x405d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4077ac18" loc="15:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x4077ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4077adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTHL" ref="0x4077dd48" loc="9:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTHL" scoped="" ref="0x4077dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4076b8a8"/>
        <function-ref name="fired" scoped="" ref="0x4076cb18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4076b268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4076b010"/>
        <function-ref name="getdt" scoped="" ref="0x4076bd58"/>
        <function-ref name="gett0" scoped="" ref="0x4076bb00"/>
        <function-ref name="isRunning" scoped="" ref="0x4076cd70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4076c3c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4076b588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4076c640"/>
        <function-ref name="stop" scoped="" ref="0x4076c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x407921f8" loc="27:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x407921f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407923d0"/>
        <function-ref name="stopDone" scoped="" ref="0x407924b0"/>
        <function-ref name="start" scoped="" ref="0x40792590"/>
        <function-ref name="stop" scoped="" ref="0x40792670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MotionSensor" ref="0x407958b0" loc="25:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MotionSensor" scoped="" ref="0x407958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40795a88"/>
        <function-ref name="fired" scoped="" ref="0x40795b68"/>
        <function-ref name="disable" scoped="" ref="0x40795c48"/>
        <function-ref name="edge" scoped="" ref="0x40795d28"/>
        <function-ref name="enable" scoped="" ref="0x40795e08"/>
        <function-ref name="getValue" scoped="" ref="0x40795ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x4078e698" loc="31:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Hum" scoped="" ref="0x4078e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4078ecc0"/>
        <function-ref name="readDone" scoped="" ref="0x4078ef18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightSensor" ref="0x4078c3b0" loc="32:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightSensor" scoped="" ref="0x4078c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4078c9d8"/>
        <function-ref name="readDone" scoped="" ref="0x4078cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UDPService" ref="0x4078fe80" loc="28:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDPService" scoped="" ref="0x4078fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x40782070"/>
        <function-ref name="bind" scoped="" ref="0x40782150"/>
        <function-ref name="sendtov" scoped="" ref="0x40782230"/>
        <function-ref name="recvfrom" scoped="" ref="0x40782310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4077a010" loc="14:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x4077a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4077a1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4077a2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4077a3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4077a488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4077a568"/>
        <function-ref name="get" scoped="" ref="0x4077a648"/>
        <function-ref name="led1Off" scoped="" ref="0x4077a728"/>
        <function-ref name="led2Off" scoped="" ref="0x4077aaa8"/>
        <function-ref name="set" scoped="" ref="0x4077a808"/>
        <function-ref name="led0On" scoped="" ref="0x4077a8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4077a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x4078d930" loc="30:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temp" scoped="" ref="0x4078d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4078e010"/>
        <function-ref name="readDone" scoped="" ref="0x4078e268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MotionSensorGpIO" ref="0x40783768" loc="24:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MotionSensorGpIO" scoped="" ref="0x40783768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40783940"/>
        <function-ref name="isInput" scoped="" ref="0x40783a20"/>
        <function-ref name="setResistor" scoped="" ref="0x40783b00"/>
        <function-ref name="toggle" scoped="" ref="0x40783be0"/>
        <function-ref name="isOutput" scoped="" ref="0x40783cc0"/>
        <function-ref name="getResistor" scoped="" ref="0x40783da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40783e80"/>
        <function-ref name="get" scoped="" ref="0x40789010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407890f0"/>
        <function-ref name="getRaw" scoped="" ref="0x407891d0"/>
        <function-ref name="set" scoped="" ref="0x407892b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40789390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40789470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407895d0"/>
        <function-ref name="clr" scoped="" ref="0x407896b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatSensor" ref="0x4078b0c0" loc="34:HemeraSamplerP.nc">
      <component-ref qname="HemeraSamplerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BatSensor" scoped="" ref="0x4078b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4078b6e8"/>
        <function-ref name="readDone" scoped="" ref="0x4078b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40439a78" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x40439a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40439c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40439d30"/>
        <function-ref name="led1On" scoped="" ref="0x40439e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40439ef0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407b6010"/>
        <function-ref name="get" scoped="" ref="0x407b60f0"/>
        <function-ref name="led1Off" scoped="" ref="0x407b61d0"/>
        <function-ref name="led2Off" scoped="" ref="0x407b6550"/>
        <function-ref name="set" scoped="" ref="0x407b62b0"/>
        <function-ref name="led0On" scoped="" ref="0x407b6390"/>
        <function-ref name="led2On" scoped="" ref="0x407b6470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407b2010" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x407b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b21e8"/>
        <function-ref name="isInput" scoped="" ref="0x407b22c8"/>
        <function-ref name="toggle" scoped="" ref="0x407b23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407b2488"/>
        <function-ref name="get" scoped="" ref="0x407b2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b2648"/>
        <function-ref name="set" scoped="" ref="0x407b2728"/>
        <function-ref name="clr" scoped="" ref="0x407b2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407b6dc8" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407b6dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407b29f8" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x407b29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b2bd0"/>
        <function-ref name="isInput" scoped="" ref="0x407b2cb0"/>
        <function-ref name="toggle" scoped="" ref="0x407b2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x407b2e70"/>
        <function-ref name="get" scoped="" ref="0x407b1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b10f0"/>
        <function-ref name="set" scoped="" ref="0x407b11d0"/>
        <function-ref name="clr" scoped="" ref="0x407b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407b3180" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x407b3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407b3358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407b3438"/>
        <function-ref name="led1On" scoped="" ref="0x407b3518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407b35f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407b36d8"/>
        <function-ref name="get" scoped="" ref="0x407b37b8"/>
        <function-ref name="led1Off" scoped="" ref="0x407b3898"/>
        <function-ref name="led2Off" scoped="" ref="0x407b3c18"/>
        <function-ref name="set" scoped="" ref="0x407b3978"/>
        <function-ref name="led0On" scoped="" ref="0x407b3a58"/>
        <function-ref name="led2On" scoped="" ref="0x407b3b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407b14a0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x407b14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b1678"/>
        <function-ref name="isInput" scoped="" ref="0x407b1758"/>
        <function-ref name="toggle" scoped="" ref="0x407b1838"/>
        <function-ref name="isOutput" scoped="" ref="0x407b1918"/>
        <function-ref name="get" scoped="" ref="0x407b19f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b1ad8"/>
        <function-ref name="set" scoped="" ref="0x407b1bb8"/>
        <function-ref name="clr" scoped="" ref="0x407b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407b5e18" loc="5:../../tos/platforms/epic/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x407b5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ce010"/>
        <function-ref name="isInput" scoped="" ref="0x407ce0f0"/>
        <function-ref name="toggle" scoped="" ref="0x407ce1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ce2b0"/>
        <function-ref name="get" scoped="" ref="0x407ce390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ce470"/>
        <function-ref name="set" scoped="" ref="0x407ce550"/>
        <function-ref name="clr" scoped="" ref="0x407ce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407ce820" loc="6:../../tos/platforms/epic/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x407ce820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ce9f8"/>
        <function-ref name="isInput" scoped="" ref="0x407cead8"/>
        <function-ref name="toggle" scoped="" ref="0x407cebb8"/>
        <function-ref name="isOutput" scoped="" ref="0x407cec98"/>
        <function-ref name="get" scoped="" ref="0x407ced78"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cee58"/>
        <function-ref name="set" scoped="" ref="0x407cd010"/>
        <function-ref name="clr" scoped="" ref="0x407cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407cdc88" loc="10:../../tos/platforms/epic/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407cdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407cde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407cd2e0" loc="7:../../tos/platforms/epic/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x407cd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cd4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407cd598"/>
        <function-ref name="toggle" scoped="" ref="0x407cd678"/>
        <function-ref name="isOutput" scoped="" ref="0x407cd758"/>
        <function-ref name="get" scoped="" ref="0x407cd838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cd918"/>
        <function-ref name="set" scoped="" ref="0x407cd9f8"/>
        <function-ref name="clr" scoped="" ref="0x407cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x407c6e68" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x407c6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c5050"/>
        <function-ref name="isInput" scoped="" ref="0x407c5130"/>
        <function-ref name="setResistor" scoped="" ref="0x407c5210"/>
        <function-ref name="toggle" scoped="" ref="0x407c52f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407c53d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407c54b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c5590"/>
        <function-ref name="get" scoped="" ref="0x407c5670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407c5750"/>
        <function-ref name="getRaw" scoped="" ref="0x407c5830"/>
        <function-ref name="set" scoped="" ref="0x407c5910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407c59f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407c5ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407c5c30"/>
        <function-ref name="clr" scoped="" ref="0x407c5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x407d1010" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x407d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d11e8"/>
        <function-ref name="isInput" scoped="" ref="0x407d12c8"/>
        <function-ref name="setResistor" scoped="" ref="0x407d13a8"/>
        <function-ref name="toggle" scoped="" ref="0x407d1488"/>
        <function-ref name="isOutput" scoped="" ref="0x407d1568"/>
        <function-ref name="getResistor" scoped="" ref="0x407d1648"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d1728"/>
        <function-ref name="get" scoped="" ref="0x407d1808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d18e8"/>
        <function-ref name="getRaw" scoped="" ref="0x407d19c8"/>
        <function-ref name="set" scoped="" ref="0x407d1aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d1b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d1c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d1dc8"/>
        <function-ref name="clr" scoped="" ref="0x407d1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x40808158" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x40808158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40808330"/>
        <function-ref name="isInput" scoped="" ref="0x40808410"/>
        <function-ref name="setResistor" scoped="" ref="0x408084f0"/>
        <function-ref name="toggle" scoped="" ref="0x408085d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408086b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40808790"/>
        <function-ref name="makeOutput" scoped="" ref="0x40808870"/>
        <function-ref name="get" scoped="" ref="0x40808950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40808a30"/>
        <function-ref name="getRaw" scoped="" ref="0x40808b10"/>
        <function-ref name="set" scoped="" ref="0x40808bf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40808cd0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40808db0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40808f10"/>
        <function-ref name="clr" scoped="" ref="0x40807010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x4080de58" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x4080de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40824050"/>
        <function-ref name="isInput" scoped="" ref="0x40824130"/>
        <function-ref name="setResistor" scoped="" ref="0x40824210"/>
        <function-ref name="toggle" scoped="" ref="0x408242f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408243d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408244b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40824590"/>
        <function-ref name="get" scoped="" ref="0x40824670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40824750"/>
        <function-ref name="getRaw" scoped="" ref="0x40824830"/>
        <function-ref name="set" scoped="" ref="0x40824910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408249f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40824ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40824c30"/>
        <function-ref name="clr" scoped="" ref="0x40824d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x40807280" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x40807280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40807458"/>
        <function-ref name="isInput" scoped="" ref="0x40807538"/>
        <function-ref name="setResistor" scoped="" ref="0x40807618"/>
        <function-ref name="toggle" scoped="" ref="0x408076f8"/>
        <function-ref name="isOutput" scoped="" ref="0x408077d8"/>
        <function-ref name="getResistor" scoped="" ref="0x408078b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807998"/>
        <function-ref name="get" scoped="" ref="0x40807a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40807b58"/>
        <function-ref name="getRaw" scoped="" ref="0x40807c38"/>
        <function-ref name="set" scoped="" ref="0x40807d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40807df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40807ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40806090"/>
        <function-ref name="clr" scoped="" ref="0x40806170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x407e7368" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x407e7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e7540"/>
        <function-ref name="isInput" scoped="" ref="0x407e7620"/>
        <function-ref name="setResistor" scoped="" ref="0x407e7700"/>
        <function-ref name="toggle" scoped="" ref="0x407e77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e78c0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e79a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e7a80"/>
        <function-ref name="get" scoped="" ref="0x407e7b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e7c40"/>
        <function-ref name="getRaw" scoped="" ref="0x407e7d20"/>
        <function-ref name="set" scoped="" ref="0x407e7e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e7ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e6010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e6170"/>
        <function-ref name="clr" scoped="" ref="0x407e6250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x407f45a8" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x407f45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f4780"/>
        <function-ref name="isInput" scoped="" ref="0x407f4860"/>
        <function-ref name="setResistor" scoped="" ref="0x407f4940"/>
        <function-ref name="toggle" scoped="" ref="0x407f4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x407f4b00"/>
        <function-ref name="getResistor" scoped="" ref="0x407f4be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f4cc0"/>
        <function-ref name="get" scoped="" ref="0x407f4da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f4e80"/>
        <function-ref name="getRaw" scoped="" ref="0x407f3010"/>
        <function-ref name="set" scoped="" ref="0x407f30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f3410"/>
        <function-ref name="clr" scoped="" ref="0x407f34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x407e9688" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x407e9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e9860"/>
        <function-ref name="isInput" scoped="" ref="0x407e9940"/>
        <function-ref name="setResistor" scoped="" ref="0x407e9a20"/>
        <function-ref name="toggle" scoped="" ref="0x407e9b00"/>
        <function-ref name="isOutput" scoped="" ref="0x407e9be0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e9cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e9da0"/>
        <function-ref name="get" scoped="" ref="0x407e9e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40800010"/>
        <function-ref name="getRaw" scoped="" ref="0x408000f0"/>
        <function-ref name="set" scoped="" ref="0x408001d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408002b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40800390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408004f0"/>
        <function-ref name="clr" scoped="" ref="0x408005d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x407f84c8" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x407f84c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f86a0"/>
        <function-ref name="isInput" scoped="" ref="0x407f8780"/>
        <function-ref name="setResistor" scoped="" ref="0x407f8860"/>
        <function-ref name="toggle" scoped="" ref="0x407f8940"/>
        <function-ref name="isOutput" scoped="" ref="0x407f8a20"/>
        <function-ref name="getResistor" scoped="" ref="0x407f8b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f8be0"/>
        <function-ref name="get" scoped="" ref="0x407f8cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f8da0"/>
        <function-ref name="getRaw" scoped="" ref="0x407f8e80"/>
        <function-ref name="set" scoped="" ref="0x407f7010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f70f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f71d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f7330"/>
        <function-ref name="clr" scoped="" ref="0x407f7410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x40804760" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x40804760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40804938"/>
        <function-ref name="isInput" scoped="" ref="0x40804a18"/>
        <function-ref name="setResistor" scoped="" ref="0x40804af8"/>
        <function-ref name="toggle" scoped="" ref="0x40804bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40804cb8"/>
        <function-ref name="getResistor" scoped="" ref="0x40804d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40804e78"/>
        <function-ref name="get" scoped="" ref="0x40803010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408030f0"/>
        <function-ref name="getRaw" scoped="" ref="0x408031d0"/>
        <function-ref name="set" scoped="" ref="0x408032b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40803390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40803470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408035d0"/>
        <function-ref name="clr" scoped="" ref="0x408036b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x408133d8" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x408133d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408135b0"/>
        <function-ref name="isInput" scoped="" ref="0x40813690"/>
        <function-ref name="setResistor" scoped="" ref="0x40813770"/>
        <function-ref name="toggle" scoped="" ref="0x40813850"/>
        <function-ref name="isOutput" scoped="" ref="0x40813930"/>
        <function-ref name="getResistor" scoped="" ref="0x40813a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40813af0"/>
        <function-ref name="get" scoped="" ref="0x40813bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40813cb0"/>
        <function-ref name="getRaw" scoped="" ref="0x40813d90"/>
        <function-ref name="set" scoped="" ref="0x40813e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40812010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408120f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40812250"/>
        <function-ref name="clr" scoped="" ref="0x40812330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x408203e0" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x408203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408205b8"/>
        <function-ref name="isInput" scoped="" ref="0x40820698"/>
        <function-ref name="setResistor" scoped="" ref="0x40820778"/>
        <function-ref name="toggle" scoped="" ref="0x40820858"/>
        <function-ref name="isOutput" scoped="" ref="0x40820938"/>
        <function-ref name="getResistor" scoped="" ref="0x40820a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40820af8"/>
        <function-ref name="get" scoped="" ref="0x40820bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40820cb8"/>
        <function-ref name="getRaw" scoped="" ref="0x40820d98"/>
        <function-ref name="set" scoped="" ref="0x40820e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081f010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081f0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081f250"/>
        <function-ref name="clr" scoped="" ref="0x4081f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x407da368" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x407da368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da540"/>
        <function-ref name="isInput" scoped="" ref="0x407da620"/>
        <function-ref name="setResistor" scoped="" ref="0x407da700"/>
        <function-ref name="toggle" scoped="" ref="0x407da7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x407da8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x407da9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407daa80"/>
        <function-ref name="get" scoped="" ref="0x407dab60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407dac40"/>
        <function-ref name="getRaw" scoped="" ref="0x407dad20"/>
        <function-ref name="set" scoped="" ref="0x407dae00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407daee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d9010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d9170"/>
        <function-ref name="clr" scoped="" ref="0x407d9250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x40803920" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x40803920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40803af8"/>
        <function-ref name="isInput" scoped="" ref="0x40803bd8"/>
        <function-ref name="setResistor" scoped="" ref="0x40803cb8"/>
        <function-ref name="toggle" scoped="" ref="0x40803d98"/>
        <function-ref name="isOutput" scoped="" ref="0x40803e78"/>
        <function-ref name="getResistor" scoped="" ref="0x40802010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408020f0"/>
        <function-ref name="get" scoped="" ref="0x408021d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408022b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40802390"/>
        <function-ref name="set" scoped="" ref="0x40802470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40802550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40802630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40802790"/>
        <function-ref name="clr" scoped="" ref="0x40802870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x407d8688" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x407d8688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d8860"/>
        <function-ref name="isInput" scoped="" ref="0x407d8940"/>
        <function-ref name="setResistor" scoped="" ref="0x407d8a20"/>
        <function-ref name="toggle" scoped="" ref="0x407d8b00"/>
        <function-ref name="isOutput" scoped="" ref="0x407d8be0"/>
        <function-ref name="getResistor" scoped="" ref="0x407d8cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d8da0"/>
        <function-ref name="get" scoped="" ref="0x407d8e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d7010"/>
        <function-ref name="getRaw" scoped="" ref="0x407d70f0"/>
        <function-ref name="set" scoped="" ref="0x407d71d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d72b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d7390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d74f0"/>
        <function-ref name="clr" scoped="" ref="0x407d75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x407e4848" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x407e4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e4a20"/>
        <function-ref name="isInput" scoped="" ref="0x407e4b00"/>
        <function-ref name="setResistor" scoped="" ref="0x407e4be0"/>
        <function-ref name="toggle" scoped="" ref="0x407e4cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e4da0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e4e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e3010"/>
        <function-ref name="get" scoped="" ref="0x407e30f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e31d0"/>
        <function-ref name="getRaw" scoped="" ref="0x407e32b0"/>
        <function-ref name="set" scoped="" ref="0x407e3390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e3470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e3550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e36b0"/>
        <function-ref name="clr" scoped="" ref="0x407e3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x407f1ae8" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x407f1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f1cc0"/>
        <function-ref name="isInput" scoped="" ref="0x407f1da0"/>
        <function-ref name="setResistor" scoped="" ref="0x407f1e80"/>
        <function-ref name="toggle" scoped="" ref="0x407f0010"/>
        <function-ref name="isOutput" scoped="" ref="0x407f00f0"/>
        <function-ref name="getResistor" scoped="" ref="0x407f01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f02b0"/>
        <function-ref name="get" scoped="" ref="0x407f0390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f0470"/>
        <function-ref name="getRaw" scoped="" ref="0x407f0550"/>
        <function-ref name="set" scoped="" ref="0x407f0630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f0710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f0950"/>
        <function-ref name="clr" scoped="" ref="0x407f0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x407febc8" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x407febc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407feda0"/>
        <function-ref name="isInput" scoped="" ref="0x407fee80"/>
        <function-ref name="setResistor" scoped="" ref="0x407fd010"/>
        <function-ref name="toggle" scoped="" ref="0x407fd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407fd1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407fd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fd390"/>
        <function-ref name="get" scoped="" ref="0x407fd470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407fd550"/>
        <function-ref name="getRaw" scoped="" ref="0x407fd630"/>
        <function-ref name="set" scoped="" ref="0x407fd710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407fd8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407fda30"/>
        <function-ref name="clr" scoped="" ref="0x407fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x407f5a08" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x407f5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f5be0"/>
        <function-ref name="isInput" scoped="" ref="0x407f5cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x407f5da0"/>
        <function-ref name="toggle" scoped="" ref="0x407f5e80"/>
        <function-ref name="isOutput" scoped="" ref="0x4080c010"/>
        <function-ref name="getResistor" scoped="" ref="0x4080c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080c1d0"/>
        <function-ref name="get" scoped="" ref="0x4080c2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080c390"/>
        <function-ref name="getRaw" scoped="" ref="0x4080c470"/>
        <function-ref name="set" scoped="" ref="0x4080c550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080c630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080c710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080c870"/>
        <function-ref name="clr" scoped="" ref="0x4080c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x407c8ae8" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x407c8ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x407c8da0"/>
        <function-ref name="setResistor" scoped="" ref="0x407c8e80"/>
        <function-ref name="toggle" scoped="" ref="0x407c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x407c70f0"/>
        <function-ref name="getResistor" scoped="" ref="0x407c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c72b0"/>
        <function-ref name="get" scoped="" ref="0x407c7390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407c7470"/>
        <function-ref name="getRaw" scoped="" ref="0x407c7550"/>
        <function-ref name="set" scoped="" ref="0x407c7630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407c7710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407c7950"/>
        <function-ref name="clr" scoped="" ref="0x407c7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x407d4bc8" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x407d4bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d4e20"/>
        <function-ref name="isInput" scoped="" ref="0x407d4f00"/>
        <function-ref name="setResistor" scoped="" ref="0x407d3010"/>
        <function-ref name="toggle" scoped="" ref="0x407d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d31d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d3390"/>
        <function-ref name="get" scoped="" ref="0x407d3470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d3550"/>
        <function-ref name="getRaw" scoped="" ref="0x407d3630"/>
        <function-ref name="set" scoped="" ref="0x407d3710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d38d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d3a30"/>
        <function-ref name="clr" scoped="" ref="0x407d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x407e1d88" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x407e1d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e0010"/>
        <function-ref name="isInput" scoped="" ref="0x407e00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x407e01d0"/>
        <function-ref name="toggle" scoped="" ref="0x407e02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e0390"/>
        <function-ref name="getResistor" scoped="" ref="0x407e0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e0550"/>
        <function-ref name="get" scoped="" ref="0x407e0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e0710"/>
        <function-ref name="getRaw" scoped="" ref="0x407e07f0"/>
        <function-ref name="set" scoped="" ref="0x407e08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e0bf0"/>
        <function-ref name="clr" scoped="" ref="0x407e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x4080a010" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x4080a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4080a2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x4080a3a8"/>
        <function-ref name="toggle" scoped="" ref="0x4080a488"/>
        <function-ref name="isOutput" scoped="" ref="0x4080a568"/>
        <function-ref name="getResistor" scoped="" ref="0x4080a648"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080a728"/>
        <function-ref name="get" scoped="" ref="0x4080a808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080a8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x4080a9c8"/>
        <function-ref name="set" scoped="" ref="0x4080aaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080ab88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080ac68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080adc8"/>
        <function-ref name="clr" scoped="" ref="0x4080aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x40810918" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x40810918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40810af0"/>
        <function-ref name="isInput" scoped="" ref="0x40810bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x40810cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40810d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40810e70"/>
        <function-ref name="getResistor" scoped="" ref="0x4080f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080f0f0"/>
        <function-ref name="get" scoped="" ref="0x4080f1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080f2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x4080f390"/>
        <function-ref name="set" scoped="" ref="0x4080f470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080f550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080f630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080f790"/>
        <function-ref name="clr" scoped="" ref="0x4080f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x40821280" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x40821280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40821458"/>
        <function-ref name="isInput" scoped="" ref="0x40821538"/>
        <function-ref name="setResistor" scoped="" ref="0x40821618"/>
        <function-ref name="toggle" scoped="" ref="0x408216f8"/>
        <function-ref name="isOutput" scoped="" ref="0x408217d8"/>
        <function-ref name="getResistor" scoped="" ref="0x408218b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40821998"/>
        <function-ref name="get" scoped="" ref="0x40821a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40821b58"/>
        <function-ref name="getRaw" scoped="" ref="0x40821c38"/>
        <function-ref name="set" scoped="" ref="0x40821d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40821df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40821ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40820090"/>
        <function-ref name="clr" scoped="" ref="0x40820170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x40816010" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x40816010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408161e8"/>
        <function-ref name="isInput" scoped="" ref="0x408162c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408163a8"/>
        <function-ref name="toggle" scoped="" ref="0x40816488"/>
        <function-ref name="isOutput" scoped="" ref="0x40816568"/>
        <function-ref name="getResistor" scoped="" ref="0x40816648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40816728"/>
        <function-ref name="get" scoped="" ref="0x40816808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408168e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408169c8"/>
        <function-ref name="set" scoped="" ref="0x40816aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40816b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40816c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40816dc8"/>
        <function-ref name="clr" scoped="" ref="0x40816ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x407de178" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x407de178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407de450"/>
        <function-ref name="isInput" scoped="" ref="0x407de530"/>
        <function-ref name="setResistor" scoped="" ref="0x407de610"/>
        <function-ref name="toggle" scoped="" ref="0x407de6f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407de7d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407de8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407de990"/>
        <function-ref name="get" scoped="" ref="0x407dea70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407deb50"/>
        <function-ref name="getRaw" scoped="" ref="0x407dec30"/>
        <function-ref name="set" scoped="" ref="0x407ded10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407dedf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407deed0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407dd090"/>
        <function-ref name="clr" scoped="" ref="0x407dd170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x407eb368" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x407eb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407eb540"/>
        <function-ref name="isInput" scoped="" ref="0x407eb620"/>
        <function-ref name="setResistor" scoped="" ref="0x407eb700"/>
        <function-ref name="toggle" scoped="" ref="0x407eb7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x407eb8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x407eb9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eba80"/>
        <function-ref name="get" scoped="" ref="0x407ebb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ebc40"/>
        <function-ref name="getRaw" scoped="" ref="0x407ebd20"/>
        <function-ref name="set" scoped="" ref="0x407ebe00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407ebee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407ea010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407ea170"/>
        <function-ref name="clr" scoped="" ref="0x407ea250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x407fa178" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x407fa178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fa350"/>
        <function-ref name="isInput" scoped="" ref="0x407fa430"/>
        <function-ref name="setResistor" scoped="" ref="0x407fa510"/>
        <function-ref name="toggle" scoped="" ref="0x407fa5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407fa6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407fa7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fa890"/>
        <function-ref name="get" scoped="" ref="0x407fa970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407faa50"/>
        <function-ref name="getRaw" scoped="" ref="0x407fab30"/>
        <function-ref name="set" scoped="" ref="0x407fac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407facf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407fadd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f9010"/>
        <function-ref name="clr" scoped="" ref="0x407f90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x4080fad8" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x4080fad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080fcb0"/>
        <function-ref name="isInput" scoped="" ref="0x4080fd90"/>
        <function-ref name="setResistor" scoped="" ref="0x4080fe70"/>
        <function-ref name="toggle" scoped="" ref="0x4080e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4080e0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x4080e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080e2b0"/>
        <function-ref name="get" scoped="" ref="0x4080e390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080e470"/>
        <function-ref name="getRaw" scoped="" ref="0x4080e550"/>
        <function-ref name="set" scoped="" ref="0x4080e630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080e710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080e950"/>
        <function-ref name="clr" scoped="" ref="0x4080ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x40802ad8" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x40802ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40802cb0"/>
        <function-ref name="isInput" scoped="" ref="0x40802d90"/>
        <function-ref name="setResistor" scoped="" ref="0x40802e70"/>
        <function-ref name="toggle" scoped="" ref="0x40801010"/>
        <function-ref name="isOutput" scoped="" ref="0x408010f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408011d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408012b0"/>
        <function-ref name="get" scoped="" ref="0x40801390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40801470"/>
        <function-ref name="getRaw" scoped="" ref="0x40801550"/>
        <function-ref name="set" scoped="" ref="0x40801630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40801710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40801950"/>
        <function-ref name="clr" scoped="" ref="0x40801a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x407dc010" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x407dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x407dc2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x407dc3a8"/>
        <function-ref name="toggle" scoped="" ref="0x407dc488"/>
        <function-ref name="isOutput" scoped="" ref="0x407dc568"/>
        <function-ref name="getResistor" scoped="" ref="0x407dc648"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dc728"/>
        <function-ref name="get" scoped="" ref="0x407dc808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407dc8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x407dc9c8"/>
        <function-ref name="set" scoped="" ref="0x407dcaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407dcb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407dcc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407dcdc8"/>
        <function-ref name="clr" scoped="" ref="0x407dcea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x407e8178" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x407e8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e8350"/>
        <function-ref name="isInput" scoped="" ref="0x407e8430"/>
        <function-ref name="setResistor" scoped="" ref="0x407e8510"/>
        <function-ref name="toggle" scoped="" ref="0x407e85f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e86d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e87b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e8890"/>
        <function-ref name="get" scoped="" ref="0x407e8970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e8a50"/>
        <function-ref name="getRaw" scoped="" ref="0x407e8b30"/>
        <function-ref name="set" scoped="" ref="0x407e8c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e8cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e8dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e7010"/>
        <function-ref name="clr" scoped="" ref="0x407e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x407fdd88" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x407fdd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fc010"/>
        <function-ref name="isInput" scoped="" ref="0x407fc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x407fc1d0"/>
        <function-ref name="toggle" scoped="" ref="0x407fc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407fc390"/>
        <function-ref name="getResistor" scoped="" ref="0x407fc470"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fc550"/>
        <function-ref name="get" scoped="" ref="0x407fc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407fc710"/>
        <function-ref name="getRaw" scoped="" ref="0x407fc7f0"/>
        <function-ref name="set" scoped="" ref="0x407fc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407fc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407fca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407fcbf0"/>
        <function-ref name="clr" scoped="" ref="0x407fccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x407e64c8" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x407e64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e66a0"/>
        <function-ref name="isInput" scoped="" ref="0x407e6780"/>
        <function-ref name="setResistor" scoped="" ref="0x407e6860"/>
        <function-ref name="toggle" scoped="" ref="0x407e6940"/>
        <function-ref name="isOutput" scoped="" ref="0x407e6a20"/>
        <function-ref name="getResistor" scoped="" ref="0x407e6b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e6be0"/>
        <function-ref name="get" scoped="" ref="0x407e6cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e6da0"/>
        <function-ref name="getRaw" scoped="" ref="0x407e6e80"/>
        <function-ref name="set" scoped="" ref="0x407e5010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e50f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e51d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e5330"/>
        <function-ref name="clr" scoped="" ref="0x407e5410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x407f3768" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x407f3768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f3940"/>
        <function-ref name="isInput" scoped="" ref="0x407f3a20"/>
        <function-ref name="setResistor" scoped="" ref="0x407f3b00"/>
        <function-ref name="toggle" scoped="" ref="0x407f3be0"/>
        <function-ref name="isOutput" scoped="" ref="0x407f3cc0"/>
        <function-ref name="getResistor" scoped="" ref="0x407f3da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f3e80"/>
        <function-ref name="get" scoped="" ref="0x407f2010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f20f0"/>
        <function-ref name="getRaw" scoped="" ref="0x407f21d0"/>
        <function-ref name="set" scoped="" ref="0x407f22b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f2390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f2470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f25d0"/>
        <function-ref name="clr" scoped="" ref="0x407f26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x40800848" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x40800848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40800a20"/>
        <function-ref name="isInput" scoped="" ref="0x40800b00"/>
        <function-ref name="setResistor" scoped="" ref="0x40800be0"/>
        <function-ref name="toggle" scoped="" ref="0x40800cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40800da0"/>
        <function-ref name="getResistor" scoped="" ref="0x40800e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ff010"/>
        <function-ref name="get" scoped="" ref="0x407ff0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ff1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x407ff2b0"/>
        <function-ref name="set" scoped="" ref="0x407ff390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407ff470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407ff550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407ff6b0"/>
        <function-ref name="clr" scoped="" ref="0x407ff790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x407f7688" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x407f7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f7860"/>
        <function-ref name="isInput" scoped="" ref="0x407f7940"/>
        <function-ref name="setResistor" scoped="" ref="0x407f7a20"/>
        <function-ref name="toggle" scoped="" ref="0x407f7b00"/>
        <function-ref name="isOutput" scoped="" ref="0x407f7be0"/>
        <function-ref name="getResistor" scoped="" ref="0x407f7cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f7da0"/>
        <function-ref name="get" scoped="" ref="0x407f7e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f6010"/>
        <function-ref name="getRaw" scoped="" ref="0x407f60f0"/>
        <function-ref name="set" scoped="" ref="0x407f61d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f62b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f6390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f64f0"/>
        <function-ref name="clr" scoped="" ref="0x407f65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x40818e60" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x40818e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40817050"/>
        <function-ref name="isInput" scoped="" ref="0x40817130"/>
        <function-ref name="setResistor" scoped="" ref="0x40817210"/>
        <function-ref name="toggle" scoped="" ref="0x408172f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408173d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408174b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40817590"/>
        <function-ref name="get" scoped="" ref="0x40817670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40817750"/>
        <function-ref name="getRaw" scoped="" ref="0x40817830"/>
        <function-ref name="set" scoped="" ref="0x40817910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408179f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40817ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40817c30"/>
        <function-ref name="clr" scoped="" ref="0x40817d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x407cc808" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x407cc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cc9e0"/>
        <function-ref name="isInput" scoped="" ref="0x407ccac0"/>
        <function-ref name="setResistor" scoped="" ref="0x407ccba0"/>
        <function-ref name="toggle" scoped="" ref="0x407ccc80"/>
        <function-ref name="isOutput" scoped="" ref="0x407ccd60"/>
        <function-ref name="getResistor" scoped="" ref="0x407cce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ccf20"/>
        <function-ref name="get" scoped="" ref="0x407c9018"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407c90f8"/>
        <function-ref name="getRaw" scoped="" ref="0x407c91d8"/>
        <function-ref name="set" scoped="" ref="0x407c92b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407c9398"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407c9478"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407c95d8"/>
        <function-ref name="clr" scoped="" ref="0x407c96b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x407d7848" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x407d7848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d7a20"/>
        <function-ref name="isInput" scoped="" ref="0x407d7b00"/>
        <function-ref name="setResistor" scoped="" ref="0x407d7be0"/>
        <function-ref name="toggle" scoped="" ref="0x407d7cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d7da0"/>
        <function-ref name="getResistor" scoped="" ref="0x407d7e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d6010"/>
        <function-ref name="get" scoped="" ref="0x407d60f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d61d0"/>
        <function-ref name="getRaw" scoped="" ref="0x407d62b0"/>
        <function-ref name="set" scoped="" ref="0x407d6390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d6470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d6550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d66b0"/>
        <function-ref name="clr" scoped="" ref="0x407d6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x407e3a08" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x407e3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e3be0"/>
        <function-ref name="isInput" scoped="" ref="0x407e3cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x407e3da0"/>
        <function-ref name="toggle" scoped="" ref="0x407e3e80"/>
        <function-ref name="isOutput" scoped="" ref="0x407e2010"/>
        <function-ref name="getResistor" scoped="" ref="0x407e20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e21d0"/>
        <function-ref name="get" scoped="" ref="0x407e22b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e2390"/>
        <function-ref name="getRaw" scoped="" ref="0x407e2470"/>
        <function-ref name="set" scoped="" ref="0x407e2550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e2630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e2710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e2870"/>
        <function-ref name="clr" scoped="" ref="0x407e2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x407f0ca8" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x407f0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f0e80"/>
        <function-ref name="isInput" scoped="" ref="0x407ef010"/>
        <function-ref name="setResistor" scoped="" ref="0x407ef0f0"/>
        <function-ref name="toggle" scoped="" ref="0x407ef1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ef2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x407ef390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ef470"/>
        <function-ref name="get" scoped="" ref="0x407ef550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ef630"/>
        <function-ref name="getRaw" scoped="" ref="0x407ef710"/>
        <function-ref name="set" scoped="" ref="0x407ef7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407ef8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407ef9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407efb10"/>
        <function-ref name="clr" scoped="" ref="0x407efbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x40815170" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x40815170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40815348"/>
        <function-ref name="isInput" scoped="" ref="0x40815428"/>
        <function-ref name="setResistor" scoped="" ref="0x40815508"/>
        <function-ref name="toggle" scoped="" ref="0x408155e8"/>
        <function-ref name="isOutput" scoped="" ref="0x408156c8"/>
        <function-ref name="getResistor" scoped="" ref="0x408157a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40815888"/>
        <function-ref name="get" scoped="" ref="0x40815968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40815a48"/>
        <function-ref name="getRaw" scoped="" ref="0x40815b28"/>
        <function-ref name="set" scoped="" ref="0x40815c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40815ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40815dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40815f28"/>
        <function-ref name="clr" scoped="" ref="0x40814018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x40812598" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x40812598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40812770"/>
        <function-ref name="isInput" scoped="" ref="0x40812850"/>
        <function-ref name="setResistor" scoped="" ref="0x40812930"/>
        <function-ref name="toggle" scoped="" ref="0x40812a10"/>
        <function-ref name="isOutput" scoped="" ref="0x40812af0"/>
        <function-ref name="getResistor" scoped="" ref="0x40812bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40812cb0"/>
        <function-ref name="get" scoped="" ref="0x40812d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40812e70"/>
        <function-ref name="getRaw" scoped="" ref="0x40811010"/>
        <function-ref name="set" scoped="" ref="0x408110f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408111d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408112b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40811410"/>
        <function-ref name="clr" scoped="" ref="0x408114f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x40823010" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x40823010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408231e8"/>
        <function-ref name="isInput" scoped="" ref="0x408232c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408233a8"/>
        <function-ref name="toggle" scoped="" ref="0x40823488"/>
        <function-ref name="isOutput" scoped="" ref="0x40823568"/>
        <function-ref name="getResistor" scoped="" ref="0x40823648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40823728"/>
        <function-ref name="get" scoped="" ref="0x40823808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408238e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408239c8"/>
        <function-ref name="set" scoped="" ref="0x40823aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40823b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40823c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40823dc8"/>
        <function-ref name="clr" scoped="" ref="0x40823ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x407ed010" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x407ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x407ed2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x407ed3a8"/>
        <function-ref name="toggle" scoped="" ref="0x407ed488"/>
        <function-ref name="isOutput" scoped="" ref="0x407ed568"/>
        <function-ref name="getResistor" scoped="" ref="0x407ed648"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ed728"/>
        <function-ref name="get" scoped="" ref="0x407ed808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ed8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x407ed9c8"/>
        <function-ref name="set" scoped="" ref="0x407edaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407edb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407edc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407eddc8"/>
        <function-ref name="clr" scoped="" ref="0x407edea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x40814288" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x40814288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40814460"/>
        <function-ref name="isInput" scoped="" ref="0x40814540"/>
        <function-ref name="setResistor" scoped="" ref="0x40814620"/>
        <function-ref name="toggle" scoped="" ref="0x40814700"/>
        <function-ref name="isOutput" scoped="" ref="0x408147e0"/>
        <function-ref name="getResistor" scoped="" ref="0x408148c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408149a0"/>
        <function-ref name="get" scoped="" ref="0x40814a80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40814b60"/>
        <function-ref name="getRaw" scoped="" ref="0x40814c40"/>
        <function-ref name="set" scoped="" ref="0x40814d20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40814e00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40814ee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40813090"/>
        <function-ref name="clr" scoped="" ref="0x40813170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x407c7ca8" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x407c7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c7e80"/>
        <function-ref name="isInput" scoped="" ref="0x407c6010"/>
        <function-ref name="setResistor" scoped="" ref="0x407c60f0"/>
        <function-ref name="toggle" scoped="" ref="0x407c61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407c62b0"/>
        <function-ref name="getResistor" scoped="" ref="0x407c6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c6470"/>
        <function-ref name="get" scoped="" ref="0x407c6550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407c6630"/>
        <function-ref name="getRaw" scoped="" ref="0x407c6710"/>
        <function-ref name="set" scoped="" ref="0x407c67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407c68d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407c69b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407c6b10"/>
        <function-ref name="clr" scoped="" ref="0x407c6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x407d3d88" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x407d3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d2010"/>
        <function-ref name="isInput" scoped="" ref="0x407d20f0"/>
        <function-ref name="setResistor" scoped="" ref="0x407d21d0"/>
        <function-ref name="toggle" scoped="" ref="0x407d22b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d2390"/>
        <function-ref name="getResistor" scoped="" ref="0x407d2470"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d2550"/>
        <function-ref name="get" scoped="" ref="0x407d2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d2710"/>
        <function-ref name="getRaw" scoped="" ref="0x407d27f0"/>
        <function-ref name="set" scoped="" ref="0x407d28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d2bf0"/>
        <function-ref name="clr" scoped="" ref="0x407d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x407df010" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x407df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407df1e8"/>
        <function-ref name="isInput" scoped="" ref="0x407df2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x407df3a8"/>
        <function-ref name="toggle" scoped="" ref="0x407df488"/>
        <function-ref name="isOutput" scoped="" ref="0x407df568"/>
        <function-ref name="getResistor" scoped="" ref="0x407df648"/>
        <function-ref name="makeOutput" scoped="" ref="0x407df728"/>
        <function-ref name="get" scoped="" ref="0x407df808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407df8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x407df9c8"/>
        <function-ref name="set" scoped="" ref="0x407dfaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407dfb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407dfc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407dfdc8"/>
        <function-ref name="clr" scoped="" ref="0x407dfea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x40801ca0" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x40801ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40801e78"/>
        <function-ref name="isInput" scoped="" ref="0x40818010"/>
        <function-ref name="setResistor" scoped="" ref="0x408180f0"/>
        <function-ref name="toggle" scoped="" ref="0x408181d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408182b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40818390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40818470"/>
        <function-ref name="get" scoped="" ref="0x40818550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40818630"/>
        <function-ref name="getRaw" scoped="" ref="0x40818710"/>
        <function-ref name="set" scoped="" ref="0x408187f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408188d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408189b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40818b10"/>
        <function-ref name="clr" scoped="" ref="0x40818bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x4080ec98" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x4080ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080ee70"/>
        <function-ref name="isInput" scoped="" ref="0x4080d010"/>
        <function-ref name="setResistor" scoped="" ref="0x4080d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4080d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4080d2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x4080d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080d470"/>
        <function-ref name="get" scoped="" ref="0x4080d550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080d630"/>
        <function-ref name="getRaw" scoped="" ref="0x4080d710"/>
        <function-ref name="set" scoped="" ref="0x4080d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080d8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080d9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080db10"/>
        <function-ref name="clr" scoped="" ref="0x4080dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x407dd3e8" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x407dd3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dd5c0"/>
        <function-ref name="isInput" scoped="" ref="0x407dd6a0"/>
        <function-ref name="setResistor" scoped="" ref="0x407dd780"/>
        <function-ref name="toggle" scoped="" ref="0x407dd860"/>
        <function-ref name="isOutput" scoped="" ref="0x407dd940"/>
        <function-ref name="getResistor" scoped="" ref="0x407dda20"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ddb00"/>
        <function-ref name="get" scoped="" ref="0x407ddbe0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ddcc0"/>
        <function-ref name="getRaw" scoped="" ref="0x407ddda0"/>
        <function-ref name="set" scoped="" ref="0x407dde80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f4010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f40f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f4250"/>
        <function-ref name="clr" scoped="" ref="0x407f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x407ea4c8" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x407ea4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ea6a0"/>
        <function-ref name="isInput" scoped="" ref="0x407ea780"/>
        <function-ref name="setResistor" scoped="" ref="0x407ea860"/>
        <function-ref name="toggle" scoped="" ref="0x407ea940"/>
        <function-ref name="isOutput" scoped="" ref="0x407eaa20"/>
        <function-ref name="getResistor" scoped="" ref="0x407eab00"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eabe0"/>
        <function-ref name="get" scoped="" ref="0x407eacc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407eada0"/>
        <function-ref name="getRaw" scoped="" ref="0x407eae80"/>
        <function-ref name="set" scoped="" ref="0x407e9010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e90f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e91d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e9330"/>
        <function-ref name="clr" scoped="" ref="0x407e9410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x407f9368" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x407f9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f9540"/>
        <function-ref name="isInput" scoped="" ref="0x407f9620"/>
        <function-ref name="setResistor" scoped="" ref="0x407f9700"/>
        <function-ref name="toggle" scoped="" ref="0x407f97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x407f98c0"/>
        <function-ref name="getResistor" scoped="" ref="0x407f99a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f9a80"/>
        <function-ref name="get" scoped="" ref="0x407f9b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f9c40"/>
        <function-ref name="getRaw" scoped="" ref="0x407f9d20"/>
        <function-ref name="set" scoped="" ref="0x407f9e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f9ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f8010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f8170"/>
        <function-ref name="clr" scoped="" ref="0x407f8250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x407db178" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x407db178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407db350"/>
        <function-ref name="isInput" scoped="" ref="0x407db430"/>
        <function-ref name="setResistor" scoped="" ref="0x407db510"/>
        <function-ref name="toggle" scoped="" ref="0x407db5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407db6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407db7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407db890"/>
        <function-ref name="get" scoped="" ref="0x407db970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407dba50"/>
        <function-ref name="getRaw" scoped="" ref="0x407dbb30"/>
        <function-ref name="set" scoped="" ref="0x407dbc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407dbcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407dbdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407da010"/>
        <function-ref name="clr" scoped="" ref="0x407da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x407fb010" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x407fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x407fb2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x407fb3a8"/>
        <function-ref name="toggle" scoped="" ref="0x407fb488"/>
        <function-ref name="isOutput" scoped="" ref="0x407fb568"/>
        <function-ref name="getResistor" scoped="" ref="0x407fb648"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fb728"/>
        <function-ref name="get" scoped="" ref="0x407fb808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407fb8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x407fb9c8"/>
        <function-ref name="set" scoped="" ref="0x407fbaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407fbb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407fbc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407fbdc8"/>
        <function-ref name="clr" scoped="" ref="0x407fbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x407d94c8" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x407d94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d96a0"/>
        <function-ref name="isInput" scoped="" ref="0x407d9780"/>
        <function-ref name="setResistor" scoped="" ref="0x407d9860"/>
        <function-ref name="toggle" scoped="" ref="0x407d9940"/>
        <function-ref name="isOutput" scoped="" ref="0x407d9a20"/>
        <function-ref name="getResistor" scoped="" ref="0x407d9b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d9be0"/>
        <function-ref name="get" scoped="" ref="0x407d9cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d9da0"/>
        <function-ref name="getRaw" scoped="" ref="0x407d9e80"/>
        <function-ref name="set" scoped="" ref="0x407d8010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d80f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d81d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d8330"/>
        <function-ref name="clr" scoped="" ref="0x407d8410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x407e5688" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x407e5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e5860"/>
        <function-ref name="isInput" scoped="" ref="0x407e5940"/>
        <function-ref name="setResistor" scoped="" ref="0x407e5a20"/>
        <function-ref name="toggle" scoped="" ref="0x407e5b00"/>
        <function-ref name="isOutput" scoped="" ref="0x407e5be0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e5cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e5da0"/>
        <function-ref name="get" scoped="" ref="0x407e5e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e4010"/>
        <function-ref name="getRaw" scoped="" ref="0x407e40f0"/>
        <function-ref name="set" scoped="" ref="0x407e41d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e42b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e4390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e44f0"/>
        <function-ref name="clr" scoped="" ref="0x407e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x407f2928" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x407f2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f2b00"/>
        <function-ref name="isInput" scoped="" ref="0x407f2be0"/>
        <function-ref name="setResistor" scoped="" ref="0x407f2cc0"/>
        <function-ref name="toggle" scoped="" ref="0x407f2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x407f2e80"/>
        <function-ref name="getResistor" scoped="" ref="0x407f1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f10f0"/>
        <function-ref name="get" scoped="" ref="0x407f11d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f12b0"/>
        <function-ref name="getRaw" scoped="" ref="0x407f1390"/>
        <function-ref name="set" scoped="" ref="0x407f1470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f1550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f1630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f1790"/>
        <function-ref name="clr" scoped="" ref="0x407f1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x407ffa08" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x407ffa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ffbe0"/>
        <function-ref name="isInput" scoped="" ref="0x407ffcc0"/>
        <function-ref name="setResistor" scoped="" ref="0x407ffda0"/>
        <function-ref name="toggle" scoped="" ref="0x407ffe80"/>
        <function-ref name="isOutput" scoped="" ref="0x407fe010"/>
        <function-ref name="getResistor" scoped="" ref="0x407fe0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fe1d0"/>
        <function-ref name="get" scoped="" ref="0x407fe2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407fe390"/>
        <function-ref name="getRaw" scoped="" ref="0x407fe470"/>
        <function-ref name="set" scoped="" ref="0x407fe550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407fe630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407fe710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407fe870"/>
        <function-ref name="clr" scoped="" ref="0x407fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x407f6848" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x407f6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f6a20"/>
        <function-ref name="isInput" scoped="" ref="0x407f6b00"/>
        <function-ref name="setResistor" scoped="" ref="0x407f6be0"/>
        <function-ref name="toggle" scoped="" ref="0x407f6cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x407f6da0"/>
        <function-ref name="getResistor" scoped="" ref="0x407f6e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f5010"/>
        <function-ref name="get" scoped="" ref="0x407f50f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407f51d0"/>
        <function-ref name="getRaw" scoped="" ref="0x407f52b0"/>
        <function-ref name="set" scoped="" ref="0x407f5390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407f5470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407f5550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407f56b0"/>
        <function-ref name="clr" scoped="" ref="0x407f5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x407c9930" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x407c9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c9b08"/>
        <function-ref name="isInput" scoped="" ref="0x407c9be8"/>
        <function-ref name="setResistor" scoped="" ref="0x407c9cc8"/>
        <function-ref name="toggle" scoped="" ref="0x407c9da8"/>
        <function-ref name="isOutput" scoped="" ref="0x407c9e88"/>
        <function-ref name="getResistor" scoped="" ref="0x407c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c80f0"/>
        <function-ref name="get" scoped="" ref="0x407c81d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407c82b0"/>
        <function-ref name="getRaw" scoped="" ref="0x407c8390"/>
        <function-ref name="set" scoped="" ref="0x407c8470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407c8550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407c8630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407c8790"/>
        <function-ref name="clr" scoped="" ref="0x407c8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x407d6a08" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x407d6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d6be0"/>
        <function-ref name="isInput" scoped="" ref="0x407d6cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x407d6da0"/>
        <function-ref name="toggle" scoped="" ref="0x407d6e80"/>
        <function-ref name="isOutput" scoped="" ref="0x407d4010"/>
        <function-ref name="getResistor" scoped="" ref="0x407d40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d41d0"/>
        <function-ref name="get" scoped="" ref="0x407d42b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407d4390"/>
        <function-ref name="getRaw" scoped="" ref="0x407d4470"/>
        <function-ref name="set" scoped="" ref="0x407d4550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407d4630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407d4710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407d4870"/>
        <function-ref name="clr" scoped="" ref="0x407d4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x407e2bc8" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x407e2bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e2da0"/>
        <function-ref name="isInput" scoped="" ref="0x407e2e80"/>
        <function-ref name="setResistor" scoped="" ref="0x407e1010"/>
        <function-ref name="toggle" scoped="" ref="0x407e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e11d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e1390"/>
        <function-ref name="get" scoped="" ref="0x407e1470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407e1550"/>
        <function-ref name="getRaw" scoped="" ref="0x407e1630"/>
        <function-ref name="set" scoped="" ref="0x407e1710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407e17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407e18d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407e1a30"/>
        <function-ref name="clr" scoped="" ref="0x407e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x407efe68" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x407efe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ee050"/>
        <function-ref name="isInput" scoped="" ref="0x407ee130"/>
        <function-ref name="setResistor" scoped="" ref="0x407ee210"/>
        <function-ref name="toggle" scoped="" ref="0x407ee2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ee3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407ee4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ee590"/>
        <function-ref name="get" scoped="" ref="0x407ee670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407ee750"/>
        <function-ref name="getRaw" scoped="" ref="0x407ee830"/>
        <function-ref name="set" scoped="" ref="0x407ee910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407ee9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407eead0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407eec30"/>
        <function-ref name="clr" scoped="" ref="0x407eed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x40805588" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x40805588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40805760"/>
        <function-ref name="isInput" scoped="" ref="0x40805840"/>
        <function-ref name="setResistor" scoped="" ref="0x40805920"/>
        <function-ref name="toggle" scoped="" ref="0x40805a00"/>
        <function-ref name="isOutput" scoped="" ref="0x40805ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x40805bc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805ca0"/>
        <function-ref name="get" scoped="" ref="0x40805d80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40805e60"/>
        <function-ref name="getRaw" scoped="" ref="0x40804010"/>
        <function-ref name="set" scoped="" ref="0x408040f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408041d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408042b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40804410"/>
        <function-ref name="clr" scoped="" ref="0x408044f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x40811758" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x40811758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40811930"/>
        <function-ref name="isInput" scoped="" ref="0x40811a10"/>
        <function-ref name="setResistor" scoped="" ref="0x40811af0"/>
        <function-ref name="toggle" scoped="" ref="0x40811bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40811cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x40811d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40811e70"/>
        <function-ref name="get" scoped="" ref="0x40810010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408100f0"/>
        <function-ref name="getRaw" scoped="" ref="0x408101d0"/>
        <function-ref name="set" scoped="" ref="0x408102b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40810390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40810470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408105d0"/>
        <function-ref name="clr" scoped="" ref="0x408106b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x408063e0" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x408063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408065b8"/>
        <function-ref name="isInput" scoped="" ref="0x40806698"/>
        <function-ref name="setResistor" scoped="" ref="0x40806778"/>
        <function-ref name="toggle" scoped="" ref="0x40806858"/>
        <function-ref name="isOutput" scoped="" ref="0x40806938"/>
        <function-ref name="getResistor" scoped="" ref="0x40806a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40806af8"/>
        <function-ref name="get" scoped="" ref="0x40806bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40806cb8"/>
        <function-ref name="getRaw" scoped="" ref="0x40806d98"/>
        <function-ref name="set" scoped="" ref="0x40806e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40805010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408050f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40805250"/>
        <function-ref name="clr" scoped="" ref="0x40805330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x407ec178" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x407ec178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ec350"/>
        <function-ref name="isInput" scoped="" ref="0x407ec430"/>
        <function-ref name="setResistor" scoped="" ref="0x407ec510"/>
        <function-ref name="toggle" scoped="" ref="0x407ec5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ec6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x407ec7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ec890"/>
        <function-ref name="get" scoped="" ref="0x407ec970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x407eca50"/>
        <function-ref name="getRaw" scoped="" ref="0x407ecb30"/>
        <function-ref name="set" scoped="" ref="0x407ecc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x407eccf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x407ecdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x407eb010"/>
        <function-ref name="clr" scoped="" ref="0x407eb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x40822168" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x40822168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40822340"/>
        <function-ref name="isInput" scoped="" ref="0x40822420"/>
        <function-ref name="setResistor" scoped="" ref="0x40822500"/>
        <function-ref name="toggle" scoped="" ref="0x408225e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408226c0"/>
        <function-ref name="getResistor" scoped="" ref="0x408227a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40822880"/>
        <function-ref name="get" scoped="" ref="0x40822960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40822a40"/>
        <function-ref name="getRaw" scoped="" ref="0x40822b20"/>
        <function-ref name="set" scoped="" ref="0x40822c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40822ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40822dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40822f20"/>
        <function-ref name="clr" scoped="" ref="0x40821018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x4081f5a8" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x4081f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081f780"/>
        <function-ref name="isInput" scoped="" ref="0x4081f860"/>
        <function-ref name="setResistor" scoped="" ref="0x4081f940"/>
        <function-ref name="toggle" scoped="" ref="0x4081fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x4081fb00"/>
        <function-ref name="getResistor" scoped="" ref="0x4081fbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081fcc0"/>
        <function-ref name="get" scoped="" ref="0x4081fda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081fe80"/>
        <function-ref name="getRaw" scoped="" ref="0x4081e010"/>
        <function-ref name="set" scoped="" ref="0x4081e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081e410"/>
        <function-ref name="clr" scoped="" ref="0x4081e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x4080cbe8" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x4080cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080b010"/>
        <function-ref name="isInput" scoped="" ref="0x4080b0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4080b1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4080b2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4080b390"/>
        <function-ref name="getResistor" scoped="" ref="0x4080b470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080b550"/>
        <function-ref name="get" scoped="" ref="0x4080b630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4080b710"/>
        <function-ref name="getRaw" scoped="" ref="0x4080b7f0"/>
        <function-ref name="set" scoped="" ref="0x4080b8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4080b9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4080ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4080bbf0"/>
        <function-ref name="clr" scoped="" ref="0x4080bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4081c220" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4081c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081c3f8"/>
        <function-ref name="isInput" scoped="" ref="0x4081c4d8"/>
        <function-ref name="setResistor" scoped="" ref="0x4081c5b8"/>
        <function-ref name="toggle" scoped="" ref="0x4081c698"/>
        <function-ref name="isOutput" scoped="" ref="0x4081c778"/>
        <function-ref name="getResistor" scoped="" ref="0x4081c858"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081c938"/>
        <function-ref name="get" scoped="" ref="0x4081ca18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081caf8"/>
        <function-ref name="getRaw" scoped="" ref="0x4081cbd8"/>
        <function-ref name="set" scoped="" ref="0x4081ccb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081cd98"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081ce78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40838010"/>
        <function-ref name="clr" scoped="" ref="0x408380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40837918" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40837918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40837af0"/>
        <function-ref name="isInput" scoped="" ref="0x40837bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x40837cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40837d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40837e70"/>
        <function-ref name="getResistor" scoped="" ref="0x40836010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408360f0"/>
        <function-ref name="get" scoped="" ref="0x408361d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408362b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40836390"/>
        <function-ref name="set" scoped="" ref="0x40836470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40836550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40836630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40836790"/>
        <function-ref name="clr" scoped="" ref="0x40836870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40834140" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40834140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40834318"/>
        <function-ref name="isInput" scoped="" ref="0x408343f8"/>
        <function-ref name="setResistor" scoped="" ref="0x408344d8"/>
        <function-ref name="toggle" scoped="" ref="0x408345b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40834698"/>
        <function-ref name="getResistor" scoped="" ref="0x40834778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40834858"/>
        <function-ref name="get" scoped="" ref="0x40834938"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40834a18"/>
        <function-ref name="getRaw" scoped="" ref="0x40834af8"/>
        <function-ref name="set" scoped="" ref="0x40834bd8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40834cb8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40834d98"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40834ef8"/>
        <function-ref name="clr" scoped="" ref="0x40833010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408328a0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408328a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40832a78"/>
        <function-ref name="isInput" scoped="" ref="0x40832b58"/>
        <function-ref name="setResistor" scoped="" ref="0x40832c38"/>
        <function-ref name="toggle" scoped="" ref="0x40832d18"/>
        <function-ref name="isOutput" scoped="" ref="0x40832df8"/>
        <function-ref name="getResistor" scoped="" ref="0x40832ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084b010"/>
        <function-ref name="get" scoped="" ref="0x4084b0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084b1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4084b2b0"/>
        <function-ref name="set" scoped="" ref="0x4084b390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084b470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084b550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084b6b0"/>
        <function-ref name="clr" scoped="" ref="0x4084b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40849010" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40849010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408491e8"/>
        <function-ref name="isInput" scoped="" ref="0x408492c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408493a8"/>
        <function-ref name="toggle" scoped="" ref="0x40849488"/>
        <function-ref name="isOutput" scoped="" ref="0x40849568"/>
        <function-ref name="getResistor" scoped="" ref="0x40849648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40849728"/>
        <function-ref name="get" scoped="" ref="0x40849808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408498e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408499c8"/>
        <function-ref name="set" scoped="" ref="0x40849aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40849b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40849c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40849dc8"/>
        <function-ref name="clr" scoped="" ref="0x40849ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40847730" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40847730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40847908"/>
        <function-ref name="isInput" scoped="" ref="0x408479e8"/>
        <function-ref name="setResistor" scoped="" ref="0x40847ac8"/>
        <function-ref name="toggle" scoped="" ref="0x40847ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40847c88"/>
        <function-ref name="getResistor" scoped="" ref="0x40847d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40847e48"/>
        <function-ref name="get" scoped="" ref="0x40847f28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40846018"/>
        <function-ref name="getRaw" scoped="" ref="0x408460f8"/>
        <function-ref name="set" scoped="" ref="0x408461d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408462b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40846398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408464f8"/>
        <function-ref name="clr" scoped="" ref="0x408465d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40845df8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40845df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844010"/>
        <function-ref name="isInput" scoped="" ref="0x408440f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408441d0"/>
        <function-ref name="toggle" scoped="" ref="0x408442b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40844390"/>
        <function-ref name="getResistor" scoped="" ref="0x40844470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40844550"/>
        <function-ref name="get" scoped="" ref="0x40844630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40844710"/>
        <function-ref name="getRaw" scoped="" ref="0x408447f0"/>
        <function-ref name="set" scoped="" ref="0x408448d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408449b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40844a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40844bf0"/>
        <function-ref name="clr" scoped="" ref="0x40844cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408425c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408425c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408427a0"/>
        <function-ref name="isInput" scoped="" ref="0x40842880"/>
        <function-ref name="setResistor" scoped="" ref="0x40842960"/>
        <function-ref name="toggle" scoped="" ref="0x40842a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40842b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40842c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40842ce0"/>
        <function-ref name="get" scoped="" ref="0x40842dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40842ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40841010"/>
        <function-ref name="set" scoped="" ref="0x408410f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408411d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408412b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40841410"/>
        <function-ref name="clr" scoped="" ref="0x408414f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40840d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40840d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083f010"/>
        <function-ref name="isInput" scoped="" ref="0x4083f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4083f1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4083f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4083f390"/>
        <function-ref name="getResistor" scoped="" ref="0x4083f470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083f550"/>
        <function-ref name="get" scoped="" ref="0x4083f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083f710"/>
        <function-ref name="getRaw" scoped="" ref="0x4083f7f0"/>
        <function-ref name="set" scoped="" ref="0x4083f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083fbf0"/>
        <function-ref name="clr" scoped="" ref="0x4083fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408575c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408575c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408577a0"/>
        <function-ref name="isInput" scoped="" ref="0x40857880"/>
        <function-ref name="setResistor" scoped="" ref="0x40857960"/>
        <function-ref name="toggle" scoped="" ref="0x40857a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40857b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40857c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40857ce0"/>
        <function-ref name="get" scoped="" ref="0x40857dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40857ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40856010"/>
        <function-ref name="set" scoped="" ref="0x408560f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408561d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408562b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40856410"/>
        <function-ref name="clr" scoped="" ref="0x408564f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40855d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40855d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40854010"/>
        <function-ref name="isInput" scoped="" ref="0x408540f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408541d0"/>
        <function-ref name="toggle" scoped="" ref="0x408542b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40854390"/>
        <function-ref name="getResistor" scoped="" ref="0x40854470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40854550"/>
        <function-ref name="get" scoped="" ref="0x40854630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40854710"/>
        <function-ref name="getRaw" scoped="" ref="0x408547f0"/>
        <function-ref name="set" scoped="" ref="0x408548d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408549b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40854a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40854bf0"/>
        <function-ref name="clr" scoped="" ref="0x40854cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408525c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408525c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408527a0"/>
        <function-ref name="isInput" scoped="" ref="0x40852880"/>
        <function-ref name="setResistor" scoped="" ref="0x40852960"/>
        <function-ref name="toggle" scoped="" ref="0x40852a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40852b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40852c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40852ce0"/>
        <function-ref name="get" scoped="" ref="0x40852dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40852ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40851010"/>
        <function-ref name="set" scoped="" ref="0x408510f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408511d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408512b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40851410"/>
        <function-ref name="clr" scoped="" ref="0x408514f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40850de8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40850de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084f010"/>
        <function-ref name="isInput" scoped="" ref="0x4084f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4084f1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4084f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084f390"/>
        <function-ref name="getResistor" scoped="" ref="0x4084f470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084f550"/>
        <function-ref name="get" scoped="" ref="0x4084f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084f710"/>
        <function-ref name="getRaw" scoped="" ref="0x4084f7f0"/>
        <function-ref name="set" scoped="" ref="0x4084f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084fbf0"/>
        <function-ref name="clr" scoped="" ref="0x4084fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084d5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4084d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084d7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4084d880"/>
        <function-ref name="setResistor" scoped="" ref="0x4084d960"/>
        <function-ref name="toggle" scoped="" ref="0x4084da40"/>
        <function-ref name="isOutput" scoped="" ref="0x4084db20"/>
        <function-ref name="getResistor" scoped="" ref="0x4084dc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084dce0"/>
        <function-ref name="get" scoped="" ref="0x4084ddc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084dea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40865010"/>
        <function-ref name="set" scoped="" ref="0x408650f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408651d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408652b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40865410"/>
        <function-ref name="clr" scoped="" ref="0x408654f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40864d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40864d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40863010"/>
        <function-ref name="isInput" scoped="" ref="0x408630f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408631d0"/>
        <function-ref name="toggle" scoped="" ref="0x408632b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40863390"/>
        <function-ref name="getResistor" scoped="" ref="0x40863470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40863550"/>
        <function-ref name="get" scoped="" ref="0x40863630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40863710"/>
        <function-ref name="getRaw" scoped="" ref="0x408637f0"/>
        <function-ref name="set" scoped="" ref="0x408638d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408639b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40863a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40863bf0"/>
        <function-ref name="clr" scoped="" ref="0x40863cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408615c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408615c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408617a0"/>
        <function-ref name="isInput" scoped="" ref="0x40861880"/>
        <function-ref name="setResistor" scoped="" ref="0x40861960"/>
        <function-ref name="toggle" scoped="" ref="0x40861a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40861b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40861c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40861ce0"/>
        <function-ref name="get" scoped="" ref="0x40861dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40861ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40860010"/>
        <function-ref name="set" scoped="" ref="0x408600f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408601d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408602b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40860410"/>
        <function-ref name="clr" scoped="" ref="0x408604f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4085fd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4085fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085e010"/>
        <function-ref name="isInput" scoped="" ref="0x4085e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4085e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4085e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4085e390"/>
        <function-ref name="getResistor" scoped="" ref="0x4085e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085e550"/>
        <function-ref name="get" scoped="" ref="0x4085e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4085e710"/>
        <function-ref name="getRaw" scoped="" ref="0x4085e7f0"/>
        <function-ref name="set" scoped="" ref="0x4085e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085ebf0"/>
        <function-ref name="clr" scoped="" ref="0x4085ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4085c5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4085c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085c7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4085c880"/>
        <function-ref name="setResistor" scoped="" ref="0x4085c960"/>
        <function-ref name="toggle" scoped="" ref="0x4085ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x4085cb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4085cc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085cce0"/>
        <function-ref name="get" scoped="" ref="0x4085cdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4085cea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4085b010"/>
        <function-ref name="set" scoped="" ref="0x4085b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085b410"/>
        <function-ref name="clr" scoped="" ref="0x4085b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4085ad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4085ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40859010"/>
        <function-ref name="isInput" scoped="" ref="0x408590f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408591d0"/>
        <function-ref name="toggle" scoped="" ref="0x408592b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40859390"/>
        <function-ref name="getResistor" scoped="" ref="0x40859470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40859550"/>
        <function-ref name="get" scoped="" ref="0x40859630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40859710"/>
        <function-ref name="getRaw" scoped="" ref="0x408597f0"/>
        <function-ref name="set" scoped="" ref="0x408598d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408599b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40859a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40859bf0"/>
        <function-ref name="clr" scoped="" ref="0x40859cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408715c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408715c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408717a0"/>
        <function-ref name="isInput" scoped="" ref="0x40871880"/>
        <function-ref name="setResistor" scoped="" ref="0x40871960"/>
        <function-ref name="toggle" scoped="" ref="0x40871a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40871b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40871c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40871ce0"/>
        <function-ref name="get" scoped="" ref="0x40871dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40871ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40870010"/>
        <function-ref name="set" scoped="" ref="0x408700f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408701d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408702b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40870410"/>
        <function-ref name="clr" scoped="" ref="0x408704f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086fd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4086fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086e010"/>
        <function-ref name="isInput" scoped="" ref="0x4086e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4086e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4086e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4086e390"/>
        <function-ref name="getResistor" scoped="" ref="0x4086e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086e550"/>
        <function-ref name="get" scoped="" ref="0x4086e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4086e710"/>
        <function-ref name="getRaw" scoped="" ref="0x4086e7f0"/>
        <function-ref name="set" scoped="" ref="0x4086e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4086e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4086ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4086ebf0"/>
        <function-ref name="clr" scoped="" ref="0x4086ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086c5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4086c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086c7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4086c880"/>
        <function-ref name="setResistor" scoped="" ref="0x4086c960"/>
        <function-ref name="toggle" scoped="" ref="0x4086ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x4086cb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4086cc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086cce0"/>
        <function-ref name="get" scoped="" ref="0x4086cdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4086cea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4086b010"/>
        <function-ref name="set" scoped="" ref="0x4086b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4086b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4086b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4086b410"/>
        <function-ref name="clr" scoped="" ref="0x4086b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086ad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4086ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40869010"/>
        <function-ref name="isInput" scoped="" ref="0x408690f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408691d0"/>
        <function-ref name="toggle" scoped="" ref="0x408692b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40869390"/>
        <function-ref name="getResistor" scoped="" ref="0x40869470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40869550"/>
        <function-ref name="get" scoped="" ref="0x40869630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40869710"/>
        <function-ref name="getRaw" scoped="" ref="0x408697f0"/>
        <function-ref name="set" scoped="" ref="0x408698d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408699b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40869a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40869bf0"/>
        <function-ref name="clr" scoped="" ref="0x40869cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408675c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408675c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408677a0"/>
        <function-ref name="isInput" scoped="" ref="0x40867880"/>
        <function-ref name="setResistor" scoped="" ref="0x40867960"/>
        <function-ref name="toggle" scoped="" ref="0x40867a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40867b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40867c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40867ce0"/>
        <function-ref name="get" scoped="" ref="0x40867dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40867ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40866010"/>
        <function-ref name="set" scoped="" ref="0x408660f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408661d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408662b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40866410"/>
        <function-ref name="clr" scoped="" ref="0x408664f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087fe68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4087fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087e050"/>
        <function-ref name="isInput" scoped="" ref="0x4087e130"/>
        <function-ref name="setResistor" scoped="" ref="0x4087e210"/>
        <function-ref name="toggle" scoped="" ref="0x4087e2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4087e3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4087e4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087e590"/>
        <function-ref name="get" scoped="" ref="0x4087e670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4087e750"/>
        <function-ref name="getRaw" scoped="" ref="0x4087e830"/>
        <function-ref name="set" scoped="" ref="0x4087e910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4087e9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4087ead0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4087ec30"/>
        <function-ref name="clr" scoped="" ref="0x4087ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087c5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4087c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087c7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4087c880"/>
        <function-ref name="setResistor" scoped="" ref="0x4087c960"/>
        <function-ref name="toggle" scoped="" ref="0x4087ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x4087cb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4087cc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087cce0"/>
        <function-ref name="get" scoped="" ref="0x4087cdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4087cea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4087b010"/>
        <function-ref name="set" scoped="" ref="0x4087b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4087b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4087b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4087b410"/>
        <function-ref name="clr" scoped="" ref="0x4087b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087ad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4087ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40878010"/>
        <function-ref name="isInput" scoped="" ref="0x408780f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408781d0"/>
        <function-ref name="toggle" scoped="" ref="0x408782b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40878390"/>
        <function-ref name="getResistor" scoped="" ref="0x40878470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40878550"/>
        <function-ref name="get" scoped="" ref="0x40878630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40878710"/>
        <function-ref name="getRaw" scoped="" ref="0x408787f0"/>
        <function-ref name="set" scoped="" ref="0x408788d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408789b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40878a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40878bf0"/>
        <function-ref name="clr" scoped="" ref="0x40878cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408765c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408765c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408767a0"/>
        <function-ref name="isInput" scoped="" ref="0x40876880"/>
        <function-ref name="setResistor" scoped="" ref="0x40876960"/>
        <function-ref name="toggle" scoped="" ref="0x40876a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40876b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40876c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40876ce0"/>
        <function-ref name="get" scoped="" ref="0x40876dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40876ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40875010"/>
        <function-ref name="set" scoped="" ref="0x408750f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408751d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408752b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40875410"/>
        <function-ref name="clr" scoped="" ref="0x408754f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40874d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40874d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40873010"/>
        <function-ref name="isInput" scoped="" ref="0x408730f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408731d0"/>
        <function-ref name="toggle" scoped="" ref="0x408732b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40873390"/>
        <function-ref name="getResistor" scoped="" ref="0x40873470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40873550"/>
        <function-ref name="get" scoped="" ref="0x40873630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40873710"/>
        <function-ref name="getRaw" scoped="" ref="0x408737f0"/>
        <function-ref name="set" scoped="" ref="0x408738d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408739b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40873a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40873bf0"/>
        <function-ref name="clr" scoped="" ref="0x40873cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088b5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4088b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088b7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4088b880"/>
        <function-ref name="setResistor" scoped="" ref="0x4088b960"/>
        <function-ref name="toggle" scoped="" ref="0x4088ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x4088bb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4088bc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088bce0"/>
        <function-ref name="get" scoped="" ref="0x4088bdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4088bea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4088a010"/>
        <function-ref name="set" scoped="" ref="0x4088a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4088a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4088a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4088a410"/>
        <function-ref name="clr" scoped="" ref="0x4088a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40889d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40889d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40888010"/>
        <function-ref name="isInput" scoped="" ref="0x408880f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408881d0"/>
        <function-ref name="toggle" scoped="" ref="0x408882b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40888390"/>
        <function-ref name="getResistor" scoped="" ref="0x40888470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40888550"/>
        <function-ref name="get" scoped="" ref="0x40888630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40888710"/>
        <function-ref name="getRaw" scoped="" ref="0x408887f0"/>
        <function-ref name="set" scoped="" ref="0x408888d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408889b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40888a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40888bf0"/>
        <function-ref name="clr" scoped="" ref="0x40888cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408865c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408865c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408867a0"/>
        <function-ref name="isInput" scoped="" ref="0x40886880"/>
        <function-ref name="setResistor" scoped="" ref="0x40886960"/>
        <function-ref name="toggle" scoped="" ref="0x40886a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40886b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40886c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40886ce0"/>
        <function-ref name="get" scoped="" ref="0x40886dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40886ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40885010"/>
        <function-ref name="set" scoped="" ref="0x408850f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408851d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408852b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40885410"/>
        <function-ref name="clr" scoped="" ref="0x408854f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40884d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40884d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40883010"/>
        <function-ref name="isInput" scoped="" ref="0x408830f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408831d0"/>
        <function-ref name="toggle" scoped="" ref="0x408832b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40883390"/>
        <function-ref name="getResistor" scoped="" ref="0x40883470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40883550"/>
        <function-ref name="get" scoped="" ref="0x40883630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40883710"/>
        <function-ref name="getRaw" scoped="" ref="0x408837f0"/>
        <function-ref name="set" scoped="" ref="0x408838d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408839b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40883a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40883bf0"/>
        <function-ref name="clr" scoped="" ref="0x40883cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408815c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408815c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408817a0"/>
        <function-ref name="isInput" scoped="" ref="0x40881880"/>
        <function-ref name="setResistor" scoped="" ref="0x40881960"/>
        <function-ref name="toggle" scoped="" ref="0x40881a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40881b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40881c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40881ce0"/>
        <function-ref name="get" scoped="" ref="0x40881dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40881ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40880010"/>
        <function-ref name="set" scoped="" ref="0x408800f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408801d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408802b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40880410"/>
        <function-ref name="clr" scoped="" ref="0x408804f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40899d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40899d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40898010"/>
        <function-ref name="isInput" scoped="" ref="0x408980f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408981d0"/>
        <function-ref name="toggle" scoped="" ref="0x408982b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40898390"/>
        <function-ref name="getResistor" scoped="" ref="0x40898470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40898550"/>
        <function-ref name="get" scoped="" ref="0x40898630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40898710"/>
        <function-ref name="getRaw" scoped="" ref="0x408987f0"/>
        <function-ref name="set" scoped="" ref="0x408988d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408989b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40898a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40898bf0"/>
        <function-ref name="clr" scoped="" ref="0x40898cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408965c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408965c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408967a0"/>
        <function-ref name="isInput" scoped="" ref="0x40896880"/>
        <function-ref name="setResistor" scoped="" ref="0x40896960"/>
        <function-ref name="toggle" scoped="" ref="0x40896a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40896b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40896c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40896ce0"/>
        <function-ref name="get" scoped="" ref="0x40896dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40896ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40895010"/>
        <function-ref name="set" scoped="" ref="0x408950f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408951d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408952b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40895410"/>
        <function-ref name="clr" scoped="" ref="0x408954f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40894d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40894d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40893010"/>
        <function-ref name="isInput" scoped="" ref="0x408930f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408931d0"/>
        <function-ref name="toggle" scoped="" ref="0x408932b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40893390"/>
        <function-ref name="getResistor" scoped="" ref="0x40893470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40893550"/>
        <function-ref name="get" scoped="" ref="0x40893630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40893710"/>
        <function-ref name="getRaw" scoped="" ref="0x408937f0"/>
        <function-ref name="set" scoped="" ref="0x408938d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408939b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40893a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40893bf0"/>
        <function-ref name="clr" scoped="" ref="0x40893cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408915c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408915c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408917a0"/>
        <function-ref name="isInput" scoped="" ref="0x40891880"/>
        <function-ref name="setResistor" scoped="" ref="0x40891960"/>
        <function-ref name="toggle" scoped="" ref="0x40891a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40891b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40891c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40891ce0"/>
        <function-ref name="get" scoped="" ref="0x40891dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40891ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40890010"/>
        <function-ref name="set" scoped="" ref="0x408900f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408901d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408902b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40890410"/>
        <function-ref name="clr" scoped="" ref="0x408904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088fd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4088fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088e010"/>
        <function-ref name="isInput" scoped="" ref="0x4088e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4088e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4088e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4088e390"/>
        <function-ref name="getResistor" scoped="" ref="0x4088e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088e550"/>
        <function-ref name="get" scoped="" ref="0x4088e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4088e710"/>
        <function-ref name="getRaw" scoped="" ref="0x4088e7f0"/>
        <function-ref name="set" scoped="" ref="0x4088e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4088e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4088ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4088ebf0"/>
        <function-ref name="clr" scoped="" ref="0x4088ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a65c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a67a0"/>
        <function-ref name="isInput" scoped="" ref="0x408a6880"/>
        <function-ref name="setResistor" scoped="" ref="0x408a6960"/>
        <function-ref name="toggle" scoped="" ref="0x408a6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408a6b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408a6c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a6ce0"/>
        <function-ref name="get" scoped="" ref="0x408a6dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a6ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408a4010"/>
        <function-ref name="set" scoped="" ref="0x408a40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a4410"/>
        <function-ref name="clr" scoped="" ref="0x408a44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a3d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a2010"/>
        <function-ref name="isInput" scoped="" ref="0x408a20f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408a21d0"/>
        <function-ref name="toggle" scoped="" ref="0x408a22b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a2390"/>
        <function-ref name="getResistor" scoped="" ref="0x408a2470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a2550"/>
        <function-ref name="get" scoped="" ref="0x408a2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a2710"/>
        <function-ref name="getRaw" scoped="" ref="0x408a27f0"/>
        <function-ref name="set" scoped="" ref="0x408a28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a2bf0"/>
        <function-ref name="clr" scoped="" ref="0x408a2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a05c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a07a0"/>
        <function-ref name="isInput" scoped="" ref="0x408a0880"/>
        <function-ref name="setResistor" scoped="" ref="0x408a0960"/>
        <function-ref name="toggle" scoped="" ref="0x408a0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408a0b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408a0c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a0ce0"/>
        <function-ref name="get" scoped="" ref="0x408a0dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a0ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4089f010"/>
        <function-ref name="set" scoped="" ref="0x4089f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4089f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4089f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4089f410"/>
        <function-ref name="clr" scoped="" ref="0x4089f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089ed68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4089ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089d010"/>
        <function-ref name="isInput" scoped="" ref="0x4089d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4089d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4089d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089d390"/>
        <function-ref name="getResistor" scoped="" ref="0x4089d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089d550"/>
        <function-ref name="get" scoped="" ref="0x4089d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4089d710"/>
        <function-ref name="getRaw" scoped="" ref="0x4089d7f0"/>
        <function-ref name="set" scoped="" ref="0x4089d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4089d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4089da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4089dbf0"/>
        <function-ref name="clr" scoped="" ref="0x4089dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089b5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4089b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089b7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4089b880"/>
        <function-ref name="setResistor" scoped="" ref="0x4089b960"/>
        <function-ref name="toggle" scoped="" ref="0x4089ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x4089bb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4089bc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089bce0"/>
        <function-ref name="get" scoped="" ref="0x4089bdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4089bea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4089a010"/>
        <function-ref name="set" scoped="" ref="0x4089a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4089a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4089a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4089a410"/>
        <function-ref name="clr" scoped="" ref="0x4089a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b4d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b3010"/>
        <function-ref name="isInput" scoped="" ref="0x408b30f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408b31d0"/>
        <function-ref name="toggle" scoped="" ref="0x408b32b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b3390"/>
        <function-ref name="getResistor" scoped="" ref="0x408b3470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b3550"/>
        <function-ref name="get" scoped="" ref="0x408b3630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b3710"/>
        <function-ref name="getRaw" scoped="" ref="0x408b37f0"/>
        <function-ref name="set" scoped="" ref="0x408b38d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b39b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b3a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b3bf0"/>
        <function-ref name="clr" scoped="" ref="0x408b3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b15c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b17a0"/>
        <function-ref name="isInput" scoped="" ref="0x408b1880"/>
        <function-ref name="setResistor" scoped="" ref="0x408b1960"/>
        <function-ref name="toggle" scoped="" ref="0x408b1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408b1b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408b1c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b1ce0"/>
        <function-ref name="get" scoped="" ref="0x408b1dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b1ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408b0010"/>
        <function-ref name="set" scoped="" ref="0x408b00f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b01d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b02b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b0410"/>
        <function-ref name="clr" scoped="" ref="0x408b04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408afd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408afd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ae010"/>
        <function-ref name="isInput" scoped="" ref="0x408ae0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408ae1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408ae2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408ae390"/>
        <function-ref name="getResistor" scoped="" ref="0x408ae470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ae550"/>
        <function-ref name="get" scoped="" ref="0x408ae630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408ae710"/>
        <function-ref name="getRaw" scoped="" ref="0x408ae7f0"/>
        <function-ref name="set" scoped="" ref="0x408ae8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ae9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408aea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408aebf0"/>
        <function-ref name="clr" scoped="" ref="0x408aecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ac5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ac7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408ac880"/>
        <function-ref name="setResistor" scoped="" ref="0x408ac960"/>
        <function-ref name="toggle" scoped="" ref="0x408aca40"/>
        <function-ref name="isOutput" scoped="" ref="0x408acb20"/>
        <function-ref name="getResistor" scoped="" ref="0x408acc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408acce0"/>
        <function-ref name="get" scoped="" ref="0x408acdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408acea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408ab010"/>
        <function-ref name="set" scoped="" ref="0x408ab0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ab1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ab2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ab410"/>
        <function-ref name="clr" scoped="" ref="0x408ab4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x408dfb68" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x408dfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408dfd40"/>
        <function-ref name="isInput" scoped="" ref="0x408dfe20"/>
        <function-ref name="setResistor" scoped="" ref="0x408dff00"/>
        <function-ref name="toggle" scoped="" ref="0x408de010"/>
        <function-ref name="isOutput" scoped="" ref="0x408de0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408de2b0"/>
        <function-ref name="get" scoped="" ref="0x408de390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408de470"/>
        <function-ref name="getRaw" scoped="" ref="0x408de550"/>
        <function-ref name="set" scoped="" ref="0x408de630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408de710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408de7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408de950"/>
        <function-ref name="clr" scoped="" ref="0x408dea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408df1f0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x408df1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408df3c8"/>
        <function-ref name="isInput" scoped="" ref="0x408df4a8"/>
        <function-ref name="toggle" scoped="" ref="0x408df588"/>
        <function-ref name="isOutput" scoped="" ref="0x408df668"/>
        <function-ref name="get" scoped="" ref="0x408df748"/>
        <function-ref name="makeOutput" scoped="" ref="0x408df828"/>
        <function-ref name="set" scoped="" ref="0x408df908"/>
        <function-ref name="clr" scoped="" ref="0x408df9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x408ef350" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x408ef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ef528"/>
        <function-ref name="isInput" scoped="" ref="0x408ef608"/>
        <function-ref name="setResistor" scoped="" ref="0x408ef6e8"/>
        <function-ref name="toggle" scoped="" ref="0x408ef7c8"/>
        <function-ref name="isOutput" scoped="" ref="0x408ef8a8"/>
        <function-ref name="getResistor" scoped="" ref="0x408ef988"/>
        <function-ref name="makeOutput" scoped="" ref="0x408efa68"/>
        <function-ref name="get" scoped="" ref="0x408efb48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408efc28"/>
        <function-ref name="getRaw" scoped="" ref="0x408efd08"/>
        <function-ref name="set" scoped="" ref="0x408efde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408efec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ee010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ee170"/>
        <function-ref name="clr" scoped="" ref="0x408ee250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408f09a0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x408f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f0b78"/>
        <function-ref name="isInput" scoped="" ref="0x408f0c58"/>
        <function-ref name="toggle" scoped="" ref="0x408f0d38"/>
        <function-ref name="isOutput" scoped="" ref="0x408f0e18"/>
        <function-ref name="get" scoped="" ref="0x408f0ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ef010"/>
        <function-ref name="set" scoped="" ref="0x408ef0f0"/>
        <function-ref name="clr" scoped="" ref="0x408ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x408edb20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x408edb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408edcf8"/>
        <function-ref name="isInput" scoped="" ref="0x408eddd8"/>
        <function-ref name="setResistor" scoped="" ref="0x408edeb8"/>
        <function-ref name="toggle" scoped="" ref="0x408ec010"/>
        <function-ref name="isOutput" scoped="" ref="0x408ec0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408ec1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ec2b0"/>
        <function-ref name="get" scoped="" ref="0x408ec390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408ec470"/>
        <function-ref name="getRaw" scoped="" ref="0x408ec550"/>
        <function-ref name="set" scoped="" ref="0x408ec630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ec710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ec950"/>
        <function-ref name="clr" scoped="" ref="0x408eca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408ed1a8" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x408ed1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ed380"/>
        <function-ref name="isInput" scoped="" ref="0x408ed460"/>
        <function-ref name="toggle" scoped="" ref="0x408ed540"/>
        <function-ref name="isOutput" scoped="" ref="0x408ed620"/>
        <function-ref name="get" scoped="" ref="0x408ed700"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ed7e0"/>
        <function-ref name="set" scoped="" ref="0x408ed8c0"/>
        <function-ref name="clr" scoped="" ref="0x408ed9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409020a0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HemeraSamplerC.TimerTHL"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x409020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408fdb88"/>
        <function-ref name="fired" scoped="" ref="0x40902e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408fd548"/>
        <function-ref name="isOneShot" scoped="" ref="0x408fd2f0"/>
        <function-ref name="getdt" scoped="" ref="0x409db048"/>
        <function-ref name="gett0" scoped="" ref="0x408fdde0"/>
        <function-ref name="isRunning" scoped="" ref="0x408fd098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409026c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408fd868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40902948"/>
        <function-ref name="stop" scoped="" ref="0x40902bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408fc4d0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x408fc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408f9010"/>
        <function-ref name="fired" scoped="" ref="0x408fb268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408fb970"/>
        <function-ref name="isOneShot" scoped="" ref="0x408fb718"/>
        <function-ref name="getdt" scoped="" ref="0x408f94c0"/>
        <function-ref name="gett0" scoped="" ref="0x408f9268"/>
        <function-ref name="isRunning" scoped="" ref="0x408fb4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408fcaf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408fbc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x408fcd78"/>
        <function-ref name="stop" scoped="" ref="0x408fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409125e8" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x409125e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4090f110"/>
        <function-ref name="fired" scoped="" ref="0x40911388"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40911a90"/>
        <function-ref name="isOneShot" scoped="" ref="0x40911838"/>
        <function-ref name="getdt" scoped="" ref="0x4090f5c0"/>
        <function-ref name="gett0" scoped="" ref="0x4090f368"/>
        <function-ref name="isRunning" scoped="" ref="0x409115e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40912c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40911db0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40912e90"/>
        <function-ref name="stop" scoped="" ref="0x40911130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4090c7f0" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x4090c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4090ce38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f9d78" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x408f9d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40912010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4090d978" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x4090d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4090be40"/>
        <function-ref name="fired" scoped="" ref="0x4090b610"/>
        <function-ref name="startAt" scoped="" ref="0x4090bb00"/>
        <function-ref name="isRunning" scoped="" ref="0x4090b888"/>
        <function-ref name="getAlarm" scoped="" ref="0x409910d8"/>
        <function-ref name="start" scoped="" ref="0x4090b0f8"/>
        <function-ref name="stop" scoped="" ref="0x4090b398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4090d520" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4090d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4090d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x419a6b08" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x419a6b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419a3068"/>
        <function-ref name="fired" scoped="" ref="0x419a4820"/>
        <function-ref name="startAt" scoped="" ref="0x419a4d10"/>
        <function-ref name="isRunning" scoped="" ref="0x419a4a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x419a32e0"/>
        <function-ref name="start" scoped="" ref="0x419a4308"/>
        <function-ref name="stop" scoped="" ref="0x419a45a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419a66b0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x419a66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419a6888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x41998a98" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x41998a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x41998c70"/>
        <function-ref name="setEvent" scoped="" ref="0x41998d50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x41998e30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x41998f10"/>
        <function-ref name="fired" scoped="" ref="0x41997010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x41999440" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x41999440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41999618"/>
        <function-ref name="setClockSource" scoped="" ref="0x419996f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x419997d8"/>
        <function-ref name="get" scoped="" ref="0x419998b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x41999998"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41999a78"/>
        <function-ref name="getMode" scoped="" ref="0x41999b58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41999c38"/>
        <function-ref name="overflow" scoped="" ref="0x41999d18"/>
        <function-ref name="setMode" scoped="" ref="0x41999df8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x41999ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x41998060" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x41998060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x41998238"/>
        <function-ref name="getControl" scoped="" ref="0x41998318"/>
        <function-ref name="enableEvents" scoped="" ref="0x419983f8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x419984d8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x419985b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x41998698"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41998778"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x41998858"/>
        <function-ref name="setControl" scoped="" ref="0x41998938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x4092e1b0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x4092e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4092e388"/>
        <function-ref name="setEvent" scoped="" ref="0x4092e468"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4092e548"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4092e628"/>
        <function-ref name="fired" scoped="" ref="0x4092e708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x409143b0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x409143b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40914588"/>
        <function-ref name="setClockSource" scoped="" ref="0x40914668"/>
        <function-ref name="enableEvents" scoped="" ref="0x40914748"/>
        <function-ref name="get" scoped="" ref="0x40914828"/>
        <function-ref name="disableEvents" scoped="" ref="0x40914908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409149e8"/>
        <function-ref name="getMode" scoped="" ref="0x40914ac8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40914ba8"/>
        <function-ref name="overflow" scoped="" ref="0x40914c88"/>
        <function-ref name="setMode" scoped="" ref="0x40914d68"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40914e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x4092f3f8" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x4092f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4092f5d0"/>
        <function-ref name="getControl" scoped="" ref="0x4092f6b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4092f790"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4092f870"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4092f950"/>
        <function-ref name="disableEvents" scoped="" ref="0x4092fa30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4092fb10"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4092fbf0"/>
        <function-ref name="setControl" scoped="" ref="0x4092fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x419934f0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x419934f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x419936c8"/>
        <function-ref name="setEvent" scoped="" ref="0x419937a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x41993888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x41993968"/>
        <function-ref name="fired" scoped="" ref="0x41993a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x41995de8" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x41995de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41994010"/>
        <function-ref name="setClockSource" scoped="" ref="0x419940f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x419941d0"/>
        <function-ref name="get" scoped="" ref="0x419942b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x41994390"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41994470"/>
        <function-ref name="getMode" scoped="" ref="0x41994550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41994630"/>
        <function-ref name="overflow" scoped="" ref="0x41994710"/>
        <function-ref name="setMode" scoped="" ref="0x419947f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x419948d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41996488" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x41996488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41995940"/>
        <function-ref name="fired" scoped="" ref="0x41995110"/>
        <function-ref name="startAt" scoped="" ref="0x41995600"/>
        <function-ref name="isRunning" scoped="" ref="0x41995388"/>
        <function-ref name="getAlarm" scoped="" ref="0x41995bb8"/>
        <function-ref name="start" scoped="" ref="0x41996bd8"/>
        <function-ref name="stop" scoped="" ref="0x41996e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41996010" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41996010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419961e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x41994a30" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x41994a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x41994c08"/>
        <function-ref name="getControl" scoped="" ref="0x41994ce8"/>
        <function-ref name="enableEvents" scoped="" ref="0x41994dc8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x41994ea8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x41993010"/>
        <function-ref name="disableEvents" scoped="" ref="0x419930f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x419931d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x419932b0"/>
        <function-ref name="setControl" scoped="" ref="0x41993390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4095b938" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x4095b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409400a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40940598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40940320"/>
        <function-ref name="overflow" scoped="" ref="0x40940810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x40959440" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40959440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40959b90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409570a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40959e08"/>
        <function-ref name="overflow" scoped="" ref="0x40957320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x40956f08" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40956f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409550f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x409551d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x409552b0"/>
        <function-ref name="get" scoped="" ref="0x40955390"/>
        <function-ref name="disableEvents" scoped="" ref="0x40955470"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40955550"/>
        <function-ref name="getMode" scoped="" ref="0x40955630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40955710"/>
        <function-ref name="overflow" scoped="" ref="0x409557f0"/>
        <function-ref name="setMode" scoped="" ref="0x409558d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x409559b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4094ee10" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x4094ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40956570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40956a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409567e8"/>
        <function-ref name="overflow" scoped="" ref="0x40956cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40978bd0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x40978bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40977340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40977830"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409775b8"/>
        <function-ref name="overflow" scoped="" ref="0x40977aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4096a980" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x4096a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409780f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409785e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40978370"/>
        <function-ref name="overflow" scoped="" ref="0x40978860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x419a25b0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x419a25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419a1ab8"/>
        <function-ref name="fired" scoped="" ref="0x419a1288"/>
        <function-ref name="startAt" scoped="" ref="0x419a1778"/>
        <function-ref name="isRunning" scoped="" ref="0x419a1500"/>
        <function-ref name="getAlarm" scoped="" ref="0x419a1d30"/>
        <function-ref name="start" scoped="" ref="0x419a2d00"/>
        <function-ref name="stop" scoped="" ref="0x419a1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4199e380" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x4199e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4199d840"/>
        <function-ref name="fired" scoped="" ref="0x4199d010"/>
        <function-ref name="startAt" scoped="" ref="0x4199d500"/>
        <function-ref name="isRunning" scoped="" ref="0x4199d288"/>
        <function-ref name="getAlarm" scoped="" ref="0x4199dab8"/>
        <function-ref name="start" scoped="" ref="0x4199ead0"/>
        <function-ref name="stop" scoped="" ref="0x4199ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x419a00a0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x419a00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419a07f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x419a0ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x419a0a68"/>
        <function-ref name="overflow" scoped="" ref="0x4199e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x409b3010" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x409b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409b31e8"/>
        <function-ref name="runTask" scoped="" ref="0x409b32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x409b55b8" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x409b55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409b4ab8"/>
        <function-ref name="fired" scoped="" ref="0x409b4288"/>
        <function-ref name="startAt" scoped="" ref="0x409b4778"/>
        <function-ref name="isRunning" scoped="" ref="0x409b4500"/>
        <function-ref name="getAlarm" scoped="" ref="0x409b4d30"/>
        <function-ref name="start" scoped="" ref="0x409b5d08"/>
        <function-ref name="stop" scoped="" ref="0x409b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4098f270" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4098f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409b6d58"/>
        <function-ref name="fired" scoped="" ref="0x409b6010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409b6718"/>
        <function-ref name="isOneShot" scoped="" ref="0x409b64c0"/>
        <function-ref name="getdt" scoped="" ref="0x409b5268"/>
        <function-ref name="gett0" scoped="" ref="0x409b5010"/>
        <function-ref name="isRunning" scoped="" ref="0x409b6268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4098f898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409b6a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4098fb18"/>
        <function-ref name="stop" scoped="" ref="0x4098fd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x409e6948" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x409e6948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409e6b20"/>
        <function-ref name="runTask" scoped="" ref="0x409e6c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x409c9688" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x409c9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409e6248"/>
        <function-ref name="fired" scoped="" ref="0x409c84e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409c8bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x409c8998"/>
        <function-ref name="getdt" scoped="" ref="0x409e66f8"/>
        <function-ref name="gett0" scoped="" ref="0x409e64a0"/>
        <function-ref name="isRunning" scoped="" ref="0x409c8740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409c9cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409c8f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x409c8010"/>
        <function-ref name="stop" scoped="" ref="0x409c8290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409af338" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x409af338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409cbea8"/>
        <function-ref name="fired" scoped="" ref="0x409cb110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409cb848"/>
        <function-ref name="isOneShot" scoped="" ref="0x409cb5e0"/>
        <function-ref name="getdt" scoped="" ref="0x409c9398"/>
        <function-ref name="gett0" scoped="" ref="0x409c9130"/>
        <function-ref name="isRunning" scoped="" ref="0x409cb378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409af970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409cbb78"/>
        <function-ref name="startOneShot" scoped="" ref="0x409afc00"/>
        <function-ref name="stop" scoped="" ref="0x409afe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409ded28" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x409ded28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409e4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409e46e0" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x409e46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409e4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409e3350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409e30d8"/>
        <function-ref name="overflow" scoped="" ref="0x409e35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x409f5448" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x409f5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f5620"/>
        <function-ref name="fired" scoped="" ref="0x409f5700"/>
        <function-ref name="disable" scoped="" ref="0x409f57e0"/>
        <function-ref name="edge" scoped="" ref="0x409f58c0"/>
        <function-ref name="enable" scoped="" ref="0x409f59a0"/>
        <function-ref name="getValue" scoped="" ref="0x409f5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x409f0dd8" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x409f0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ef010"/>
        <function-ref name="fired" scoped="" ref="0x409ef0f0"/>
        <function-ref name="disable" scoped="" ref="0x409ef1d0"/>
        <function-ref name="edge" scoped="" ref="0x409ef2b0"/>
        <function-ref name="enable" scoped="" ref="0x409ef390"/>
        <function-ref name="getValue" scoped="" ref="0x409ef470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x409f4eb8" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x409f4eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f30c0"/>
        <function-ref name="fired" scoped="" ref="0x409f31a0"/>
        <function-ref name="disable" scoped="" ref="0x409f3280"/>
        <function-ref name="edge" scoped="" ref="0x409f3360"/>
        <function-ref name="enable" scoped="" ref="0x409f3440"/>
        <function-ref name="getValue" scoped="" ref="0x409f3520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x409f2070" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x409f2070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f2248"/>
        <function-ref name="fired" scoped="" ref="0x409f2328"/>
        <function-ref name="disable" scoped="" ref="0x409f2408"/>
        <function-ref name="edge" scoped="" ref="0x409f24e8"/>
        <function-ref name="enable" scoped="" ref="0x409f25c8"/>
        <function-ref name="getValue" scoped="" ref="0x409f26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x409f6288" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x409f6288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f6460"/>
        <function-ref name="fired" scoped="" ref="0x409f6540"/>
        <function-ref name="disable" scoped="" ref="0x409f6620"/>
        <function-ref name="edge" scoped="" ref="0x409f6700"/>
        <function-ref name="enable" scoped="" ref="0x409f67e0"/>
        <function-ref name="getValue" scoped="" ref="0x409f68c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x409f1b38" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x409f1b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f1d90"/>
        <function-ref name="fired" scoped="" ref="0x409f1e70"/>
        <function-ref name="disable" scoped="" ref="0x409f0010"/>
        <function-ref name="edge" scoped="" ref="0x409f00f0"/>
        <function-ref name="enable" scoped="" ref="0x409f01d0"/>
        <function-ref name="getValue" scoped="" ref="0x409f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x409f5cf8" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x409f5cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f5ed0"/>
        <function-ref name="fired" scoped="" ref="0x409f4010"/>
        <function-ref name="disable" scoped="" ref="0x409f40f0"/>
        <function-ref name="edge" scoped="" ref="0x409f41d0"/>
        <function-ref name="enable" scoped="" ref="0x409f42b0"/>
        <function-ref name="getValue" scoped="" ref="0x409f4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x409ef6e8" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x409ef6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ef8c0"/>
        <function-ref name="fired" scoped="" ref="0x409ef9a0"/>
        <function-ref name="disable" scoped="" ref="0x409efa80"/>
        <function-ref name="edge" scoped="" ref="0x409efb60"/>
        <function-ref name="enable" scoped="" ref="0x409efc40"/>
        <function-ref name="getValue" scoped="" ref="0x409efd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x409f7070" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x409f7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f7248"/>
        <function-ref name="fired" scoped="" ref="0x409f7328"/>
        <function-ref name="disable" scoped="" ref="0x409f7408"/>
        <function-ref name="edge" scoped="" ref="0x409f74e8"/>
        <function-ref name="enable" scoped="" ref="0x409f75c8"/>
        <function-ref name="getValue" scoped="" ref="0x409f76a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x409f2920" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x409f2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f2af8"/>
        <function-ref name="fired" scoped="" ref="0x409f2bd8"/>
        <function-ref name="disable" scoped="" ref="0x409f2cb8"/>
        <function-ref name="edge" scoped="" ref="0x409f2d98"/>
        <function-ref name="enable" scoped="" ref="0x409f2e78"/>
        <function-ref name="getValue" scoped="" ref="0x409f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x409f6b38" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x409f6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f6d10"/>
        <function-ref name="fired" scoped="" ref="0x409f6df0"/>
        <function-ref name="disable" scoped="" ref="0x409f6ed0"/>
        <function-ref name="edge" scoped="" ref="0x409f5010"/>
        <function-ref name="enable" scoped="" ref="0x409f50f0"/>
        <function-ref name="getValue" scoped="" ref="0x409f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x409f0528" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x409f0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f0700"/>
        <function-ref name="fired" scoped="" ref="0x409f07e0"/>
        <function-ref name="disable" scoped="" ref="0x409f08c0"/>
        <function-ref name="edge" scoped="" ref="0x409f09a0"/>
        <function-ref name="enable" scoped="" ref="0x409f0a80"/>
        <function-ref name="getValue" scoped="" ref="0x409f0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x409f4608" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x409f4608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f47e0"/>
        <function-ref name="fired" scoped="" ref="0x409f48c0"/>
        <function-ref name="disable" scoped="" ref="0x409f49a0"/>
        <function-ref name="edge" scoped="" ref="0x409f4a80"/>
        <function-ref name="enable" scoped="" ref="0x409f4b60"/>
        <function-ref name="getValue" scoped="" ref="0x409f4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x409f3798" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x409f3798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f3970"/>
        <function-ref name="fired" scoped="" ref="0x409f3a50"/>
        <function-ref name="disable" scoped="" ref="0x409f3b30"/>
        <function-ref name="edge" scoped="" ref="0x409f3c10"/>
        <function-ref name="enable" scoped="" ref="0x409f3cf0"/>
        <function-ref name="getValue" scoped="" ref="0x409f3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x409f7920" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x409f7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f7af8"/>
        <function-ref name="fired" scoped="" ref="0x409f7bd8"/>
        <function-ref name="disable" scoped="" ref="0x409f7cb8"/>
        <function-ref name="edge" scoped="" ref="0x409f7d98"/>
        <function-ref name="enable" scoped="" ref="0x409f7e78"/>
        <function-ref name="getValue" scoped="" ref="0x409f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x409f1288" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x409f1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f1460"/>
        <function-ref name="fired" scoped="" ref="0x409f1540"/>
        <function-ref name="disable" scoped="" ref="0x409f1620"/>
        <function-ref name="edge" scoped="" ref="0x409f1700"/>
        <function-ref name="enable" scoped="" ref="0x409f17e0"/>
        <function-ref name="getValue" scoped="" ref="0x409f18c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x409eac18" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x409eac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eadf0"/>
        <function-ref name="fired" scoped="" ref="0x409eaed0"/>
        <function-ref name="disable" scoped="" ref="0x409e9010"/>
        <function-ref name="edge" scoped="" ref="0x409e90f0"/>
        <function-ref name="enable" scoped="" ref="0x409e91d0"/>
        <function-ref name="getValue" scoped="" ref="0x409e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x40a04608" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x40a04608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a047e0"/>
        <function-ref name="fired" scoped="" ref="0x40a048c0"/>
        <function-ref name="disable" scoped="" ref="0x40a049a0"/>
        <function-ref name="edge" scoped="" ref="0x40a04a80"/>
        <function-ref name="enable" scoped="" ref="0x40a04b60"/>
        <function-ref name="getValue" scoped="" ref="0x40a04c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x409e86e8" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x409e86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e88c0"/>
        <function-ref name="fired" scoped="" ref="0x409e89a0"/>
        <function-ref name="disable" scoped="" ref="0x409e8a80"/>
        <function-ref name="edge" scoped="" ref="0x409e8b60"/>
        <function-ref name="enable" scoped="" ref="0x409e8c40"/>
        <function-ref name="getValue" scoped="" ref="0x409e8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x40a078c0" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x40a078c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a07a98"/>
        <function-ref name="fired" scoped="" ref="0x40a07b78"/>
        <function-ref name="disable" scoped="" ref="0x40a07c58"/>
        <function-ref name="edge" scoped="" ref="0x40a07d38"/>
        <function-ref name="enable" scoped="" ref="0x40a07e18"/>
        <function-ref name="getValue" scoped="" ref="0x40a07ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x409eba28" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x409eba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ebc00"/>
        <function-ref name="fired" scoped="" ref="0x409ebce0"/>
        <function-ref name="disable" scoped="" ref="0x409ebdc0"/>
        <function-ref name="edge" scoped="" ref="0x409ebea0"/>
        <function-ref name="enable" scoped="" ref="0x409ea010"/>
        <function-ref name="getValue" scoped="" ref="0x409ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x40a05368" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x40a05368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a055c0"/>
        <function-ref name="fired" scoped="" ref="0x40a056a0"/>
        <function-ref name="disable" scoped="" ref="0x40a05780"/>
        <function-ref name="edge" scoped="" ref="0x40a05860"/>
        <function-ref name="enable" scoped="" ref="0x40a05940"/>
        <function-ref name="getValue" scoped="" ref="0x40a05a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x409e9528" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x409e9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e9700"/>
        <function-ref name="fired" scoped="" ref="0x409e97e0"/>
        <function-ref name="disable" scoped="" ref="0x409e98c0"/>
        <function-ref name="edge" scoped="" ref="0x409e99a0"/>
        <function-ref name="enable" scoped="" ref="0x409e9a80"/>
        <function-ref name="getValue" scoped="" ref="0x409e9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x40a04eb8" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x40a04eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a030c0"/>
        <function-ref name="fired" scoped="" ref="0x40a031a0"/>
        <function-ref name="disable" scoped="" ref="0x40a03280"/>
        <function-ref name="edge" scoped="" ref="0x40a03360"/>
        <function-ref name="enable" scoped="" ref="0x40a03440"/>
        <function-ref name="getValue" scoped="" ref="0x40a03520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x409ee828" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x409ee828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eea00"/>
        <function-ref name="fired" scoped="" ref="0x409eeae0"/>
        <function-ref name="disable" scoped="" ref="0x409eebc0"/>
        <function-ref name="edge" scoped="" ref="0x409eeca0"/>
        <function-ref name="enable" scoped="" ref="0x409eed80"/>
        <function-ref name="getValue" scoped="" ref="0x409eee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x40a06188" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x40a06188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a06360"/>
        <function-ref name="fired" scoped="" ref="0x40a06440"/>
        <function-ref name="disable" scoped="" ref="0x40a06520"/>
        <function-ref name="edge" scoped="" ref="0x40a06600"/>
        <function-ref name="enable" scoped="" ref="0x40a066e0"/>
        <function-ref name="getValue" scoped="" ref="0x40a067c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x409ea368" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x409ea368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ea540"/>
        <function-ref name="fired" scoped="" ref="0x409ea620"/>
        <function-ref name="disable" scoped="" ref="0x409ea700"/>
        <function-ref name="edge" scoped="" ref="0x409ea7e0"/>
        <function-ref name="enable" scoped="" ref="0x409ea8c0"/>
        <function-ref name="getValue" scoped="" ref="0x409ea9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x40a05c98" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x40a05c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a05e70"/>
        <function-ref name="fired" scoped="" ref="0x40a04010"/>
        <function-ref name="disable" scoped="" ref="0x40a040f0"/>
        <function-ref name="edge" scoped="" ref="0x40a041d0"/>
        <function-ref name="enable" scoped="" ref="0x40a042b0"/>
        <function-ref name="getValue" scoped="" ref="0x40a04390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x409e9dd8" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x409e9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e8010"/>
        <function-ref name="fired" scoped="" ref="0x409e80f0"/>
        <function-ref name="disable" scoped="" ref="0x409e81d0"/>
        <function-ref name="edge" scoped="" ref="0x409e82b0"/>
        <function-ref name="enable" scoped="" ref="0x409e8390"/>
        <function-ref name="getValue" scoped="" ref="0x409e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x40a07010" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x40a07010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a071e8"/>
        <function-ref name="fired" scoped="" ref="0x40a072c8"/>
        <function-ref name="disable" scoped="" ref="0x40a073a8"/>
        <function-ref name="edge" scoped="" ref="0x40a07488"/>
        <function-ref name="enable" scoped="" ref="0x40a07568"/>
        <function-ref name="getValue" scoped="" ref="0x40a07648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x409eb178" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x409eb178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eb350"/>
        <function-ref name="fired" scoped="" ref="0x409eb430"/>
        <function-ref name="disable" scoped="" ref="0x409eb510"/>
        <function-ref name="edge" scoped="" ref="0x409eb5f0"/>
        <function-ref name="enable" scoped="" ref="0x409eb6d0"/>
        <function-ref name="getValue" scoped="" ref="0x409eb7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x40a06a38" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x40a06a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a06c10"/>
        <function-ref name="fired" scoped="" ref="0x40a06cf0"/>
        <function-ref name="disable" scoped="" ref="0x40a06dd0"/>
        <function-ref name="edge" scoped="" ref="0x40a06eb0"/>
        <function-ref name="enable" scoped="" ref="0x40a05010"/>
        <function-ref name="getValue" scoped="" ref="0x40a050f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x40b7eba8" loc="49:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x40b7eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x40b7ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40b7e010" loc="48:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x40b7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7e638"/>
        <function-ref name="readDone" scoped="" ref="0x40b7e890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x40b80c10" loc="47:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x40b80c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x40b80de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40b80078" loc="46:../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x40b80078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b806a0"/>
        <function-ref name="readDone" scoped="" ref="0x40b808f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x41a12270" loc="54:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x41a12270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41a12448"/>
        <function-ref name="readStatusReg" scoped="" ref="0x41a12528"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41a12608"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41a126e8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x41a127c8"/>
        <function-ref name="reset" scoped="" ref="0x41a128a8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x41a12988"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x41a12a68"/>
        <function-ref name="resetDone" scoped="" ref="0x41a12b48"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41a12c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x41a158c0" loc="48:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x41a158c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x41a15a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x41a15ca8" loc="49:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x41a15ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41a142e8"/>
        <function-ref name="readDone" scoped="" ref="0x41a14540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x41a168f8" loc="46:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x41a168f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x41a16ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x41a14858" loc="51:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x41a14858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a14a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a14b10"/>
        <function-ref name="request" scoped="" ref="0x41a14bf0"/>
        <function-ref name="granted" scoped="" ref="0x41a14cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a14db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x41a136e8" loc="53:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x41a136e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41a138c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x41a139a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41a13a80"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41a13b60"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x41a13c40"/>
        <function-ref name="reset" scoped="" ref="0x41a13d20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x41a13e00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x41a13ee0"/>
        <function-ref name="resetDone" scoped="" ref="0x41a12010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41a120f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x41a13010" loc="52:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x41a13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a131e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a132c8"/>
        <function-ref name="request" scoped="" ref="0x41a133a8"/>
        <function-ref name="granted" scoped="" ref="0x41a13488"/>
        <function-ref name="isOwner" scoped="" ref="0x41a13568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x41a16ce0" loc="47:../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="HemeraSamplerC.SensirionSen.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x41a16ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41a15350"/>
        <function-ref name="readDone" scoped="" ref="0x41a155a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x40aad1b8" loc="45:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x40aad1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x40aad390"/>
        <function-ref name="readStatusReg" scoped="" ref="0x40aad470"/>
        <function-ref name="measureHumidity" scoped="" ref="0x40aad550"/>
        <function-ref name="measureTemperature" scoped="" ref="0x40aad630"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x40aad710"/>
        <function-ref name="reset" scoped="" ref="0x40aad7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x40aad8d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x40aad9b0"/>
        <function-ref name="resetDone" scoped="" ref="0x40aada90"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x40aadb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a8e740" loc="44:../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40a8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a8e918"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a8e9f8"/>
        <function-ref name="request" scoped="" ref="0x40a8ead8"/>
        <function-ref name="granted" scoped="" ref="0x40a8ebb8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a8ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x40af6cd0" loc="58:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x40af6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40af6ea8"/>
        <function-ref name="disable" scoped="" ref="0x40af4010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40af40f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40af41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x40af16a8" loc="102:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x40af16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af1880"/>
        <function-ref name="runTask" scoped="" ref="0x40af1960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x40af1270" loc="103:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x40af1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af1448"/>
        <function-ref name="runTask" scoped="" ref="0x40af1528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x40af6358" loc="57:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x40af6358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40af6530"/>
        <function-ref name="isInput" scoped="" ref="0x40af6610"/>
        <function-ref name="toggle" scoped="" ref="0x40af66f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40af67d0"/>
        <function-ref name="get" scoped="" ref="0x40af68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40af6990"/>
        <function-ref name="set" scoped="" ref="0x40af6a70"/>
        <function-ref name="clr" scoped="" ref="0x40af6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x40aaae78" loc="54:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x40aaae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x40af7070"/>
        <function-ref name="readStatusReg" scoped="" ref="0x40af7150"/>
        <function-ref name="measureHumidity" scoped="" ref="0x40af7230"/>
        <function-ref name="measureTemperature" scoped="" ref="0x40af7310"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x40af73f0"/>
        <function-ref name="reset" scoped="" ref="0x40af74d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x40af75b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x40af7690"/>
        <function-ref name="resetDone" scoped="" ref="0x40af7770"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x40af7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x40af79d0" loc="56:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x40af79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40af7ba8"/>
        <function-ref name="isInput" scoped="" ref="0x40af7c88"/>
        <function-ref name="toggle" scoped="" ref="0x40af7d68"/>
        <function-ref name="isOutput" scoped="" ref="0x40af7e48"/>
        <function-ref name="get" scoped="" ref="0x40af7f28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40af6018"/>
        <function-ref name="set" scoped="" ref="0x40af60f8"/>
        <function-ref name="clr" scoped="" ref="0x40af61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40af25d8" loc="62:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x40af25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40af27b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40af2890"/>
        <function-ref name="led1On" scoped="" ref="0x40af2970"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40af2a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40af2b30"/>
        <function-ref name="get" scoped="" ref="0x40af2c10"/>
        <function-ref name="led1Off" scoped="" ref="0x40af2cf0"/>
        <function-ref name="led2On" scoped="" ref="0x40af10f0"/>
        <function-ref name="set" scoped="" ref="0x40af2eb0"/>
        <function-ref name="led2Off" scoped="" ref="0x40af2dd0"/>
        <function-ref name="led0On" scoped="" ref="0x40af1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40af43c0" loc="60:../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40af43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40af3ec8"/>
        <function-ref name="fired" scoped="" ref="0x40af3180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40af3888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40af3630"/>
        <function-ref name="getdt" scoped="" ref="0x40af23a8"/>
        <function-ref name="gett0" scoped="" ref="0x40af2150"/>
        <function-ref name="isRunning" scoped="" ref="0x40af33d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40af49e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40af3ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40af4c68"/>
        <function-ref name="stop" scoped="" ref="0x40af4ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x40aea540" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x40aea540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40aea718"/>
        <function-ref name="disable" scoped="" ref="0x40aea7f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40aea8d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40aea9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x40aeba88" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x40aeba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aebc60"/>
        <function-ref name="isInput" scoped="" ref="0x40aebd40"/>
        <function-ref name="toggle" scoped="" ref="0x40aebe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40aebf00"/>
        <function-ref name="get" scoped="" ref="0x40aea010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aea0f0"/>
        <function-ref name="set" scoped="" ref="0x40aea1d0"/>
        <function-ref name="clr" scoped="" ref="0x40aea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x40aeb090" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x40aeb090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aeb268"/>
        <function-ref name="isInput" scoped="" ref="0x40aeb348"/>
        <function-ref name="toggle" scoped="" ref="0x40aeb428"/>
        <function-ref name="isOutput" scoped="" ref="0x40aeb508"/>
        <function-ref name="get" scoped="" ref="0x40aeb5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aeb6c8"/>
        <function-ref name="set" scoped="" ref="0x40aeb7a8"/>
        <function-ref name="clr" scoped="" ref="0x40aeb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aef8e8" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40aef8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aefac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aefba0"/>
        <function-ref name="request" scoped="" ref="0x40aefc80"/>
        <function-ref name="granted" scoped="" ref="0x40aefd60"/>
        <function-ref name="isOwner" scoped="" ref="0x40aefe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40ae9e90" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40ae9e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae8080"/>
        <function-ref name="isInput" scoped="" ref="0x40ae8160"/>
        <function-ref name="setResistor" scoped="" ref="0x40ae8240"/>
        <function-ref name="toggle" scoped="" ref="0x40ae8320"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae8400"/>
        <function-ref name="getResistor" scoped="" ref="0x40ae84e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae85c0"/>
        <function-ref name="get" scoped="" ref="0x40ae86a0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40ae8780"/>
        <function-ref name="getRaw" scoped="" ref="0x40ae8860"/>
        <function-ref name="set" scoped="" ref="0x40ae8940"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40ae8a20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40ae8b00"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40ae8c60"/>
        <function-ref name="clr" scoped="" ref="0x40ae8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40ae9518" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40ae9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae96f0"/>
        <function-ref name="isInput" scoped="" ref="0x40ae97d0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae98b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae9990"/>
        <function-ref name="get" scoped="" ref="0x40ae9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae9b50"/>
        <function-ref name="set" scoped="" ref="0x40ae9c30"/>
        <function-ref name="clr" scoped="" ref="0x40ae9d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40b0a6d0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40b0a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x40b0a988"/>
        <function-ref name="setResistor" scoped="" ref="0x40b0aa68"/>
        <function-ref name="toggle" scoped="" ref="0x40b0ab48"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0ac28"/>
        <function-ref name="getResistor" scoped="" ref="0x40b0ad08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0ade8"/>
        <function-ref name="get" scoped="" ref="0x40b0aec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40b09010"/>
        <function-ref name="getRaw" scoped="" ref="0x40b090f0"/>
        <function-ref name="set" scoped="" ref="0x40b091d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40b092b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40b09390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40b094f0"/>
        <function-ref name="clr" scoped="" ref="0x40b095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40ae7cc0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40ae7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae7e98"/>
        <function-ref name="isInput" scoped="" ref="0x40b0a010"/>
        <function-ref name="toggle" scoped="" ref="0x40b0a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0a1d0"/>
        <function-ref name="get" scoped="" ref="0x40b0a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0a390"/>
        <function-ref name="set" scoped="" ref="0x40b0a470"/>
        <function-ref name="clr" scoped="" ref="0x40b0a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40b08e90" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40b08e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b07080"/>
        <function-ref name="isInput" scoped="" ref="0x40b07160"/>
        <function-ref name="setResistor" scoped="" ref="0x40b07240"/>
        <function-ref name="toggle" scoped="" ref="0x40b07320"/>
        <function-ref name="isOutput" scoped="" ref="0x40b07400"/>
        <function-ref name="getResistor" scoped="" ref="0x40b074e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b075c0"/>
        <function-ref name="get" scoped="" ref="0x40b076a0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40b07780"/>
        <function-ref name="getRaw" scoped="" ref="0x40b07860"/>
        <function-ref name="set" scoped="" ref="0x40b07940"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40b07a20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40b07b00"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40b07c60"/>
        <function-ref name="clr" scoped="" ref="0x40b07d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40b08518" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40b08518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b086f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b087d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b088b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b08990"/>
        <function-ref name="get" scoped="" ref="0x40b08a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b08b50"/>
        <function-ref name="set" scoped="" ref="0x40b08c30"/>
        <function-ref name="clr" scoped="" ref="0x40b08d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b056a8" loc="43:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x40b056a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b05880"/>
        <function-ref name="stopDone" scoped="" ref="0x40b05960"/>
        <function-ref name="start" scoped="" ref="0x40b05a40"/>
        <function-ref name="stop" scoped="" ref="0x40b05b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x40afd308" loc="50:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x40afd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40afd4e0"/>
        <function-ref name="runTask" scoped="" ref="0x40afd5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40afe4b0" loc="47:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x40afe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40afe688"/>
        <function-ref name="isInput" scoped="" ref="0x40afe768"/>
        <function-ref name="toggle" scoped="" ref="0x40afe848"/>
        <function-ref name="isOutput" scoped="" ref="0x40afe928"/>
        <function-ref name="get" scoped="" ref="0x40afea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40afeae8"/>
        <function-ref name="set" scoped="" ref="0x40afebc8"/>
        <function-ref name="clr" scoped="" ref="0x40afeca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x40aff050" loc="45:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x40aff050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aff228"/>
        <function-ref name="isInput" scoped="" ref="0x40aff308"/>
        <function-ref name="toggle" scoped="" ref="0x40aff3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aff4c8"/>
        <function-ref name="get" scoped="" ref="0x40aff5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aff688"/>
        <function-ref name="set" scoped="" ref="0x40aff768"/>
        <function-ref name="clr" scoped="" ref="0x40aff848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x40affa58" loc="46:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x40affa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40affc30"/>
        <function-ref name="isInput" scoped="" ref="0x40affd10"/>
        <function-ref name="toggle" scoped="" ref="0x40affdf0"/>
        <function-ref name="isOutput" scoped="" ref="0x40affed0"/>
        <function-ref name="get" scoped="" ref="0x40afe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40afe0f0"/>
        <function-ref name="set" scoped="" ref="0x40afe1d0"/>
        <function-ref name="clr" scoped="" ref="0x40afe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b05d88" loc="44:../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40b05d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b018a8"/>
        <function-ref name="fired" scoped="" ref="0x40b02b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b01268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b01010"/>
        <function-ref name="getdt" scoped="" ref="0x40b01d58"/>
        <function-ref name="gett0" scoped="" ref="0x40b01b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40b02d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b023c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b01588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b02640"/>
        <function-ref name="stop" scoped="" ref="0x40b028c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b1c2e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40b1c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b1bdd0"/>
        <function-ref name="fired" scoped="" ref="0x40b1b088"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b1b790"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b1b538"/>
        <function-ref name="getdt" scoped="" ref="0x40b1a2a0"/>
        <function-ref name="gett0" scoped="" ref="0x40b1a048"/>
        <function-ref name="isRunning" scoped="" ref="0x40b1b2e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b1c908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b1bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b1cb88"/>
        <function-ref name="stop" scoped="" ref="0x40b1ce08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x40b17be0" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x40b17be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b17db8"/>
        <function-ref name="fired" scoped="" ref="0x40b17e98"/>
        <function-ref name="disable" scoped="" ref="0x40b16010"/>
        <function-ref name="edge" scoped="" ref="0x40b160f0"/>
        <function-ref name="enable" scoped="" ref="0x40b161d0"/>
        <function-ref name="getValue" scoped="" ref="0x40b162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40b175e8" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x40b175e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b177c0"/>
        <function-ref name="disable" scoped="" ref="0x40b178a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40b17980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40b17a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b5f068" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x40b5f068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b5f250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b5f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b5e010" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b5e1f8"/>
        <function-ref name="configure" scoped="" ref="0x40b5e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40b5f470" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b5f648"/>
        <function-ref name="requested" scoped="" ref="0x40b5f728"/>
        <function-ref name="granted" scoped="" ref="0x40b5f808"/>
        <function-ref name="isOwner" scoped="" ref="0x40b5f8e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b5f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b0d908" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40b0d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b0daf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b0dbd0"/>
        <function-ref name="request" scoped="" ref="0x40b0dcb0"/>
        <function-ref name="granted" scoped="" ref="0x40b0dd90"/>
        <function-ref name="isOwner" scoped="" ref="0x40b0de70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b5fb08" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b5fce0"/>
        <function-ref name="userId" scoped="" ref="0x40b5fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a2b100" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41a2b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a2b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41a2b438" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x41a2b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a2b610"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a2b6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a2b7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x41a2b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a2acf8" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41a2acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a2aee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a28010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a28ca8" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a28ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a28e90"/>
        <function-ref name="configure" scoped="" ref="0x41a27010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41a27170" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x41a27170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a27348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a27428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a27508"/>
        <function-ref name="dequeue" scoped="" ref="0x41a275e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41a28150" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a28150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a28328"/>
        <function-ref name="requested" scoped="" ref="0x41a28408"/>
        <function-ref name="granted" scoped="" ref="0x41a284e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41a285c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a286a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a27728" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x41a27728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a27900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a279e0"/>
        <function-ref name="led1On" scoped="" ref="0x41a27ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a27ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a27c80"/>
        <function-ref name="get" scoped="" ref="0x41a27d60"/>
        <function-ref name="led1Off" scoped="" ref="0x41a27e40"/>
        <function-ref name="led0On" scoped="" ref="0x41a261d8"/>
        <function-ref name="set" scoped="" ref="0x41a26018"/>
        <function-ref name="led2On" scoped="" ref="0x41a27f20"/>
        <function-ref name="led2Off" scoped="" ref="0x41a260f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a2a5b8" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41a2a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a2a7a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a2a880"/>
        <function-ref name="request" scoped="" ref="0x41a2a960"/>
        <function-ref name="granted" scoped="" ref="0x41a2aa40"/>
        <function-ref name="isOwner" scoped="" ref="0x41a2ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a287e8" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a287e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a289c0"/>
        <function-ref name="userId" scoped="" ref="0x41a28aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a26358" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x41a26358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a26530"/>
        <function-ref name="runTask" scoped="" ref="0x41a26610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40b5dc68" loc="69:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x40b5dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b5de40"/>
        <function-ref name="stopDone" scoped="" ref="0x40b5df20"/>
        <function-ref name="start" scoped="" ref="0x40b5c018"/>
        <function-ref name="stop" scoped="" ref="0x40b5c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40b5c238" loc="71:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40b5c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40b5c410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40b5c550" loc="72:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b5c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b5c728"/>
        <function-ref name="requested" scoped="" ref="0x40b5c808"/>
        <function-ref name="granted" scoped="" ref="0x40b5c8e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b5c9c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b5caa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40b5cbe8" loc="73:../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b5cdc0"/>
        <function-ref name="userId" scoped="" ref="0x40b5cea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41a6e010" loc="61:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x41a6e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41a6e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x41a6e2c8"/>
        <function-ref name="start" scoped="" ref="0x41a6e3a8"/>
        <function-ref name="stop" scoped="" ref="0x41a6e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41a6e5c8" loc="63:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41a6e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41a6e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x41a6d448" loc="78:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x41a6d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a6d620"/>
        <function-ref name="runTask" scoped="" ref="0x41a6d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41a6e8e0" loc="64:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a6e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a6eab8"/>
        <function-ref name="requested" scoped="" ref="0x41a6eb98"/>
        <function-ref name="granted" scoped="" ref="0x41a6ec78"/>
        <function-ref name="isOwner" scoped="" ref="0x41a6ed58"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a6ee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x41a6d880" loc="73:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x41a6d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a6da58"/>
        <function-ref name="runTask" scoped="" ref="0x41a6db38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x41a70b38" loc="60:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x41a70b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41a70d10"/>
        <function-ref name="stop" scoped="" ref="0x41a70df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41a6d010" loc="65:../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a6d1e8"/>
        <function-ref name="userId" scoped="" ref="0x41a6d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b88c58" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40b88c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b85790"/>
        <function-ref name="fired" scoped="" ref="0x40b86a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b85150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b86ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40b85c40"/>
        <function-ref name="gett0" scoped="" ref="0x40b859e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b86c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b862c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b85470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b86548"/>
        <function-ref name="stop" scoped="" ref="0x40b867c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLux" ref="0x40ba0010" loc="11:../../tos/chips/bh17/RohmBH17C.nc">
      <component-ref qname="RohmBH17C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLux" scoped="" ref="0x40ba0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ba0638"/>
        <function-ref name="readDone" scoped="" ref="0x40ba0890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="perform_action" ref="0x40bb1010" loc="63:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="perform_action" scoped="" ref="0x40bb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bb11e8"/>
        <function-ref name="runTask" scoped="" ref="0x40bb12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWait" ref="0x40b911b0" loc="27:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerWait" scoped="" ref="0x40b911b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b90d58"/>
        <function-ref name="fired" scoped="" ref="0x40b90010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b90718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b904c0"/>
        <function-ref name="getdt" scoped="" ref="0x40bb5268"/>
        <function-ref name="gett0" scoped="" ref="0x40bb5010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b90268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b917d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b90a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b91a58"/>
        <function-ref name="stop" scoped="" ref="0x40b91cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40b98980" loc="25:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CResource" scoped="" ref="0x40b98980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b98b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b98c38"/>
        <function-ref name="request" scoped="" ref="0x40b98d18"/>
        <function-ref name="granted" scoped="" ref="0x40b98df8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b98ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightReset" ref="0x40b9b0c8" loc="22:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightReset" scoped="" ref="0x40b9b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b9b2a0"/>
        <function-ref name="isInput" scoped="" ref="0x40b9b380"/>
        <function-ref name="toggle" scoped="" ref="0x40b9b460"/>
        <function-ref name="isOutput" scoped="" ref="0x40b9b540"/>
        <function-ref name="get" scoped="" ref="0x40b9b620"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b9b700"/>
        <function-ref name="set" scoped="" ref="0x40b9b7e0"/>
        <function-ref name="clr" scoped="" ref="0x40b9b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLux" ref="0x40b9c430" loc="19:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLux" scoped="" ref="0x40b9c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b9ca58"/>
        <function-ref name="readDone" scoped="" ref="0x40b9ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40b92a08" loc="24:../../tos/chips/bh17/RohmBH17P.nc">
      <component-ref qname="RohmBH17P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CPacket" scoped="" ref="0x40b92a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b9d3a0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b9d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b99068"/>
        <function-ref name="writeDone" scoped="" ref="0x40b982e0"/>
        <function-ref name="write" scoped="" ref="0x40b99688"/>
        <function-ref name="readDone" scoped="" ref="0x40b99ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x40bc5a48" loc="14:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <component-ref qname="HplRohmBH17C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CResource" scoped="" ref="0x40bc5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc5c20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bc5d00"/>
        <function-ref name="request" scoped="" ref="0x40bc5de0"/>
        <function-ref name="granted" scoped="" ref="0x40bc5ec0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LightReset" ref="0x40bc7010" loc="11:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <component-ref qname="HplRohmBH17C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightReset" scoped="" ref="0x40bc7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc71e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bc72c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bc73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc7488"/>
        <function-ref name="get" scoped="" ref="0x40bc7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc7648"/>
        <function-ref name="set" scoped="" ref="0x40bc7728"/>
        <function-ref name="clr" scoped="" ref="0x40bc7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40bc7ac0" loc="13:../../tos/platforms/hemera/chips/bh1721/HplRohmBH17C.nc">
      <component-ref qname="HplRohmBH17C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CPacket" scoped="" ref="0x40bc7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b9d3a0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b9d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc6120"/>
        <function-ref name="writeDone" scoped="" ref="0x40bc53a8"/>
        <function-ref name="write" scoped="" ref="0x40bc6740"/>
        <function-ref name="readDone" scoped="" ref="0x40bc6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40bc2bd0" loc="43:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x40bc2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40bc2da8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40bc2e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x40d4b010" loc="46:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40d4b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40d4b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x40d4e0c0" loc="44:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x40d4e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b9d3a0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b9d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d4e708"/>
        <function-ref name="writeDone" scoped="" ref="0x40d4c988"/>
        <function-ref name="write" scoped="" ref="0x40d4ed28"/>
        <function-ref name="readDone" scoped="" ref="0x40d4c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bc2518" loc="42:../../tos/chips/msp430/usart/Msp430I2CC.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40bc2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc26f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bc27d0"/>
        <function-ref name="request" scoped="" ref="0x40bc28b0"/>
        <function-ref name="granted" scoped="" ref="0x40bc2990"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc2a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x40c0a960" loc="40:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c0a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c0ab38"/>
        <function-ref name="configure" scoped="" ref="0x40c0ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x40c06cf8" loc="44:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40c06cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40c06ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x40c08010" loc="41:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x40c08010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b9d3a0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b9d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c08658"/>
        <function-ref name="writeDone" scoped="" ref="0x40c078e0"/>
        <function-ref name="write" scoped="" ref="0x40c08c78"/>
        <function-ref name="readDone" scoped="" ref="0x40c072c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x40c062a8" loc="43:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x40c062a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c06480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c06560"/>
        <function-ref name="request" scoped="" ref="0x40c06640"/>
        <function-ref name="granted" scoped="" ref="0x40c06720"/>
        <function-ref name="isOwner" scoped="" ref="0x40c06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40be6f00" loc="39:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40be6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c0a0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c0a1d0"/>
        <function-ref name="request" scoped="" ref="0x40c0a2b0"/>
        <function-ref name="granted" scoped="" ref="0x40c0a390"/>
        <function-ref name="isOwner" scoped="" ref="0x40c0a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CInterrupts" ref="0x40c05d08" loc="45:../../tos/chips/msp430/usart/Msp430I2C0P.nc">
      <component-ref qname="Msp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x40c05d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c05ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x40c00320" loc="42:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c00320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c004f8"/>
        <function-ref name="configure" scoped="" ref="0x40c005d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430I2CConfigure" ref="0x40bfd6c8" loc="46:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430I2CConfigure" scoped="" ref="0x40bfd6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430I2CConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40bfd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x40c00950" loc="43:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x40c00950"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b9d3a0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b9d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bff010"/>
        <function-ref name="writeDone" scoped="" ref="0x40bfe288"/>
        <function-ref name="write" scoped="" ref="0x40bff630"/>
        <function-ref name="readDone" scoped="" ref="0x40bffc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c0b9e0" loc="49:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x40c0b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c0bbb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c0bc98"/>
        <function-ref name="led1On" scoped="" ref="0x40c0bd78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c0be58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c33010"/>
        <function-ref name="get" scoped="" ref="0x40c330f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c331d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c33550"/>
        <function-ref name="set" scoped="" ref="0x40c332b0"/>
        <function-ref name="led0On" scoped="" ref="0x40c33390"/>
        <function-ref name="led2On" scoped="" ref="0x40c33470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x40bfec40" loc="45:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x40bfec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bfee18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bfeef8"/>
        <function-ref name="request" scoped="" ref="0x40bfd010"/>
        <function-ref name="granted" scoped="" ref="0x40bfd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bfd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c048a0" loc="41:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40c048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c04a78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c04b58"/>
        <function-ref name="request" scoped="" ref="0x40c04c38"/>
        <function-ref name="granted" scoped="" ref="0x40c04d18"/>
        <function-ref name="isOwner" scoped="" ref="0x40c04df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x40c0d9a0" loc="47:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x40c0d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x40c0db78"/>
        <function-ref name="getStartByte" scoped="" ref="0x40c0dc58"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x40c0dd38"/>
        <function-ref name="setMasterMode" scoped="" ref="0x40c0de18"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x40c0def8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x40bfb010"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x40bfb0f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x40bfb1d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x40bfb2b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x40bfb390"/>
        <function-ref name="getData" scoped="" ref="0x40bfb470"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x40bfb550"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x40bfb630"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x40bfb790"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x40bfb870"/>
        <function-ref name="getIV" scoped="" ref="0x40bfb950"/>
        <function-ref name="enableI2C" scoped="" ref="0x40bfba30"/>
        <function-ref name="setStartBit" scoped="" ref="0x40bfbb10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x40bfbbf0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x40bfbcd0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x40bfbdb0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x40bfbe90"/>
        <function-ref name="isI2C" scoped="" ref="0x40bfa010"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x40bfa0f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x40bfa1d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x40bfa3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x40bfa490"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x40bfa570"/>
        <function-ref name="disableNoAck" scoped="" ref="0x40bfa650"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x40bfa730"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x40bfa810"/>
        <function-ref name="disableI2C" scoped="" ref="0x40bfa8f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x40bfa9d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x40bfaab0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x40bfab90"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x40bfac70"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x40bfad50"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x40bfae30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x40bfaf10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x40c0c010"/>
        <function-ref name="getStartBit" scoped="" ref="0x40c0c0f0"/>
        <function-ref name="setWordMode" scoped="" ref="0x40c0c1d0"/>
        <function-ref name="setData" scoped="" ref="0x40c0c2b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x40c0c390"/>
        <function-ref name="getClockSource" scoped="" ref="0x40c0c470"/>
        <function-ref name="getWordMode" scoped="" ref="0x40c0c550"/>
        <function-ref name="setShiftClock" scoped="" ref="0x40c0c630"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x40c0c710"/>
        <function-ref name="enableNoAck" scoped="" ref="0x40c0c7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x40c0cad0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x40c0cbb0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x40c0cc90"/>
        <function-ref name="setStopBit" scoped="" ref="0x40c0cd70"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x40c0ce50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x40c0b010"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x40c0b0f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x40c0b1d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x40c0b2b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x40c0b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CInterrupts" ref="0x40c0b678" loc="48:../../tos/chips/msp430/usart/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x40c0b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c0b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x40c3bb20" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x40c3bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x40c3bcf8"/>
        <function-ref name="getStartByte" scoped="" ref="0x40c3bdd8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x40c3beb8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x40c38010"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x40c380f0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x40c381d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x40c382b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x40c38390"/>
        <function-ref name="setClockSource" scoped="" ref="0x40c38470"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x40c38550"/>
        <function-ref name="getData" scoped="" ref="0x40c38630"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x40c38710"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x40c387f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x40c38950"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x40c38a30"/>
        <function-ref name="getIV" scoped="" ref="0x40c38b10"/>
        <function-ref name="enableI2C" scoped="" ref="0x40c38bf0"/>
        <function-ref name="setStartBit" scoped="" ref="0x40c38cd0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x40c38db0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x40c38e90"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x40c37010"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x40c370f0"/>
        <function-ref name="isI2C" scoped="" ref="0x40c371d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x40c372b0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x40c37390"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x40c37570"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x40c37650"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x40c37730"/>
        <function-ref name="disableNoAck" scoped="" ref="0x40c37810"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x40c378f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x40c379d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x40c37ab0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x40c37b90"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x40c37c70"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x40c37d50"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x40c37e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x40c37f10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x40c36010"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x40c360f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x40c361d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x40c362b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x40c36390"/>
        <function-ref name="setData" scoped="" ref="0x40c36470"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x40c36550"/>
        <function-ref name="getClockSource" scoped="" ref="0x40c36630"/>
        <function-ref name="getWordMode" scoped="" ref="0x40c36710"/>
        <function-ref name="setShiftClock" scoped="" ref="0x40c367f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x40c368d0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x40c369b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x40c36c90"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x40c36d70"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x40c36e50"/>
        <function-ref name="setStopBit" scoped="" ref="0x40c35010"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x40c350f0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x40c351d0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x40c352b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x40c35390"/>
        <function-ref name="setStartByte" scoped="" ref="0x40c35470"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x40c35550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x40c72da8" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x40c72da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40c58010"/>
        <function-ref name="enableUartRx" scoped="" ref="0x40c580f0"/>
        <function-ref name="setUctl" scoped="" ref="0x40c581d0"/>
        <function-ref name="enableUart" scoped="" ref="0x40c582b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x40c58390"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40c58470"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x40c58550"/>
        <function-ref name="getUtctl" scoped="" ref="0x40c58630"/>
        <function-ref name="getUrctl" scoped="" ref="0x40c58710"/>
        <function-ref name="resetUsart" scoped="" ref="0x40c587f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x40c588d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x40c589b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x40c58a90"/>
        <function-ref name="getUbr" scoped="" ref="0x40c58bf0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40c58cd0"/>
        <function-ref name="setUmctl" scoped="" ref="0x40c58db0"/>
        <function-ref name="isUartRx" scoped="" ref="0x40c58e90"/>
        <function-ref name="isUart" scoped="" ref="0x40c57010"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40c570f0"/>
        <function-ref name="isSpi" scoped="" ref="0x40c571d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x40c572b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40c57390"/>
        <function-ref name="disableUartRx" scoped="" ref="0x40c57470"/>
        <function-ref name="enableIntr" scoped="" ref="0x40c57550"/>
        <function-ref name="getMode" scoped="" ref="0x40c57630"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40c57810"/>
        <function-ref name="clrIntr" scoped="" ref="0x40c578f0"/>
        <function-ref name="setUbr" scoped="" ref="0x40c579d0"/>
        <function-ref name="tx" scoped="" ref="0x40c57ab0"/>
        <function-ref name="getUctl" scoped="" ref="0x40c57b90"/>
        <function-ref name="disableUart" scoped="" ref="0x40c57c70"/>
        <function-ref name="enableSpi" scoped="" ref="0x40c57d50"/>
        <function-ref name="setModeUart" scoped="" ref="0x40c57e30"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40c57f10"/>
        <function-ref name="rx" scoped="" ref="0x40c70010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40c700f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x40c701d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40c702b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x40c70390"/>
        <function-ref name="disableUartTx" scoped="" ref="0x40c70470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x40c6f838" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x40c6f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6fa10"/>
        <function-ref name="isInput" scoped="" ref="0x40c6faf0"/>
        <function-ref name="setResistor" scoped="" ref="0x40c6fbd0"/>
        <function-ref name="toggle" scoped="" ref="0x40c6fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6fd90"/>
        <function-ref name="getResistor" scoped="" ref="0x40c6fe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6e010"/>
        <function-ref name="get" scoped="" ref="0x40c6e0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40c6e1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x40c6e2b0"/>
        <function-ref name="set" scoped="" ref="0x40c6e390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40c6e470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40c6e550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40c6e6b0"/>
        <function-ref name="clr" scoped="" ref="0x40c6e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x40c35f28" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x40c35f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x40c5c110"/>
        <function-ref name="getStartByte" scoped="" ref="0x40c5c1f0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x40c5c2d0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x40c5c3b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x40c5c490"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x40c5c570"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x40c5c650"/>
        <function-ref name="getStopBit" scoped="" ref="0x40c5c730"/>
        <function-ref name="setClockSource" scoped="" ref="0x40c5c810"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x40c5c8f0"/>
        <function-ref name="getData" scoped="" ref="0x40c5c9d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x40c5cab0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x40c5cb90"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x40c5ccf0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x40c5cdd0"/>
        <function-ref name="getIV" scoped="" ref="0x40c5ceb0"/>
        <function-ref name="enableI2C" scoped="" ref="0x40c5b010"/>
        <function-ref name="setStartBit" scoped="" ref="0x40c5b0f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x40c5b1d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x40c5b2b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x40c5b390"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x40c5b470"/>
        <function-ref name="isI2C" scoped="" ref="0x40c5b550"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x40c5b630"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x40c5b710"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x40c5b8f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x40c5b9d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x40c5bab0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x40c5bb90"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x40c5bc70"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x40c5bd50"/>
        <function-ref name="disableI2C" scoped="" ref="0x40c5be30"/>
        <function-ref name="getShiftClock" scoped="" ref="0x40c5bf10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x40c5a010"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x40c5a0f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x40c5a1d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x40c5a2b0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x40c5a390"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x40c5a470"/>
        <function-ref name="setModeI2C" scoped="" ref="0x40c5a550"/>
        <function-ref name="getStartBit" scoped="" ref="0x40c5a630"/>
        <function-ref name="setWordMode" scoped="" ref="0x40c5a710"/>
        <function-ref name="setData" scoped="" ref="0x40c5a7f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x40c5a8d0"/>
        <function-ref name="getClockSource" scoped="" ref="0x40c5a9b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x40c5aa90"/>
        <function-ref name="setShiftClock" scoped="" ref="0x40c5ab70"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x40c5ac50"/>
        <function-ref name="enableNoAck" scoped="" ref="0x40c5ad30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x40c59210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x40c592f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x40c593d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x40c594b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x40c59590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x40c59670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x40c59750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x40c59830"/>
        <function-ref name="setStartByte" scoped="" ref="0x40c59910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x40c599f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x40c706d8" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x40c706d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c708b0"/>
        <function-ref name="isInput" scoped="" ref="0x40c70990"/>
        <function-ref name="setResistor" scoped="" ref="0x40c70a70"/>
        <function-ref name="toggle" scoped="" ref="0x40c70b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40c70c30"/>
        <function-ref name="getResistor" scoped="" ref="0x40c70d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c70df0"/>
        <function-ref name="get" scoped="" ref="0x40c70ed0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40c6f010"/>
        <function-ref name="getRaw" scoped="" ref="0x40c6f0f0"/>
        <function-ref name="set" scoped="" ref="0x40c6f1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40c6f2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40c6f390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40c6f4f0"/>
        <function-ref name="clr" scoped="" ref="0x40c6f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x40c9f168" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x40c9f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9f340"/>
        <function-ref name="isInput" scoped="" ref="0x40c9f420"/>
        <function-ref name="setResistor" scoped="" ref="0x40c9f500"/>
        <function-ref name="toggle" scoped="" ref="0x40c9f5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9f6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x40c9f7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9f880"/>
        <function-ref name="get" scoped="" ref="0x40c9f960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40c9fa40"/>
        <function-ref name="getRaw" scoped="" ref="0x40c9fb20"/>
        <function-ref name="set" scoped="" ref="0x40c9fc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40c9fce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40c9fdc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40c9ff20"/>
        <function-ref name="clr" scoped="" ref="0x40c9e018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x40ca4840" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x40ca4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40ca4a18"/>
        <function-ref name="txDone" scoped="" ref="0x40ca4af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x40c9e280" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x40c9e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9e458"/>
        <function-ref name="isInput" scoped="" ref="0x40c9e538"/>
        <function-ref name="setResistor" scoped="" ref="0x40c9e618"/>
        <function-ref name="toggle" scoped="" ref="0x40c9e6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9e7d8"/>
        <function-ref name="getResistor" scoped="" ref="0x40c9e8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9e998"/>
        <function-ref name="get" scoped="" ref="0x40c9ea78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40c9eb58"/>
        <function-ref name="getRaw" scoped="" ref="0x40c9ec38"/>
        <function-ref name="set" scoped="" ref="0x40c9ed18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40c9edf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40c9eed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40c9d090"/>
        <function-ref name="clr" scoped="" ref="0x40c9d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x40c9d3d8" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x40c9d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9d5b0"/>
        <function-ref name="isInput" scoped="" ref="0x40c9d690"/>
        <function-ref name="setResistor" scoped="" ref="0x40c9d770"/>
        <function-ref name="toggle" scoped="" ref="0x40c9d850"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9d930"/>
        <function-ref name="getResistor" scoped="" ref="0x40c9da10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9daf0"/>
        <function-ref name="get" scoped="" ref="0x40c9dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40c9dcb0"/>
        <function-ref name="getRaw" scoped="" ref="0x40c9dd90"/>
        <function-ref name="set" scoped="" ref="0x40c9de70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40cc8010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40cc80f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40cc8250"/>
        <function-ref name="clr" scoped="" ref="0x40cc8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x40ca9098" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x40ca9098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ca9270"/>
        <function-ref name="enableUartRx" scoped="" ref="0x40ca9350"/>
        <function-ref name="setUctl" scoped="" ref="0x40ca9430"/>
        <function-ref name="enableUart" scoped="" ref="0x40ca9510"/>
        <function-ref name="setUrctl" scoped="" ref="0x40ca95f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ca96d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x40ca97b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x40ca9890"/>
        <function-ref name="getUrctl" scoped="" ref="0x40ca9970"/>
        <function-ref name="resetUsart" scoped="" ref="0x40ca9a50"/>
        <function-ref name="getUmctl" scoped="" ref="0x40ca9b30"/>
        <function-ref name="disableIntr" scoped="" ref="0x40ca9c10"/>
        <function-ref name="setUtctl" scoped="" ref="0x40ca9cf0"/>
        <function-ref name="getUbr" scoped="" ref="0x40ca9e50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ca8010"/>
        <function-ref name="setUmctl" scoped="" ref="0x40ca80f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x40ca81d0"/>
        <function-ref name="isUart" scoped="" ref="0x40ca82b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ca8390"/>
        <function-ref name="isSpi" scoped="" ref="0x40ca8470"/>
        <function-ref name="enableUartTx" scoped="" ref="0x40ca8550"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ca8630"/>
        <function-ref name="disableUartRx" scoped="" ref="0x40ca8710"/>
        <function-ref name="enableIntr" scoped="" ref="0x40ca87f0"/>
        <function-ref name="getMode" scoped="" ref="0x40ca88d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40ca8ab0"/>
        <function-ref name="clrIntr" scoped="" ref="0x40ca8b90"/>
        <function-ref name="setUbr" scoped="" ref="0x40ca8c70"/>
        <function-ref name="tx" scoped="" ref="0x40ca8d50"/>
        <function-ref name="getUctl" scoped="" ref="0x40ca8e30"/>
        <function-ref name="disableUart" scoped="" ref="0x40ca8f10"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ca7010"/>
        <function-ref name="setModeUart" scoped="" ref="0x40ca70f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40ca71d0"/>
        <function-ref name="rx" scoped="" ref="0x40ca72b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40ca7390"/>
        <function-ref name="isUartTx" scoped="" ref="0x40ca7470"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40ca7550"/>
        <function-ref name="disableSpi" scoped="" ref="0x40ca7630"/>
        <function-ref name="disableUartTx" scoped="" ref="0x40ca7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x40ca6250" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x40ca6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x40ca6428"/>
        <function-ref name="getStartByte" scoped="" ref="0x40ca6508"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x40ca65e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x40ca66c8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x40ca67a8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x40ca6888"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x40ca6968"/>
        <function-ref name="getStopBit" scoped="" ref="0x40ca6a48"/>
        <function-ref name="setClockSource" scoped="" ref="0x40ca6b28"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x40ca6c08"/>
        <function-ref name="getData" scoped="" ref="0x40ca6ce8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x40ca6dc8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x40ca6ea8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x40ca5090"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x40ca5170"/>
        <function-ref name="getIV" scoped="" ref="0x40ca5250"/>
        <function-ref name="enableI2C" scoped="" ref="0x40ca5330"/>
        <function-ref name="setStartBit" scoped="" ref="0x40ca5410"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x40ca54f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x40ca55d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x40ca56b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x40ca5790"/>
        <function-ref name="isI2C" scoped="" ref="0x40ca5870"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x40ca5950"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x40ca5a30"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x40ca5c10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x40ca5cf0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x40ca5dd0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x40ca5eb0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x40ca3010"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x40ca30f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x40ca31d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x40ca32b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x40ca3390"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x40ca3470"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x40ca3550"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x40ca3630"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x40ca3710"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x40ca37f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x40ca38d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x40ca39b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x40ca3a90"/>
        <function-ref name="setData" scoped="" ref="0x40ca3b70"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x40ca3c50"/>
        <function-ref name="getClockSource" scoped="" ref="0x40ca3d30"/>
        <function-ref name="getWordMode" scoped="" ref="0x40ca3e10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x40ca3ef0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x40ca2010"/>
        <function-ref name="enableNoAck" scoped="" ref="0x40ca20f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x40ca23d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x40ca24b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x40ca2590"/>
        <function-ref name="setStopBit" scoped="" ref="0x40ca2670"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x40ca2750"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x40ca2830"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x40ca2910"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x40ca29f0"/>
        <function-ref name="setStartByte" scoped="" ref="0x40ca2ad0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x40ca2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x40ca0010" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x40ca0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ca02c8"/>
        <function-ref name="setResistor" scoped="" ref="0x40ca03a8"/>
        <function-ref name="toggle" scoped="" ref="0x40ca0488"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca0568"/>
        <function-ref name="getResistor" scoped="" ref="0x40ca0648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca0728"/>
        <function-ref name="get" scoped="" ref="0x40ca0808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40ca08e8"/>
        <function-ref name="getRaw" scoped="" ref="0x40ca09c8"/>
        <function-ref name="set" scoped="" ref="0x40ca0aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40ca0b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40ca0c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40ca0dc8"/>
        <function-ref name="clr" scoped="" ref="0x40ca0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x40ca4de0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x40ca4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ca6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x40ca2e18" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x40ca2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca1010"/>
        <function-ref name="isInput" scoped="" ref="0x40ca10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x40ca11d0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca1390"/>
        <function-ref name="getResistor" scoped="" ref="0x40ca1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca1550"/>
        <function-ref name="get" scoped="" ref="0x40ca1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40ca1710"/>
        <function-ref name="getRaw" scoped="" ref="0x40ca17f0"/>
        <function-ref name="set" scoped="" ref="0x40ca18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40ca19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40ca1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40ca1bf0"/>
        <function-ref name="clr" scoped="" ref="0x40ca1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a5d748" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41a5d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a5d920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a5da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x41a5aba8" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x41a5aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41a5ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a56b50" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a56b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a56d28"/>
        <function-ref name="configure" scoped="" ref="0x41a56e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x41a5aee0" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x41a5aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x41a590e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x41a591c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x41a592a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x41a59380"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x41a59460"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x41a59540"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x41a59620"/>
        <function-ref name="getStopBit" scoped="" ref="0x41a59700"/>
        <function-ref name="setClockSource" scoped="" ref="0x41a597e0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x41a598c0"/>
        <function-ref name="getData" scoped="" ref="0x41a599a0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x41a59a80"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x41a59b60"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x41a59cc0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x41a59da0"/>
        <function-ref name="getIV" scoped="" ref="0x41a59e80"/>
        <function-ref name="enableI2C" scoped="" ref="0x41a58010"/>
        <function-ref name="setStartBit" scoped="" ref="0x41a580f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x41a581d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x41a582b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x41a58390"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x41a58470"/>
        <function-ref name="isI2C" scoped="" ref="0x41a58550"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x41a58630"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x41a58710"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x41a588f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x41a589d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x41a58ab0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x41a58b90"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x41a58c70"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x41a58d50"/>
        <function-ref name="disableI2C" scoped="" ref="0x41a58e30"/>
        <function-ref name="getShiftClock" scoped="" ref="0x41a58f10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x41a57010"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x41a570f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x41a571d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x41a572b0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x41a57390"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x41a57470"/>
        <function-ref name="setModeI2C" scoped="" ref="0x41a57550"/>
        <function-ref name="getStartBit" scoped="" ref="0x41a57630"/>
        <function-ref name="setWordMode" scoped="" ref="0x41a57710"/>
        <function-ref name="setData" scoped="" ref="0x41a577f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x41a578d0"/>
        <function-ref name="getClockSource" scoped="" ref="0x41a579b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x41a57a90"/>
        <function-ref name="setShiftClock" scoped="" ref="0x41a57b70"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x41a57c50"/>
        <function-ref name="enableNoAck" scoped="" ref="0x41a57d30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x41a56210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x41a562f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x41a563d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x41a564b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x41a56590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x41a56670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x41a56750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x41a56830"/>
        <function-ref name="setStartByte" scoped="" ref="0x41a56910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x41a569f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x41a5a790" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x41a5a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x41a5a968"/>
        <function-ref name="txDone" scoped="" ref="0x41a5aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a5d090" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41a5d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a5d268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a5d348"/>
        <function-ref name="request" scoped="" ref="0x41a5d428"/>
        <function-ref name="granted" scoped="" ref="0x41a5d508"/>
        <function-ref name="isOwner" scoped="" ref="0x41a5d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x41a5c010" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x41a5c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41a5c1e8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x41a5c2c8"/>
        <function-ref name="setUctl" scoped="" ref="0x41a5c3a8"/>
        <function-ref name="enableUart" scoped="" ref="0x41a5c488"/>
        <function-ref name="setUrctl" scoped="" ref="0x41a5c568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41a5c648"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x41a5c728"/>
        <function-ref name="getUtctl" scoped="" ref="0x41a5c808"/>
        <function-ref name="getUrctl" scoped="" ref="0x41a5c8e8"/>
        <function-ref name="resetUsart" scoped="" ref="0x41a5c9c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x41a5caa8"/>
        <function-ref name="disableIntr" scoped="" ref="0x41a5cb88"/>
        <function-ref name="setUtctl" scoped="" ref="0x41a5cc68"/>
        <function-ref name="getUbr" scoped="" ref="0x41a5cdc8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41a5cea8"/>
        <function-ref name="setUmctl" scoped="" ref="0x41a5b010"/>
        <function-ref name="isUartRx" scoped="" ref="0x41a5b0f0"/>
        <function-ref name="isUart" scoped="" ref="0x41a5b1d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41a5b2b0"/>
        <function-ref name="isSpi" scoped="" ref="0x41a5b390"/>
        <function-ref name="enableUartTx" scoped="" ref="0x41a5b470"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41a5b550"/>
        <function-ref name="disableUartRx" scoped="" ref="0x41a5b630"/>
        <function-ref name="enableIntr" scoped="" ref="0x41a5b710"/>
        <function-ref name="getMode" scoped="" ref="0x41a5b7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x41a5b9d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x41a5bab0"/>
        <function-ref name="setUbr" scoped="" ref="0x41a5bb90"/>
        <function-ref name="tx" scoped="" ref="0x41a5bc70"/>
        <function-ref name="getUctl" scoped="" ref="0x41a5bd50"/>
        <function-ref name="disableUart" scoped="" ref="0x41a5be30"/>
        <function-ref name="enableSpi" scoped="" ref="0x41a5bf10"/>
        <function-ref name="setModeUart" scoped="" ref="0x41a5a010"/>
        <function-ref name="setModeSpi" scoped="" ref="0x41a5a0f0"/>
        <function-ref name="rx" scoped="" ref="0x41a5a1d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x41a5a2b0"/>
        <function-ref name="isUartTx" scoped="" ref="0x41a5a390"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x41a5a470"/>
        <function-ref name="disableSpi" scoped="" ref="0x41a5a550"/>
        <function-ref name="disableUartTx" scoped="" ref="0x41a5a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a5db60" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="HplRohmBH17C.Msp430I2CC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a5db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a5dd38"/>
        <function-ref name="userId" scoped="" ref="0x41a5de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40cf5e10" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x40cf5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d20010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d20a68" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d20a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d20c40"/>
        <function-ref name="configure" scoped="" ref="0x40d20d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x40cf64c0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x40cf64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40cf6698"/>
        <function-ref name="txDone" scoped="" ref="0x40cf6778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cf53c8" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40cf53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cf55a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cf5680"/>
        <function-ref name="request" scoped="" ref="0x40cf5760"/>
        <function-ref name="granted" scoped="" ref="0x40cf5840"/>
        <function-ref name="isOwner" scoped="" ref="0x40cf5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x40cf6d40" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x40cf6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cf6f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d202c0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d202c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d20498"/>
        <function-ref name="userId" scoped="" ref="0x40d20578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40d13240" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d13240"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d13418"/>
        <function-ref name="userId" scoped="" ref="0x40d134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x40d1e268" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x40d1e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40d1e450"/>
        <function-ref name="txDone" scoped="" ref="0x40d1e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x40d1eee8" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x40d1eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d130e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x40d1e748" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x40d1e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d1e930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x40d1eab0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x40d1eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40d1ec88"/>
        <function-ref name="txDone" scoped="" ref="0x40d1ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d111e8" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x40d111e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d113d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d114b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d10208" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d10208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d103f0"/>
        <function-ref name="configure" scoped="" ref="0x40d104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40d115f0" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d115f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d117c8"/>
        <function-ref name="requested" scoped="" ref="0x40d118a8"/>
        <function-ref name="granted" scoped="" ref="0x40d11988"/>
        <function-ref name="isOwner" scoped="" ref="0x40d11a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d11b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d12a48" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40d12a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d12c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d12d10"/>
        <function-ref name="request" scoped="" ref="0x40d12df0"/>
        <function-ref name="granted" scoped="" ref="0x40d12ed0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d11010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d11c88" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d11c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d11e60"/>
        <function-ref name="userId" scoped="" ref="0x40d10010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a98e48" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41a98e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a96050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41a961b0" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x41a961b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a96388"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a96468"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a96548"/>
        <function-ref name="dequeue" scoped="" ref="0x41a96628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a95a58" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41a95a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a95c40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a95d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a939d0" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a939d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a93bb8"/>
        <function-ref name="configure" scoped="" ref="0x41a93c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41a93df8" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x41a93df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a92010"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a920f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a921d0"/>
        <function-ref name="dequeue" scoped="" ref="0x41a922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41a95e60" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a95e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a93050"/>
        <function-ref name="requested" scoped="" ref="0x41a93130"/>
        <function-ref name="granted" scoped="" ref="0x41a93210"/>
        <function-ref name="isOwner" scoped="" ref="0x41a932f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a933d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a923f0" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x41a923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a925c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a926a8"/>
        <function-ref name="led1On" scoped="" ref="0x41a92788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a92868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a92948"/>
        <function-ref name="get" scoped="" ref="0x41a92a28"/>
        <function-ref name="led1Off" scoped="" ref="0x41a92b08"/>
        <function-ref name="led0On" scoped="" ref="0x41a92e88"/>
        <function-ref name="set" scoped="" ref="0x41a92cc8"/>
        <function-ref name="led2On" scoped="" ref="0x41a92be8"/>
        <function-ref name="led2Off" scoped="" ref="0x41a92da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a95318" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41a95318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a95500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a955e0"/>
        <function-ref name="request" scoped="" ref="0x41a956c0"/>
        <function-ref name="granted" scoped="" ref="0x41a957a0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a95880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a93510" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a93510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a936e8"/>
        <function-ref name="userId" scoped="" ref="0x41a937c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a91030" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x41a91030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a91208"/>
        <function-ref name="runTask" scoped="" ref="0x41a912e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x40d37a00" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x40d37a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d37bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x40d37508" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x40d37508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40d376e0"/>
        <function-ref name="txDone" scoped="" ref="0x40d377c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x40d0fc50" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x40d0fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d0fe28"/>
        <function-ref name="enableUartRx" scoped="" ref="0x40d0ff08"/>
        <function-ref name="setUctl" scoped="" ref="0x40d0c010"/>
        <function-ref name="enableUart" scoped="" ref="0x40d0c0f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x40d0c1d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d0c2b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x40d0c390"/>
        <function-ref name="getUtctl" scoped="" ref="0x40d0c470"/>
        <function-ref name="getUrctl" scoped="" ref="0x40d0c550"/>
        <function-ref name="resetUsart" scoped="" ref="0x40d0c630"/>
        <function-ref name="getUmctl" scoped="" ref="0x40d0c710"/>
        <function-ref name="disableIntr" scoped="" ref="0x40d0c7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x40d0c8d0"/>
        <function-ref name="getUbr" scoped="" ref="0x40d0ca30"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d0cb10"/>
        <function-ref name="setUmctl" scoped="" ref="0x40d0cbf0"/>
        <function-ref name="isUartRx" scoped="" ref="0x40d0ccd0"/>
        <function-ref name="isUart" scoped="" ref="0x40d0cdb0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d0ce90"/>
        <function-ref name="isSpi" scoped="" ref="0x40d0b010"/>
        <function-ref name="enableUartTx" scoped="" ref="0x40d0b0f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d0b1d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x40d0b2b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x40d0b390"/>
        <function-ref name="getMode" scoped="" ref="0x40d0b470"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40d0b650"/>
        <function-ref name="clrIntr" scoped="" ref="0x40d0b730"/>
        <function-ref name="setUbr" scoped="" ref="0x40d0b810"/>
        <function-ref name="tx" scoped="" ref="0x40d0b8f0"/>
        <function-ref name="getUctl" scoped="" ref="0x40d0b9d0"/>
        <function-ref name="disableUart" scoped="" ref="0x40d0bab0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d0bb90"/>
        <function-ref name="setModeUart" scoped="" ref="0x40d0bc70"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40d0bd50"/>
        <function-ref name="rx" scoped="" ref="0x40d0be30"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40d0bf10"/>
        <function-ref name="isUartTx" scoped="" ref="0x40d37010"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40d370f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x40d371d0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x40d372b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40d4ab20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplRohmBH17C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40d4ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4acf8"/>
        <function-ref name="isInput" scoped="" ref="0x40d4add8"/>
        <function-ref name="setResistor" scoped="" ref="0x40d4aeb8"/>
        <function-ref name="toggle" scoped="" ref="0x40d49010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d490f0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d491d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d492b0"/>
        <function-ref name="get" scoped="" ref="0x40d49390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d49470"/>
        <function-ref name="getRaw" scoped="" ref="0x40d49550"/>
        <function-ref name="set" scoped="" ref="0x40d49630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d49710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d49950"/>
        <function-ref name="clr" scoped="" ref="0x40d49a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40d4a1a8" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplRohmBH17C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40d4a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4a380"/>
        <function-ref name="isInput" scoped="" ref="0x40d4a460"/>
        <function-ref name="toggle" scoped="" ref="0x40d4a540"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4a620"/>
        <function-ref name="get" scoped="" ref="0x40d4a700"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4a7e0"/>
        <function-ref name="set" scoped="" ref="0x40d4a8c0"/>
        <function-ref name="clr" scoped="" ref="0x40d4a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d47658" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="RohmBH17C.TimerWait"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40d47658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d44170"/>
        <function-ref name="fired" scoped="" ref="0x40d463f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d46b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d468a8"/>
        <function-ref name="getdt" scoped="" ref="0x40d44620"/>
        <function-ref name="gett0" scoped="" ref="0x40d443c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d46650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d47c80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d46e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d47f00"/>
        <function-ref name="stop" scoped="" ref="0x40d461a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadSen" ref="0x40d410a8" loc="3:../../tos/platforms/hemera/BatteryAdcC.nc">
      <component-ref qname="BatteryAdcC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadSen" scoped="" ref="0x40d410a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d416d0"/>
        <function-ref name="readDone" scoped="" ref="0x40d41928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x40e6f070" loc="50:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="BatteryAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x40e6f070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40e6f248"/>
        <function-ref name="configure" scoped="" ref="0x40e6f328"/>
        <function-ref name="dataReady" scoped="" ref="0x40e6f408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x40d3f7e8" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="BatteryAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x40d3f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40d3f9c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x40d3faa0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x40d3fb80"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x40d3fc60"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x40d3fd40"/>
        <function-ref name="configureMultiple" scoped="" ref="0x40d3fe20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x40d3ff00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x40e6f548" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="BatteryAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x40e6f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x40e6f720"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x40e6f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d3f150" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="BatteryAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40d3f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d3f328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d3f408"/>
        <function-ref name="request" scoped="" ref="0x40d3f4e8"/>
        <function-ref name="granted" scoped="" ref="0x40d3f5c8"/>
        <function-ref name="isOwner" scoped="" ref="0x40d3f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x40d76b38" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x40d76b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40d76d10"/>
        <function-ref name="configure" scoped="" ref="0x40d76df0"/>
        <function-ref name="dataReady" scoped="" ref="0x40d76ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x40d72c98" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x40d72c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d72e70"/>
        <function-ref name="stop" scoped="" ref="0x40d74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x40d75478" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x40d75478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x40d75650"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x40d75730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x40d78e58" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x40d78e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40d76050"/>
        <function-ref name="configureSingle" scoped="" ref="0x40d76130"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x40d76210"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x40d762f0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x40d763d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x40d764b0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x40d76590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d78340" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40d78340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d78518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d785f8"/>
        <function-ref name="request" scoped="" ref="0x40d786d8"/>
        <function-ref name="granted" scoped="" ref="0x40d787b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40d78898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x40d70dc0" loc="42:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x40d70dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40d6e010"/>
        <function-ref name="configure" scoped="" ref="0x40d6e0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40d6e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x40d92078" loc="48:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x40d92078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x40d92250"/>
        <function-ref name="getMCtl" scoped="" ref="0x40d92330"/>
        <function-ref name="resetIFGs" scoped="" ref="0x40d92410"/>
        <function-ref name="isBusy" scoped="" ref="0x40d924f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x40d925d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x40d926b0"/>
        <function-ref name="setMCtl" scoped="" ref="0x40d92790"/>
        <function-ref name="startConversion" scoped="" ref="0x40d92870"/>
        <function-ref name="setCtl0" scoped="" ref="0x40d92950"/>
        <function-ref name="getMem" scoped="" ref="0x40d92a30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x40d92b10"/>
        <function-ref name="getIEFlags" scoped="" ref="0x40d92bf0"/>
        <function-ref name="stopConversion" scoped="" ref="0x40d92cd0"/>
        <function-ref name="enableConversion" scoped="" ref="0x40d92e30"/>
        <function-ref name="setCtl1" scoped="" ref="0x40d92f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x40d8bc88" loc="58:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x40d8bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8be60"/>
        <function-ref name="isInput" scoped="" ref="0x40d8a010"/>
        <function-ref name="setResistor" scoped="" ref="0x40d8a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d8a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8a2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d8a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8a470"/>
        <function-ref name="get" scoped="" ref="0x40d8a550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d8a630"/>
        <function-ref name="getRaw" scoped="" ref="0x40d8a710"/>
        <function-ref name="set" scoped="" ref="0x40d8a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d8a8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d8a9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d8ab10"/>
        <function-ref name="clr" scoped="" ref="0x40d8abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x40d91ca0" loc="53:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x40d91ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40d91e78"/>
        <function-ref name="setEvent" scoped="" ref="0x40d8f010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40d8f0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40d8f1d0"/>
        <function-ref name="fired" scoped="" ref="0x40d8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x40d6ce50" loc="50:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x40d6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40d6b050"/>
        <function-ref name="getControl" scoped="" ref="0x40d6b130"/>
        <function-ref name="enableEvents" scoped="" ref="0x40d6b210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40d6b2f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40d6b3d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40d6b4b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d6b590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40d6b670"/>
        <function-ref name="setControl" scoped="" ref="0x40d6b750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x40d6d010" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x40d6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d6d1e8"/>
        <function-ref name="stop" scoped="" ref="0x40d6d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x40d8d908" loc="56:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x40d8d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8dae0"/>
        <function-ref name="isInput" scoped="" ref="0x40d8dbc0"/>
        <function-ref name="setResistor" scoped="" ref="0x40d8dca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d8dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8de60"/>
        <function-ref name="getResistor" scoped="" ref="0x40d8c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8c0f0"/>
        <function-ref name="get" scoped="" ref="0x40d8c1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d8c2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40d8c390"/>
        <function-ref name="set" scoped="" ref="0x40d8c470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d8c550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d8c630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d8c790"/>
        <function-ref name="clr" scoped="" ref="0x40d8c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x40d6e728" loc="43:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x40d6e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x40d6e900"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x40d6e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x40d87178" loc="61:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x40d87178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d87350"/>
        <function-ref name="isInput" scoped="" ref="0x40d87430"/>
        <function-ref name="setResistor" scoped="" ref="0x40d87510"/>
        <function-ref name="toggle" scoped="" ref="0x40d875f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d876d0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d877b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d87890"/>
        <function-ref name="get" scoped="" ref="0x40d87970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d87a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40d87b30"/>
        <function-ref name="set" scoped="" ref="0x40d87c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d87cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d87dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d86010"/>
        <function-ref name="clr" scoped="" ref="0x40d860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x40d8f508" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x40d8f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8f760"/>
        <function-ref name="isInput" scoped="" ref="0x40d8f840"/>
        <function-ref name="setResistor" scoped="" ref="0x40d8f920"/>
        <function-ref name="toggle" scoped="" ref="0x40d8fa00"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8fae0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d8fbc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8fca0"/>
        <function-ref name="get" scoped="" ref="0x40d8fd80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d8fe60"/>
        <function-ref name="getRaw" scoped="" ref="0x40d8e010"/>
        <function-ref name="set" scoped="" ref="0x40d8e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d8e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d8e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d8e410"/>
        <function-ref name="clr" scoped="" ref="0x40d8e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d748b8" loc="40:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40d748b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d74a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x40d8ae48" loc="59:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x40d8ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d89050"/>
        <function-ref name="isInput" scoped="" ref="0x40d89130"/>
        <function-ref name="setResistor" scoped="" ref="0x40d89210"/>
        <function-ref name="toggle" scoped="" ref="0x40d892f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d893d0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d894b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d89590"/>
        <function-ref name="get" scoped="" ref="0x40d89670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d89750"/>
        <function-ref name="getRaw" scoped="" ref="0x40d89830"/>
        <function-ref name="set" scoped="" ref="0x40d89910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d899f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d89ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d89c30"/>
        <function-ref name="clr" scoped="" ref="0x40d89d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x40d6c140" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x40d6c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6c318"/>
        <function-ref name="setClockSource" scoped="" ref="0x40d6c3f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40d6c4d8"/>
        <function-ref name="get" scoped="" ref="0x40d6c5b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40d6c698"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d6c778"/>
        <function-ref name="getMode" scoped="" ref="0x40d6c858"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d6c938"/>
        <function-ref name="overflow" scoped="" ref="0x40d6ca18"/>
        <function-ref name="setMode" scoped="" ref="0x40d6caf8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40d6cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x40d6d568" loc="47:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x40d6d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d6d740"/>
        <function-ref name="userId" scoped="" ref="0x40d6d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x40d6b9c8" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x40d6b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40d6bba0"/>
        <function-ref name="getControl" scoped="" ref="0x40d6bc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x40d6bd60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40d6be40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40d6bf20"/>
        <function-ref name="disableEvents" scoped="" ref="0x40d91018"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d910f8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40d911d8"/>
        <function-ref name="setControl" scoped="" ref="0x40d912b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x40d70100" loc="41:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x40d70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40d702d8"/>
        <function-ref name="configureSingle" scoped="" ref="0x40d703b8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x40d70498"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x40d70578"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x40d70658"/>
        <function-ref name="configureMultiple" scoped="" ref="0x40d70738"/>
        <function-ref name="singleDataReady" scoped="" ref="0x40d70818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x40d8cac8" loc="57:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x40d8cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8cca0"/>
        <function-ref name="isInput" scoped="" ref="0x40d8cd80"/>
        <function-ref name="setResistor" scoped="" ref="0x40d8ce60"/>
        <function-ref name="toggle" scoped="" ref="0x40d8b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8b0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d8b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8b2b0"/>
        <function-ref name="get" scoped="" ref="0x40d8b390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d8b470"/>
        <function-ref name="getRaw" scoped="" ref="0x40d8b550"/>
        <function-ref name="set" scoped="" ref="0x40d8b630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d8b710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d8b950"/>
        <function-ref name="clr" scoped="" ref="0x40d8ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x40d91500" loc="52:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x40d91500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40d916d8"/>
        <function-ref name="setEvent" scoped="" ref="0x40d917b8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40d91898"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40d91978"/>
        <function-ref name="fired" scoped="" ref="0x40d91a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x40d8e748" loc="55:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x40d8e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8e920"/>
        <function-ref name="isInput" scoped="" ref="0x40d8ea00"/>
        <function-ref name="setResistor" scoped="" ref="0x40d8eae0"/>
        <function-ref name="toggle" scoped="" ref="0x40d8ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8eca0"/>
        <function-ref name="getResistor" scoped="" ref="0x40d8ed80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8ee60"/>
        <function-ref name="get" scoped="" ref="0x40d8d010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d8d0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x40d8d1d0"/>
        <function-ref name="set" scoped="" ref="0x40d8d2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d8d390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d8d470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d8d5d0"/>
        <function-ref name="clr" scoped="" ref="0x40d8d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x40d88010" loc="60:../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x40d88010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d881e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d882c8"/>
        <function-ref name="setResistor" scoped="" ref="0x40d883a8"/>
        <function-ref name="toggle" scoped="" ref="0x40d88488"/>
        <function-ref name="isOutput" scoped="" ref="0x40d88568"/>
        <function-ref name="getResistor" scoped="" ref="0x40d88648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d88728"/>
        <function-ref name="get" scoped="" ref="0x40d88808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40d888e8"/>
        <function-ref name="getRaw" scoped="" ref="0x40d889c8"/>
        <function-ref name="set" scoped="" ref="0x40d88aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40d88b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40d88c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40d88dc8"/>
        <function-ref name="clr" scoped="" ref="0x40d88ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x40e09470" loc="46:../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x40e09470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x40e09648"/>
        <function-ref name="getMCtl" scoped="" ref="0x40e09728"/>
        <function-ref name="resetIFGs" scoped="" ref="0x40e09808"/>
        <function-ref name="isBusy" scoped="" ref="0x40e098e8"/>
        <function-ref name="conversionDone" scoped="" ref="0x40e099c8"/>
        <function-ref name="getCtl1" scoped="" ref="0x40e09aa8"/>
        <function-ref name="setMCtl" scoped="" ref="0x40e09b88"/>
        <function-ref name="startConversion" scoped="" ref="0x40e09c68"/>
        <function-ref name="setCtl0" scoped="" ref="0x40e09d48"/>
        <function-ref name="getMem" scoped="" ref="0x40e09e28"/>
        <function-ref name="setIEFlags" scoped="" ref="0x40e09f08"/>
        <function-ref name="getIEFlags" scoped="" ref="0x40e06010"/>
        <function-ref name="stopConversion" scoped="" ref="0x40e060f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x40e06250"/>
        <function-ref name="setCtl1" scoped="" ref="0x40e06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e4a568" loc="86:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x40e4a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e4a750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e4a830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e4ae20" loc="89:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e4ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e49050"/>
        <function-ref name="configure" scoped="" ref="0x40e49130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e07d48" loc="85:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40e07d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e4a0f0"/>
        <function-ref name="request" scoped="" ref="0x40e4a1d0"/>
        <function-ref name="granted" scoped="" ref="0x40e4a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e4a970" loc="87:../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e4a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e4ab48"/>
        <function-ref name="userId" scoped="" ref="0x40e4ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41acde30" loc="44:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41acde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41aca050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41aca1b0" loc="45:../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41aca1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41aca388"/>
        <function-ref name="isEmpty" scoped="" ref="0x41aca468"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41aca548"/>
        <function-ref name="dequeue" scoped="" ref="0x41aca628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41ac98e8" loc="52:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41ac98e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41ac9ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41ac9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41ac8218" loc="56:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41ac8218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41ac8400"/>
        <function-ref name="configure" scoped="" ref="0x41ac84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41ac8640" loc="57:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x41ac8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41ac8818"/>
        <function-ref name="isEmpty" scoped="" ref="0x41ac88f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41ac89d8"/>
        <function-ref name="dequeue" scoped="" ref="0x41ac8ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ac91a8" loc="51:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41ac91a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ac9390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ac9470"/>
        <function-ref name="request" scoped="" ref="0x41ac9550"/>
        <function-ref name="granted" scoped="" ref="0x41ac9630"/>
        <function-ref name="isOwner" scoped="" ref="0x41ac9710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41ac9cf0" loc="53:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41ac9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41ac9ec8"/>
        <function-ref name="userId" scoped="" ref="0x41ac8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41ac8c38" loc="68:../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x41ac8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41ac8e10"/>
        <function-ref name="runTask" scoped="" ref="0x41ac8ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x40e6eec0" loc="6:../../tos/platforms/hemera/BatteryAdcP.nc">
      <component-ref qname="BatteryAdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x40e6eec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e6b0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e6b1a0"/>
        <function-ref name="request" scoped="" ref="0x40e6b280"/>
        <function-ref name="granted" scoped="" ref="0x40e6b360"/>
        <function-ref name="isOwner" scoped="" ref="0x40e6b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadAdc" ref="0x40e6b750" loc="10:../../tos/platforms/hemera/BatteryAdcP.nc">
      <component-ref qname="BatteryAdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadAdc" scoped="" ref="0x40e6b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e6bd78"/>
        <function-ref name="readDone" scoped="" ref="0x40e6a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSingleChannel" ref="0x40e6e580" loc="5:../../tos/platforms/hemera/BatteryAdcP.nc">
      <component-ref qname="BatteryAdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadSingleChannel" scoped="" ref="0x40e6e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40e6e758"/>
        <function-ref name="configureSingle" scoped="" ref="0x40e6e838"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x40e6e918"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x40e6e9f8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x40e6ead8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x40e6ebb8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x40e6ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e60178" loc="31:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x40e60178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e60350"/>
        <function-ref name="stopDone" scoped="" ref="0x40e60430"/>
        <function-ref name="start" scoped="" ref="0x40e60510"/>
        <function-ref name="stop" scoped="" ref="0x40e605f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40e86e78" loc="36:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x40e86e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40e5e070"/>
        <function-ref name="initiate" scoped="" ref="0x40e5e150"/>
        <function-ref name="linkResult" scoped="" ref="0x40e5e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40e57670" loc="35:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40e57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40e57848"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40e57928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40e5f2a0" loc="33:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x40e5f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e5f478"/>
        <function-ref name="recv" scoped="" ref="0x40e5f558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40e5e938" loc="41:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x40e5e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e5eb10"/>
        <function-ref name="stop" scoped="" ref="0x40e5ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40e58178" loc="34:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x40e58178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40e58350"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40e58430"/>
        <function-ref name="delRoute" scoped="" ref="0x40e58510"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40e585f0"/>
        <function-ref name="addRoute" scoped="" ref="0x40e586d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40e5e428" loc="40:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x40e5e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e5e600"/>
        <function-ref name="stop" scoped="" ref="0x40e5e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40e5ddf0" loc="32:../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x40e5ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e5f010"/>
        <function-ref name="recv" scoped="" ref="0x40e5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40e751c0" loc="17:../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x40e751c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40e75398"/>
        <function-ref name="changed" scoped="" ref="0x40e75478"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40e75558"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40e75638"/>
        <function-ref name="setSource" scoped="" ref="0x40e75718"/>
        <function-ref name="removeAddress" scoped="" ref="0x40e757f8"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40e758d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e793f0" loc="20:../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x40e793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e795c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e796a8"/>
        <function-ref name="led1On" scoped="" ref="0x40e79788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e79868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e79948"/>
        <function-ref name="get" scoped="" ref="0x40e79a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40e79b08"/>
        <function-ref name="led2Off" scoped="" ref="0x40e79e88"/>
        <function-ref name="set" scoped="" ref="0x40e79be8"/>
        <function-ref name="led0On" scoped="" ref="0x40e79cc8"/>
        <function-ref name="led2On" scoped="" ref="0x40e79da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x40e75a88" loc="18:../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x40e75a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e75c60"/>
        <function-ref name="recv" scoped="" ref="0x40e75d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40e72ea8" loc="19:../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x40e72ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40e790c0"/>
        <function-ref name="delTLV" scoped="" ref="0x40e791a0"/>
        <function-ref name="findTLV" scoped="" ref="0x40e79280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40e7b228" loc="14:../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x40e7b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e7b400"/>
        <function-ref name="recv" scoped="" ref="0x40e7b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40e987c0" loc="22:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x40e987c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40e98998"/>
        <function-ref name="initiate" scoped="" ref="0x40e98a78"/>
        <function-ref name="linkResult" scoped="" ref="0x40e98b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x40e92a78" loc="28:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x40e92a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e92c50"/>
        <function-ref name="recv" scoped="" ref="0x40e92d30"/>
        <function-ref name="sendDone" scoped="" ref="0x40e92e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x40e8d4c0" loc="31:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x40e8d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40752010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e945f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40e94010"/>
        <function-ref name="empty" scoped="" ref="0x40e8dae8"/>
        <function-ref name="put" scoped="" ref="0x40e94268"/>
        <function-ref name="size" scoped="" ref="0x40e8dd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x40eb7228" loc="95:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40eb7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40eb7400"/>
        <function-ref name="runTask" scoped="" ref="0x40eb74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40e98010" loc="21:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40e98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40e981e8"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40e982c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40e971c0" loc="24:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x40e971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e97398"/>
        <function-ref name="recv" scoped="" ref="0x40e97478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e975e8" loc="25:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40e975e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e977c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40e95010" loc="29:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x40e95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40e951e8"/>
        <function-ref name="changed" scoped="" ref="0x40e952c8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40e953a8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40e95488"/>
        <function-ref name="setSource" scoped="" ref="0x40e95568"/>
        <function-ref name="removeAddress" scoped="" ref="0x40e95648"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40e95728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40e857e8" loc="20:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x40e857e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40e859c0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40e85aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x40e85b80"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40e85c60"/>
        <function-ref name="addRoute" scoped="" ref="0x40e85d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40e958c0" loc="30:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x40e958c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40e95a98"/>
        <function-ref name="delTLV" scoped="" ref="0x40e95b78"/>
        <function-ref name="findTLV" scoped="" ref="0x40e95c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40e98cb0" loc="23:../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x40e98cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e98e88"/>
        <function-ref name="recv" scoped="" ref="0x40e97010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40ee1810" loc="10:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x40ee1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee19e8"/>
        <function-ref name="recv" scoped="" ref="0x40ee1ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40edea10" loc="13:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x40edea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edebe8"/>
        <function-ref name="recv" scoped="" ref="0x40edecc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ededa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40ee12d8" loc="9:../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40ee12d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40ee14b0"/>
        <function-ref name="matchContext" scoped="" ref="0x40ee1590"/>
        <function-ref name="getContext" scoped="" ref="0x40ee1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40ee47b0" loc="22:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x40ee47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee4988"/>
        <function-ref name="recv" scoped="" ref="0x40ee4a68"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee4b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40ed7a18" loc="28:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x40ed7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40ed7bf0"/>
        <function-ref name="changed" scoped="" ref="0x40ed7cd0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40ed7db0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40ed7e90"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40eda010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40edc2b8" loc="26:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x40edc2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edc490"/>
        <function-ref name="recv" scoped="" ref="0x40edc570"/>
        <function-ref name="sendDone" scoped="" ref="0x40edc650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40edc7f0" loc="27:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x40edc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40edc9c8"/>
        <function-ref name="changed" scoped="" ref="0x40edcaa8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40edcb88"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40edcc68"/>
        <function-ref name="setSource" scoped="" ref="0x40edcd48"/>
        <function-ref name="removeAddress" scoped="" ref="0x40edce28"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40edcf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40ee4d38" loc="23:../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40ee4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40ee4f10"/>
        <function-ref name="matchContext" scoped="" ref="0x40edc010"/>
        <function-ref name="getContext" scoped="" ref="0x40edc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40ee3b90" loc="30:../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x40ee3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40ee3d68"/>
        <function-ref name="changed" scoped="" ref="0x40ee3e48"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40ee3f28"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40ef2018"/>
        <function-ref name="setSource" scoped="" ref="0x40ef20f8"/>
        <function-ref name="removeAddress" scoped="" ref="0x40ef21d8"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40ef22b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x40ef1218" loc="31:../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x40ef1218"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403a82d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403a82d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x40ef13f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40f229f0" loc="36:../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x40f229f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40f22bc8"/>
        <function-ref name="changed" scoped="" ref="0x40f22ca8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f22d88"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f22e68"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f20010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40ef1a40" loc="32:../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x40ef1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40ef1c18"/>
        <function-ref name="changed" scoped="" ref="0x40ef1cf8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40ef1dd8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40ef1eb8"/>
        <function-ref name="setSource" scoped="" ref="0x40f22010"/>
        <function-ref name="removeAddress" scoped="" ref="0x40f220f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40f221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x40f22608" loc="33:../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x40f22608"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403a82d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403a82d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x40f227e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40f31ec0" loc="3:../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x40f31ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40f300c0"/>
        <function-ref name="changed" scoped="" ref="0x40f301a0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f30280"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f30360"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f30440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40f2dd68" loc="8:../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f2dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40f2c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40f59af0" loc="10:../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x40f59af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40f59cc8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40f59da8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40f59e88"/>
        <function-ref name="syncDone" scoped="" ref="0x40f2b010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40f2b0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f2b1d0"/>
        <function-ref name="setChannel" scoped="" ref="0x40f2b2b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40f2b390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40f2b470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40f2b550"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f2b630"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f2b710"/>
        <function-ref name="sync" scoped="" ref="0x40f2b7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40f2b950"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40f2ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40f30e10" loc="5:../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x40f30e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40f2d010"/>
        <function-ref name="changed" scoped="" ref="0x40f2d0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f2d1d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f2d2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f2d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f30a68" loc="4:../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40f30a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f30c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40f4f010" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40f4f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40f4c658" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f4c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40f4c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x40f492d0" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x40f492d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f494a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x40f45e38" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x40f45e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f44050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x40f72370" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x40f72370"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f72548"/>
        <function-ref name="write" scoped="" ref="0x40f72628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x40f72870" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x40f72870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f72a48"/>
        <function-ref name="stop" scoped="" ref="0x40f72b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x40f41b30" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x40f41b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f41d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x40f6a170" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x40f6a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f6a348"/>
        <function-ref name="write" scoped="" ref="0x40f6a428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x40f6a648" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x40f6a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6a820"/>
        <function-ref name="isInput" scoped="" ref="0x40f6a900"/>
        <function-ref name="toggle" scoped="" ref="0x40f6a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6aac0"/>
        <function-ref name="get" scoped="" ref="0x40f6aba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6ac80"/>
        <function-ref name="set" scoped="" ref="0x40f6ad60"/>
        <function-ref name="clr" scoped="" ref="0x40f6ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40f63748" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x40f63748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40f63e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x40f69630" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x40f69630"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f69808"/>
        <function-ref name="write" scoped="" ref="0x40f698e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x40f69b08" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x40f69b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f69ce0"/>
        <function-ref name="isInput" scoped="" ref="0x40f69dc0"/>
        <function-ref name="toggle" scoped="" ref="0x40f69ea0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f66010"/>
        <function-ref name="get" scoped="" ref="0x40f660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f661d0"/>
        <function-ref name="set" scoped="" ref="0x40f662b0"/>
        <function-ref name="clr" scoped="" ref="0x40f66390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40f883e8" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x40f883e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40f88b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40f86c40" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x40f86c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40f853a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f85718" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40f85718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f85e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f7d388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f7d110"/>
        <function-ref name="overflow" scoped="" ref="0x40f7d600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x40f7a4a8" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x40f7a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f7abf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f78110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f7ae70"/>
        <function-ref name="overflow" scoped="" ref="0x40f78388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x40f76308" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40f76308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f764e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x40f765c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40f766a0"/>
        <function-ref name="get" scoped="" ref="0x40f76780"/>
        <function-ref name="disableEvents" scoped="" ref="0x40f76860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f76940"/>
        <function-ref name="getMode" scoped="" ref="0x40f76a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f76b00"/>
        <function-ref name="overflow" scoped="" ref="0x40f76be0"/>
        <function-ref name="setMode" scoped="" ref="0x40f76cc0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40f76da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f77208" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40f77208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fab40"/>
            <typename><typedef-ref name="TMicro" ref="0x406fad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f77958"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f77e48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f77bd0"/>
        <function-ref name="overflow" scoped="" ref="0x40f760d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x40f42910" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x40f42910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f42ae8"/>
        <function-ref name="isInput" scoped="" ref="0x40f42bc8"/>
        <function-ref name="toggle" scoped="" ref="0x40f42ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f42d88"/>
        <function-ref name="get" scoped="" ref="0x40f42e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f7b010"/>
        <function-ref name="set" scoped="" ref="0x40f7b0f0"/>
        <function-ref name="clr" scoped="" ref="0x40f7b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40faa6d0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40faa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40faa8a8"/>
        <function-ref name="isInput" scoped="" ref="0x40faa988"/>
        <function-ref name="setResistor" scoped="" ref="0x40faaa68"/>
        <function-ref name="toggle" scoped="" ref="0x40faab48"/>
        <function-ref name="isOutput" scoped="" ref="0x40faac28"/>
        <function-ref name="getResistor" scoped="" ref="0x40faad08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40faade8"/>
        <function-ref name="get" scoped="" ref="0x40faaec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40fa9010"/>
        <function-ref name="getRaw" scoped="" ref="0x40fa90f0"/>
        <function-ref name="set" scoped="" ref="0x40fa91d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40fa92b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40fa9390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40fa94f0"/>
        <function-ref name="clr" scoped="" ref="0x40fa95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40f7bcb0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40f7bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f7be88"/>
        <function-ref name="isInput" scoped="" ref="0x40faa010"/>
        <function-ref name="toggle" scoped="" ref="0x40faa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40faa1d0"/>
        <function-ref name="get" scoped="" ref="0x40faa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40faa390"/>
        <function-ref name="set" scoped="" ref="0x40faa470"/>
        <function-ref name="clr" scoped="" ref="0x40faa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f6b900" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x40f6b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f6bad8"/>
        <function-ref name="stop" scoped="" ref="0x40f6bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40f2fe28" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x40f2fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40fa7050"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40fa7130"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40fa7210"/>
        <function-ref name="syncDone" scoped="" ref="0x40fa72f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40fa73d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40fa74b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40fa7590"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40fa7670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40fa7750"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40fa7830"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40fa7910"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40fa79f0"/>
        <function-ref name="sync" scoped="" ref="0x40fa7ad0"/>
        <function-ref name="getChannel" scoped="" ref="0x40fa7c30"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40fa7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40fa24c0" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x40fa24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa2ae8"/>
        <function-ref name="readDone" scoped="" ref="0x40fa2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40f9e9c0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x40f9e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40f9eb98"/>
        <function-ref name="rfOff" scoped="" ref="0x40f9ec78"/>
        <function-ref name="rxOn" scoped="" ref="0x40f9ed58"/>
        <function-ref name="startVReg" scoped="" ref="0x40f9ee38"/>
        <function-ref name="stopVReg" scoped="" ref="0x40f9ef18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40fa2010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40fa20f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40fa21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f2f6f0" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40f2f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f2f8c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f2f9a8"/>
        <function-ref name="request" scoped="" ref="0x40f2fa88"/>
        <function-ref name="granted" scoped="" ref="0x40f2fb68"/>
        <function-ref name="isOwner" scoped="" ref="0x40f2fc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40f9b3b0" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x40f9b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40f9b588"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40f9b668"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40f9b748"/>
        <function-ref name="syncDone" scoped="" ref="0x40f9b828"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40f9b908"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f9b9e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40f9bac8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40f9bba8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40f9bc88"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40f9bd68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f9be48"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f9bf28"/>
        <function-ref name="sync" scoped="" ref="0x40f9a018"/>
        <function-ref name="getChannel" scoped="" ref="0x40f9a178"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40f9a258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40fc6868" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x40fc6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc6a40"/>
        <function-ref name="write" scoped="" ref="0x40fc6b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40f99b38" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40f99b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40f99d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x40f98128" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x40f98128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f96600"/>
        <function-ref name="fired" scoped="" ref="0x40f98d90"/>
        <function-ref name="startAt" scoped="" ref="0x40f962c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f96048"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f96878"/>
        <function-ref name="start" scoped="" ref="0x40f98878"/>
        <function-ref name="stop" scoped="" ref="0x40f98b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x40f91d68" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x40f91d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc6010"/>
        <function-ref name="write" scoped="" ref="0x40fc60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40f955a0" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x40f955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f95778"/>
        <function-ref name="isInput" scoped="" ref="0x40f95858"/>
        <function-ref name="toggle" scoped="" ref="0x40f95938"/>
        <function-ref name="isOutput" scoped="" ref="0x40f95a18"/>
        <function-ref name="get" scoped="" ref="0x40f95af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f95bd8"/>
        <function-ref name="set" scoped="" ref="0x40f95cb8"/>
        <function-ref name="clr" scoped="" ref="0x40f95d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40f9af10" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x40f9af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f99558"/>
        <function-ref name="readDone" scoped="" ref="0x40f997b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x40fb8d48" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x40fb8d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fb8f20"/>
        <function-ref name="runTask" scoped="" ref="0x40fb7018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40fc6d60" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x40fc6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc1010"/>
        <function-ref name="write" scoped="" ref="0x40fc10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40fc1340" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x40fc1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc1518"/>
        <function-ref name="write" scoped="" ref="0x40fc15f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40f91340" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x40f91340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f91518"/>
        <function-ref name="write" scoped="" ref="0x40f915f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40f90a68" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f90a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40f90c40"/>
        <function-ref name="changed" scoped="" ref="0x40f90d20"/>
        <function-ref name="amGroup" scoped="" ref="0x40f90e00"/>
        <function-ref name="setAddress" scoped="" ref="0x40f90ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40f96b48" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x40f96b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f96d20"/>
        <function-ref name="isInput" scoped="" ref="0x40f96e00"/>
        <function-ref name="toggle" scoped="" ref="0x40f96ee0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f95010"/>
        <function-ref name="get" scoped="" ref="0x40f950f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f951d0"/>
        <function-ref name="set" scoped="" ref="0x40f952b0"/>
        <function-ref name="clr" scoped="" ref="0x40f95390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40fbea28" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x40fbea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40fbed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x40f94010" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x40f94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f941e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f942c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f943a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f94488"/>
        <function-ref name="get" scoped="" ref="0x40f94568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f94648"/>
        <function-ref name="set" scoped="" ref="0x40f94728"/>
        <function-ref name="clr" scoped="" ref="0x40f94808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fa1868" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40fa1868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fa1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40fc6358" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x40fc6358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc6530"/>
        <function-ref name="write" scoped="" ref="0x40fc6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40fbf010" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x40fbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40fbf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40fbf430" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x40fbf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fbf608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fbf6e8"/>
        <function-ref name="request" scoped="" ref="0x40fbf7c8"/>
        <function-ref name="granted" scoped="" ref="0x40fbf8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fbf988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40fbd428" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x40fbd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fbd600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fbd6e0"/>
        <function-ref name="request" scoped="" ref="0x40fbd7c0"/>
        <function-ref name="granted" scoped="" ref="0x40fbd8a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fbd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40f9a428" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x40f9a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40f9a600"/>
        <function-ref name="rfOff" scoped="" ref="0x40f9a6e0"/>
        <function-ref name="rxOn" scoped="" ref="0x40f9a7c0"/>
        <function-ref name="startVReg" scoped="" ref="0x40f9a8a0"/>
        <function-ref name="stopVReg" scoped="" ref="0x40f9a980"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40f9aa60"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40f9ab40"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40f9ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x40f91848" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x40f91848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f91a20"/>
        <function-ref name="write" scoped="" ref="0x40f91b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40fc2dc8" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x40fc2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f91010"/>
        <function-ref name="write" scoped="" ref="0x40f910f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40fbe1e0" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x40fbe1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40fbe3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fbdb10" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x40fbdb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fbdce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fbddc8"/>
        <function-ref name="led1On" scoped="" ref="0x40fbdea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fbc010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fbc0f0"/>
        <function-ref name="get" scoped="" ref="0x40fbc1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40fbc2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40fbc630"/>
        <function-ref name="set" scoped="" ref="0x40fbc390"/>
        <function-ref name="led0On" scoped="" ref="0x40fbc470"/>
        <function-ref name="led2On" scoped="" ref="0x40fbc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40fb8568" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x40fb8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fb8740"/>
        <function-ref name="runTask" scoped="" ref="0x40fb8820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fa1bf8" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x40fa1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fa1dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fa1eb0"/>
        <function-ref name="request" scoped="" ref="0x40f9b010"/>
        <function-ref name="granted" scoped="" ref="0x40f9b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40fc3660" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x40fc3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc3838"/>
        <function-ref name="write" scoped="" ref="0x40fc3918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x40fc3110" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x40fc3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc3368"/>
        <function-ref name="write" scoped="" ref="0x40fc3448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40f94a90" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x40f94a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f94c68"/>
        <function-ref name="disable" scoped="" ref="0x40f94d48"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f94e28"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f94f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40fbfbe0" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x40fbfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fbfdb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fbfe98"/>
        <function-ref name="request" scoped="" ref="0x40fbd010"/>
        <function-ref name="granted" scoped="" ref="0x40fbd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fbd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40fbe5f8" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x40fbe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40fbe7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fe44a8" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40fe44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fe4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x40fe4a70" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x40fe4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41017010"/>
        <function-ref name="fired" scoped="" ref="0x41018718"/>
        <function-ref name="startAt" scoped="" ref="0x41018c08"/>
        <function-ref name="isRunning" scoped="" ref="0x41018990"/>
        <function-ref name="getAlarm" scoped="" ref="0x41017288"/>
        <function-ref name="start" scoped="" ref="0x41018200"/>
        <function-ref name="stop" scoped="" ref="0x410184a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41016060" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41016060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41016238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x410164d8" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x410164d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410159a0"/>
        <function-ref name="fired" scoped="" ref="0x41015170"/>
        <function-ref name="startAt" scoped="" ref="0x41015660"/>
        <function-ref name="isRunning" scoped="" ref="0x410153e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41015c18"/>
        <function-ref name="start" scoped="" ref="0x41016c28"/>
        <function-ref name="stop" scoped="" ref="0x41016ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41b01010" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x41b01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b004e0"/>
        <function-ref name="fired" scoped="" ref="0x41b01c78"/>
        <function-ref name="startAt" scoped="" ref="0x41b001a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41b01ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41b00758"/>
        <function-ref name="start" scoped="" ref="0x41b01760"/>
        <function-ref name="stop" scoped="" ref="0x41b01a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41b03b30" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41b03b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b03d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41afd0e8" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x41afd0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41afc5c8"/>
        <function-ref name="fired" scoped="" ref="0x41afdd50"/>
        <function-ref name="startAt" scoped="" ref="0x41afc288"/>
        <function-ref name="isRunning" scoped="" ref="0x41afc010"/>
        <function-ref name="getAlarm" scoped="" ref="0x41afc840"/>
        <function-ref name="start" scoped="" ref="0x41afd838"/>
        <function-ref name="stop" scoped="" ref="0x41afdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41affc68" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41affc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41affe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x41af0170" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x41af0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x41af0348"/>
        <function-ref name="setEvent" scoped="" ref="0x41af0428"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x41af0508"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x41af05e8"/>
        <function-ref name="fired" scoped="" ref="0x41af06c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x41af3a90" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x41af3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41af3c68"/>
        <function-ref name="setClockSource" scoped="" ref="0x41af3d48"/>
        <function-ref name="enableEvents" scoped="" ref="0x41af3e28"/>
        <function-ref name="get" scoped="" ref="0x41af3f08"/>
        <function-ref name="disableEvents" scoped="" ref="0x41af1010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41af10f0"/>
        <function-ref name="getMode" scoped="" ref="0x41af11d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41af12b0"/>
        <function-ref name="overflow" scoped="" ref="0x41af1390"/>
        <function-ref name="setMode" scoped="" ref="0x41af1470"/>
        <function-ref name="setInputDivider" scoped="" ref="0x41af1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x41af16b0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x41af16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x41af1888"/>
        <function-ref name="getControl" scoped="" ref="0x41af1968"/>
        <function-ref name="enableEvents" scoped="" ref="0x41af1a48"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x41af1b28"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x41af1c08"/>
        <function-ref name="disableEvents" scoped="" ref="0x41af1ce8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41af1dc8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x41af1ea8"/>
        <function-ref name="setControl" scoped="" ref="0x41af0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x41aecba8" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x41aecba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x41aecd80"/>
        <function-ref name="setEvent" scoped="" ref="0x41aece60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x41aeb010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x41aeb0f0"/>
        <function-ref name="fired" scoped="" ref="0x41aeb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x41aed4b8" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x41aed4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41aed690"/>
        <function-ref name="setClockSource" scoped="" ref="0x41aed770"/>
        <function-ref name="enableEvents" scoped="" ref="0x41aed850"/>
        <function-ref name="get" scoped="" ref="0x41aed930"/>
        <function-ref name="disableEvents" scoped="" ref="0x41aeda10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41aedaf0"/>
        <function-ref name="getMode" scoped="" ref="0x41aedbd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41aedcb0"/>
        <function-ref name="overflow" scoped="" ref="0x41aedd90"/>
        <function-ref name="setMode" scoped="" ref="0x41aede70"/>
        <function-ref name="setInputDivider" scoped="" ref="0x41aec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41aefaa0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x41aefaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41aed010"/>
        <function-ref name="fired" scoped="" ref="0x41aee718"/>
        <function-ref name="startAt" scoped="" ref="0x41aeec08"/>
        <function-ref name="isRunning" scoped="" ref="0x41aee990"/>
        <function-ref name="getAlarm" scoped="" ref="0x41aed288"/>
        <function-ref name="start" scoped="" ref="0x41aee200"/>
        <function-ref name="stop" scoped="" ref="0x41aee4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41aef628" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41aef628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41aef800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x41aec170" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x41aec170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x41aec348"/>
        <function-ref name="getControl" scoped="" ref="0x41aec428"/>
        <function-ref name="enableEvents" scoped="" ref="0x41aec508"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x41aec5e8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x41aec6c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x41aec7a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41aec888"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x41aec968"/>
        <function-ref name="setControl" scoped="" ref="0x41aeca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41007218" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x41007218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41007968"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41007e58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41007be0"/>
        <function-ref name="overflow" scoped="" ref="0x41006110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x41003cd8" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x41003cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41002478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41002968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410026f0"/>
        <function-ref name="overflow" scoped="" ref="0x41002be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41005a98" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x41005a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41003200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410036f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41003478"/>
        <function-ref name="overflow" scoped="" ref="0x41003968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41afbb48" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x41afbb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41af8068"/>
        <function-ref name="fired" scoped="" ref="0x41afa820"/>
        <function-ref name="startAt" scoped="" ref="0x41afad10"/>
        <function-ref name="isRunning" scoped="" ref="0x41afaa98"/>
        <function-ref name="getAlarm" scoped="" ref="0x41af82e0"/>
        <function-ref name="start" scoped="" ref="0x41afa308"/>
        <function-ref name="stop" scoped="" ref="0x41afa5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41af7870" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x41af7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41af6d58"/>
        <function-ref name="fired" scoped="" ref="0x41af6528"/>
        <function-ref name="startAt" scoped="" ref="0x41af6a18"/>
        <function-ref name="isRunning" scoped="" ref="0x41af67a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41af5010"/>
        <function-ref name="start" scoped="" ref="0x41af6010"/>
        <function-ref name="stop" scoped="" ref="0x41af62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41af8630" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x41af8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41af8d80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41af7288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41af7010"/>
        <function-ref name="overflow" scoped="" ref="0x41af7500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x4102bc18" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x4102bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102bdf0"/>
        <function-ref name="isInput" scoped="" ref="0x4102bed0"/>
        <function-ref name="toggle" scoped="" ref="0x4102a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4102a0f0"/>
        <function-ref name="get" scoped="" ref="0x4102a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102a2b0"/>
        <function-ref name="set" scoped="" ref="0x4102a390"/>
        <function-ref name="clr" scoped="" ref="0x4102a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x4102a688" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x4102a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102a860"/>
        <function-ref name="isInput" scoped="" ref="0x4102a940"/>
        <function-ref name="toggle" scoped="" ref="0x4102aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x4102ab00"/>
        <function-ref name="get" scoped="" ref="0x4102abe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102acc0"/>
        <function-ref name="set" scoped="" ref="0x4102ada0"/>
        <function-ref name="clr" scoped="" ref="0x4102ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x410290b0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x410290b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41029288"/>
        <function-ref name="isInput" scoped="" ref="0x41029368"/>
        <function-ref name="toggle" scoped="" ref="0x41029448"/>
        <function-ref name="isOutput" scoped="" ref="0x41029528"/>
        <function-ref name="get" scoped="" ref="0x41029608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410296e8"/>
        <function-ref name="set" scoped="" ref="0x410297c8"/>
        <function-ref name="clr" scoped="" ref="0x410298a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4102b210" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x4102b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4102b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4102b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4102b688"/>
        <function-ref name="get" scoped="" ref="0x4102b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102b848"/>
        <function-ref name="set" scoped="" ref="0x4102b928"/>
        <function-ref name="clr" scoped="" ref="0x4102ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x410284c8" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x410284c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410286a0"/>
        <function-ref name="isInput" scoped="" ref="0x41028780"/>
        <function-ref name="toggle" scoped="" ref="0x41028860"/>
        <function-ref name="isOutput" scoped="" ref="0x41028940"/>
        <function-ref name="get" scoped="" ref="0x41028a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x41028b00"/>
        <function-ref name="set" scoped="" ref="0x41028be0"/>
        <function-ref name="clr" scoped="" ref="0x41028cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40fe37e8" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x40fe37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fe39c0"/>
        <function-ref name="isInput" scoped="" ref="0x40fe3aa0"/>
        <function-ref name="toggle" scoped="" ref="0x40fe3b80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fe3c60"/>
        <function-ref name="get" scoped="" ref="0x40fe3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fe3e20"/>
        <function-ref name="set" scoped="" ref="0x40fe3f00"/>
        <function-ref name="clr" scoped="" ref="0x4102b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x41029aa8" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x41029aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41029c80"/>
        <function-ref name="isInput" scoped="" ref="0x41029d60"/>
        <function-ref name="toggle" scoped="" ref="0x41029e40"/>
        <function-ref name="isOutput" scoped="" ref="0x41029f20"/>
        <function-ref name="get" scoped="" ref="0x41028018"/>
        <function-ref name="makeOutput" scoped="" ref="0x410280f8"/>
        <function-ref name="set" scoped="" ref="0x410281d8"/>
        <function-ref name="clr" scoped="" ref="0x410282b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x41026190" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x41026190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41026368"/>
        <function-ref name="isInput" scoped="" ref="0x41026448"/>
        <function-ref name="setResistor" scoped="" ref="0x41026528"/>
        <function-ref name="toggle" scoped="" ref="0x41026608"/>
        <function-ref name="isOutput" scoped="" ref="0x410266e8"/>
        <function-ref name="getResistor" scoped="" ref="0x410267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x410268a8"/>
        <function-ref name="get" scoped="" ref="0x41026988"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x41026a68"/>
        <function-ref name="getRaw" scoped="" ref="0x41026b48"/>
        <function-ref name="set" scoped="" ref="0x41026c28"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x41026d08"/>
        <function-ref name="isIOFunc" scoped="" ref="0x41026de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x41025010"/>
        <function-ref name="clr" scoped="" ref="0x410250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x410277f0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x410277f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410279c8"/>
        <function-ref name="isInput" scoped="" ref="0x41027aa8"/>
        <function-ref name="toggle" scoped="" ref="0x41027b88"/>
        <function-ref name="isOutput" scoped="" ref="0x41027c68"/>
        <function-ref name="get" scoped="" ref="0x41027d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x41027e28"/>
        <function-ref name="set" scoped="" ref="0x41027f08"/>
        <function-ref name="clr" scoped="" ref="0x41026010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x410249a8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x410249a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41024b80"/>
        <function-ref name="isInput" scoped="" ref="0x41024c60"/>
        <function-ref name="setResistor" scoped="" ref="0x41024d40"/>
        <function-ref name="toggle" scoped="" ref="0x41024e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41024f00"/>
        <function-ref name="getResistor" scoped="" ref="0x41023010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410230f0"/>
        <function-ref name="get" scoped="" ref="0x410231d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x410232b0"/>
        <function-ref name="getRaw" scoped="" ref="0x41023390"/>
        <function-ref name="set" scoped="" ref="0x41023470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x41023550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x41023630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x41023790"/>
        <function-ref name="clr" scoped="" ref="0x41023870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x41024030" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x41024030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41024208"/>
        <function-ref name="isInput" scoped="" ref="0x410242e8"/>
        <function-ref name="toggle" scoped="" ref="0x410243c8"/>
        <function-ref name="isOutput" scoped="" ref="0x410244a8"/>
        <function-ref name="get" scoped="" ref="0x41024588"/>
        <function-ref name="makeOutput" scoped="" ref="0x41024668"/>
        <function-ref name="set" scoped="" ref="0x41024748"/>
        <function-ref name="clr" scoped="" ref="0x41024828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x41021190" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x41021190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41021368"/>
        <function-ref name="isInput" scoped="" ref="0x41021448"/>
        <function-ref name="setResistor" scoped="" ref="0x41021528"/>
        <function-ref name="toggle" scoped="" ref="0x41021608"/>
        <function-ref name="isOutput" scoped="" ref="0x410216e8"/>
        <function-ref name="getResistor" scoped="" ref="0x410217c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x410218a8"/>
        <function-ref name="get" scoped="" ref="0x41021988"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x41021a68"/>
        <function-ref name="getRaw" scoped="" ref="0x41021b48"/>
        <function-ref name="set" scoped="" ref="0x41021c28"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x41021d08"/>
        <function-ref name="isIOFunc" scoped="" ref="0x41021de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x41020010"/>
        <function-ref name="clr" scoped="" ref="0x410200f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x410227c0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x410227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41022998"/>
        <function-ref name="isInput" scoped="" ref="0x41022a78"/>
        <function-ref name="toggle" scoped="" ref="0x41022b58"/>
        <function-ref name="isOutput" scoped="" ref="0x41022c38"/>
        <function-ref name="get" scoped="" ref="0x41022d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41022df8"/>
        <function-ref name="set" scoped="" ref="0x41022ed8"/>
        <function-ref name="clr" scoped="" ref="0x41021010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4101f9d8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4101f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4101fbb0"/>
        <function-ref name="isInput" scoped="" ref="0x4101fc90"/>
        <function-ref name="setResistor" scoped="" ref="0x4101fd70"/>
        <function-ref name="toggle" scoped="" ref="0x4101fe50"/>
        <function-ref name="isOutput" scoped="" ref="0x4101e010"/>
        <function-ref name="getResistor" scoped="" ref="0x4101e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4101e1d0"/>
        <function-ref name="get" scoped="" ref="0x4101e2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4101e390"/>
        <function-ref name="getRaw" scoped="" ref="0x4101e470"/>
        <function-ref name="set" scoped="" ref="0x4101e550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4101e630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4101e710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4101e870"/>
        <function-ref name="clr" scoped="" ref="0x4101e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4101f060" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4101f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4101f238"/>
        <function-ref name="isInput" scoped="" ref="0x4101f318"/>
        <function-ref name="toggle" scoped="" ref="0x4101f3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4101f4d8"/>
        <function-ref name="get" scoped="" ref="0x4101f5b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4101f698"/>
        <function-ref name="set" scoped="" ref="0x4101f778"/>
        <function-ref name="clr" scoped="" ref="0x4101f858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4101c270" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4101c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4101c448"/>
        <function-ref name="isInput" scoped="" ref="0x4101c528"/>
        <function-ref name="setResistor" scoped="" ref="0x4101c608"/>
        <function-ref name="toggle" scoped="" ref="0x4101c6e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4101c7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x4101c8a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4101c988"/>
        <function-ref name="get" scoped="" ref="0x4101ca68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4101cb48"/>
        <function-ref name="getRaw" scoped="" ref="0x4101cc28"/>
        <function-ref name="set" scoped="" ref="0x4101cd08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4101cde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4101cec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4101b090"/>
        <function-ref name="clr" scoped="" ref="0x4101b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4101d8a0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4101d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4101da78"/>
        <function-ref name="isInput" scoped="" ref="0x4101db58"/>
        <function-ref name="toggle" scoped="" ref="0x4101dc38"/>
        <function-ref name="isOutput" scoped="" ref="0x4101dd18"/>
        <function-ref name="get" scoped="" ref="0x4101ddf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4101ded8"/>
        <function-ref name="set" scoped="" ref="0x4101c010"/>
        <function-ref name="clr" scoped="" ref="0x4101c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x41053a18" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x41053a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41053bf0"/>
        <function-ref name="isInput" scoped="" ref="0x41053cd0"/>
        <function-ref name="setResistor" scoped="" ref="0x41053db0"/>
        <function-ref name="toggle" scoped="" ref="0x41053e90"/>
        <function-ref name="isOutput" scoped="" ref="0x41051010"/>
        <function-ref name="getResistor" scoped="" ref="0x410510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410511d0"/>
        <function-ref name="get" scoped="" ref="0x410512b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x41051390"/>
        <function-ref name="getRaw" scoped="" ref="0x41051470"/>
        <function-ref name="set" scoped="" ref="0x41051550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x41051630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x41051710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x41051870"/>
        <function-ref name="clr" scoped="" ref="0x41051950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x410530a0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x410530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41053278"/>
        <function-ref name="isInput" scoped="" ref="0x41053358"/>
        <function-ref name="toggle" scoped="" ref="0x41053438"/>
        <function-ref name="isOutput" scoped="" ref="0x41053518"/>
        <function-ref name="get" scoped="" ref="0x410535f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x410536d8"/>
        <function-ref name="set" scoped="" ref="0x410537b8"/>
        <function-ref name="clr" scoped="" ref="0x41053898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4104f270" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4104f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104f448"/>
        <function-ref name="isInput" scoped="" ref="0x4104f528"/>
        <function-ref name="setResistor" scoped="" ref="0x4104f608"/>
        <function-ref name="toggle" scoped="" ref="0x4104f6e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4104f7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x4104f8a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104f988"/>
        <function-ref name="get" scoped="" ref="0x4104fa68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4104fb48"/>
        <function-ref name="getRaw" scoped="" ref="0x4104fc28"/>
        <function-ref name="set" scoped="" ref="0x4104fd08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4104fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4104fec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4104e090"/>
        <function-ref name="clr" scoped="" ref="0x4104e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x410508a0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x410508a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41050a78"/>
        <function-ref name="isInput" scoped="" ref="0x41050b58"/>
        <function-ref name="toggle" scoped="" ref="0x41050c38"/>
        <function-ref name="isOutput" scoped="" ref="0x41050d18"/>
        <function-ref name="get" scoped="" ref="0x41050df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41050ed8"/>
        <function-ref name="set" scoped="" ref="0x4104f010"/>
        <function-ref name="clr" scoped="" ref="0x4104f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x410417f0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x410417f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x410419c8"/>
        <function-ref name="disable" scoped="" ref="0x41041aa8"/>
        <function-ref name="captured" scoped="" ref="0x41041b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x41041c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x41041ef0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x41041ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410430e0"/>
        <function-ref name="disable" scoped="" ref="0x410431c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x410432a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41043380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x41043618" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x41043618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410437f0"/>
        <function-ref name="disable" scoped="" ref="0x410438d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x410439b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41043a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x4106f8e0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x4106f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4106fab8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4106fb98"/>
        <function-ref name="captured" scoped="" ref="0x4106fc78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4106fd58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4106fe38"/>
        <function-ref name="setEdge" scoped="" ref="0x4106ff18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x410408b8" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x410408b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x41040a90"/>
        <function-ref name="disable" scoped="" ref="0x41040b70"/>
        <function-ref name="captured" scoped="" ref="0x41040c50"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x41040d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x41040e90" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x41040e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4106f080"/>
        <function-ref name="getControl" scoped="" ref="0x4106f160"/>
        <function-ref name="enableEvents" scoped="" ref="0x4106f240"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4106f320"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4106f400"/>
        <function-ref name="disableEvents" scoped="" ref="0x4106f4e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4106f5c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4106f6a0"/>
        <function-ref name="setControl" scoped="" ref="0x4106f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x4106e0b0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4106e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4106e288"/>
        <function-ref name="isInput" scoped="" ref="0x4106e368"/>
        <function-ref name="setResistor" scoped="" ref="0x4106e448"/>
        <function-ref name="toggle" scoped="" ref="0x4106e528"/>
        <function-ref name="isOutput" scoped="" ref="0x4106e608"/>
        <function-ref name="getResistor" scoped="" ref="0x4106e6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4106e7c8"/>
        <function-ref name="get" scoped="" ref="0x4106e8a8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4106e988"/>
        <function-ref name="getRaw" scoped="" ref="0x4106ea68"/>
        <function-ref name="set" scoped="" ref="0x4106eb48"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4106ec28"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4106ed08"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4106ee68"/>
        <function-ref name="clr" scoped="" ref="0x4106d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x4106b4e0" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x4106b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4106b6b8"/>
        <function-ref name="fired" scoped="" ref="0x4106b798"/>
        <function-ref name="disable" scoped="" ref="0x4106b878"/>
        <function-ref name="edge" scoped="" ref="0x4106b958"/>
        <function-ref name="enable" scoped="" ref="0x4106ba38"/>
        <function-ref name="getValue" scoped="" ref="0x4106bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4106cea0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x4106cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4106b0c0"/>
        <function-ref name="disable" scoped="" ref="0x4106b1a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4106b280"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4106b360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x4106ae40" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x4106ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41069050"/>
        <function-ref name="fired" scoped="" ref="0x41069130"/>
        <function-ref name="disable" scoped="" ref="0x41069210"/>
        <function-ref name="edge" scoped="" ref="0x410692f0"/>
        <function-ref name="enable" scoped="" ref="0x410693d0"/>
        <function-ref name="getValue" scoped="" ref="0x410694b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4106a848" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x4106a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4106aa20"/>
        <function-ref name="disable" scoped="" ref="0x4106ab00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4106abe0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4106acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x41151bd8" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x41151bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41151eb0"/>
        <function-ref name="write" scoped="" ref="0x4114f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x41155190" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x41155190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41155368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x41152270" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x41152270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41152448"/>
        <function-ref name="write" scoped="" ref="0x41152528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4114fa00" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x4114fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114fbd8"/>
        <function-ref name="write" scoped="" ref="0x4114fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x4114b2b0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x4114b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114b488"/>
        <function-ref name="write" scoped="" ref="0x4114b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4114fe38" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x4114fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114e050"/>
        <function-ref name="write" scoped="" ref="0x4114e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x41145b20" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x41145b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41145cf8"/>
        <function-ref name="write" scoped="" ref="0x41145dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x41146a00" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x41146a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41146bd8"/>
        <function-ref name="write" scoped="" ref="0x41146cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x41155b98" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x41155b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41155d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x41148190" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x41148190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41148368"/>
        <function-ref name="write" scoped="" ref="0x41148448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x41146190" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41146190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41146368"/>
        <function-ref name="write" scoped="" ref="0x41146448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x41152ae0" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x41152ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41152cb8"/>
        <function-ref name="write" scoped="" ref="0x41152d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x41151368" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x41151368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41151540"/>
        <function-ref name="write" scoped="" ref="0x41151620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x4114c5c8" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x4114c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114c7a0"/>
        <function-ref name="write" scoped="" ref="0x4114c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4114d880" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x4114d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114da58"/>
        <function-ref name="write" scoped="" ref="0x4114db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4114e2b0" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x4114e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114e488"/>
        <function-ref name="write" scoped="" ref="0x4114e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x411575a0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x411575a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x41157778"/>
        <function-ref name="abortRelease" scoped="" ref="0x41157858"/>
        <function-ref name="attemptRelease" scoped="" ref="0x41157938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x41154910" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x41154910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41154ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x41154c68" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x41154c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41154ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x41148c00" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x41148c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41148dd8"/>
        <function-ref name="write" scoped="" ref="0x41148eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x41153080" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x41153080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41153258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x411465c8" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x411465c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411467a0"/>
        <function-ref name="write" scoped="" ref="0x41146880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x41154260" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x41154260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41154438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x41149cb8" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x41149cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41149e90"/>
        <function-ref name="write" scoped="" ref="0x41148010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x41152f18" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x41152f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41151108"/>
        <function-ref name="write" scoped="" ref="0x411511e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x411526a8" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x411526a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41152880"/>
        <function-ref name="write" scoped="" ref="0x41152960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x41157e10" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x41157e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41155010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x41149448" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x41149448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41149620"/>
        <function-ref name="write" scoped="" ref="0x41149700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x4114b6e8" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x4114b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114b8c0"/>
        <function-ref name="write" scoped="" ref="0x4114b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x41149880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x41149880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41149a58"/>
        <function-ref name="write" scoped="" ref="0x41149b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x411456e8" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x411456e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411458c0"/>
        <function-ref name="write" scoped="" ref="0x411459a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x41146e38" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x41146e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41145050"/>
        <function-ref name="write" scoped="" ref="0x41145130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4114dcb8" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x4114dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114de90"/>
        <function-ref name="write" scoped="" ref="0x4114c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x4114bb20" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x4114bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114bcf8"/>
        <function-ref name="write" scoped="" ref="0x4114bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x41147cf8" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x41147cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41147ed0"/>
        <function-ref name="write" scoped="" ref="0x41146010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4114eb20" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x4114eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114ecf8"/>
        <function-ref name="write" scoped="" ref="0x4114edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x41144010" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x41144010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x411441e8"/>
        <function-ref name="writeDone" scoped="" ref="0x411442c8"/>
        <function-ref name="write" scoped="" ref="0x411443a8"/>
        <function-ref name="beginRead" scoped="" ref="0x41144488"/>
        <function-ref name="readDone" scoped="" ref="0x41144568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x41157ab8" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x41157ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41157c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x41153de0" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x41153de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41152010"/>
        <function-ref name="write" scoped="" ref="0x411520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x411517a0" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x411517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41151978"/>
        <function-ref name="write" scoped="" ref="0x41151a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x4114ca00" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x4114ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114cbd8"/>
        <function-ref name="write" scoped="" ref="0x4114ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4114e6e8" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x4114e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114e8c0"/>
        <function-ref name="write" scoped="" ref="0x4114e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x4114ce38" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x4114ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114b050"/>
        <function-ref name="write" scoped="" ref="0x4114b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4114f190" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x4114f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114f368"/>
        <function-ref name="write" scoped="" ref="0x4114f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x411554e8" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x411554e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4114f5c8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x4114f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114f7a0"/>
        <function-ref name="write" scoped="" ref="0x4114f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41158ea8" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41158ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411570c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411571a0"/>
        <function-ref name="request" scoped="" ref="0x41157280"/>
        <function-ref name="granted" scoped="" ref="0x41157360"/>
        <function-ref name="isOwner" scoped="" ref="0x41157440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x411533d8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x411533d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411535b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x41153a88" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x41153a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41153c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x411478c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x411478c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41147a98"/>
        <function-ref name="write" scoped="" ref="0x41147b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x41147488" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x41147488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41147660"/>
        <function-ref name="write" scoped="" ref="0x41147740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x411545b8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x411545b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41154790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x41147050" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41147050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41147228"/>
        <function-ref name="write" scoped="" ref="0x41147308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x411452b0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x411452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41145488"/>
        <function-ref name="write" scoped="" ref="0x41145568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4114c190" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x4114c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114c368"/>
        <function-ref name="write" scoped="" ref="0x4114c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x41149010" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x41149010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411491e8"/>
        <function-ref name="write" scoped="" ref="0x411492c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x41155840" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x41155840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41155a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x41155ef0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x41155ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411540e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4114d010" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x4114d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114d1e8"/>
        <function-ref name="write" scoped="" ref="0x4114d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x41153730" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x41153730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41153908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4114d448" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x4114d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4114d620"/>
        <function-ref name="write" scoped="" ref="0x4114d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x411485c8" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x411485c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411489a0"/>
        <function-ref name="write" scoped="" ref="0x41148a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x411446e8" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x411446e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x411448c0"/>
        <function-ref name="writeDone" scoped="" ref="0x411449a0"/>
        <function-ref name="write" scoped="" ref="0x41144a80"/>
        <function-ref name="beginRead" scoped="" ref="0x41144b60"/>
        <function-ref name="readDone" scoped="" ref="0x41144c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4107e7a8" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x4107e7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4107e980"/>
        <function-ref name="writeDone" scoped="" ref="0x4107ea60"/>
        <function-ref name="write" scoped="" ref="0x4107eb40"/>
        <function-ref name="beginRead" scoped="" ref="0x4107ec20"/>
        <function-ref name="readDone" scoped="" ref="0x4107ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x41086f08" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x41086f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4107e0f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4107e1d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4107e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4107d208" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x4107d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4107d3e0"/>
        <function-ref name="write" scoped="" ref="0x4107d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4107d9d0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x4107d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4107dba8"/>
        <function-ref name="write" scoped="" ref="0x4107dc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410867b8" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x410867b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41086990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41086a70"/>
        <function-ref name="request" scoped="" ref="0x41086b50"/>
        <function-ref name="granted" scoped="" ref="0x41086c30"/>
        <function-ref name="isOwner" scoped="" ref="0x41086d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4107b1f8" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x4107b1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4107b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x410a7210" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x410a7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410a73e8"/>
        <function-ref name="sendDone" scoped="" ref="0x410a74c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x41077100" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x41077100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x410772d8"/>
        <function-ref name="writeDone" scoped="" ref="0x410773b8"/>
        <function-ref name="write" scoped="" ref="0x41077498"/>
        <function-ref name="beginRead" scoped="" ref="0x41077578"/>
        <function-ref name="readDone" scoped="" ref="0x41077658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4107bd60" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x4107bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x41078010"/>
        <function-ref name="abortRelease" scoped="" ref="0x410780f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x410781d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x41075ec0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x41075ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x410740c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x410a5970" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x410a5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x410a5b48"/>
        <function-ref name="toIdle" scoped="" ref="0x410a5c28"/>
        <function-ref name="isState" scoped="" ref="0x410a5d08"/>
        <function-ref name="isIdle" scoped="" ref="0x410a5de8"/>
        <function-ref name="requestState" scoped="" ref="0x410a5ec8"/>
        <function-ref name="forceState" scoped="" ref="0x41073010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x41076ee8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x41076ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410750e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410751c0"/>
        <function-ref name="request" scoped="" ref="0x410752a0"/>
        <function-ref name="granted" scoped="" ref="0x41075380"/>
        <function-ref name="isOwner" scoped="" ref="0x41075460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x41077b28" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x41077b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41077d00"/>
        <function-ref name="write" scoped="" ref="0x41077de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x410762f0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x410762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410764c8"/>
        <function-ref name="write" scoped="" ref="0x410765a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41073180" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x41073180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41073358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41073438"/>
        <function-ref name="led1On" scoped="" ref="0x41073518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410735f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410736d8"/>
        <function-ref name="get" scoped="" ref="0x410737b8"/>
        <function-ref name="led1Off" scoped="" ref="0x41073898"/>
        <function-ref name="led2Off" scoped="" ref="0x41073c18"/>
        <function-ref name="set" scoped="" ref="0x41073978"/>
        <function-ref name="led0On" scoped="" ref="0x41073a58"/>
        <function-ref name="led2On" scoped="" ref="0x41073b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41078648" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41078648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41078820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41078900"/>
        <function-ref name="request" scoped="" ref="0x410789e0"/>
        <function-ref name="granted" scoped="" ref="0x41078ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x41078ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x410a4ef8" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x410a4ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410a30e0"/>
        <function-ref name="runTask" scoped="" ref="0x410a31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x41076aa8" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x41076aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41076c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x410ac770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x410ac770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x410ac948"/>
        <function-ref name="toIdle" scoped="" ref="0x410aca28"/>
        <function-ref name="isState" scoped="" ref="0x410acb08"/>
        <function-ref name="isIdle" scoped="" ref="0x410acbe8"/>
        <function-ref name="requestState" scoped="" ref="0x410accc8"/>
        <function-ref name="forceState" scoped="" ref="0x410acda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x410e6a10" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x410e6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x410e6be8"/>
        <function-ref name="toIdle" scoped="" ref="0x410e6cc8"/>
        <function-ref name="isState" scoped="" ref="0x410e6da8"/>
        <function-ref name="isIdle" scoped="" ref="0x410e6e88"/>
        <function-ref name="requestState" scoped="" ref="0x410e3010"/>
        <function-ref name="forceState" scoped="" ref="0x410e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410e3ab8" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x410e3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410e3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x410e0100" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x410e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x410e02d8"/>
        <function-ref name="toIdle" scoped="" ref="0x410e03b8"/>
        <function-ref name="isState" scoped="" ref="0x410e0498"/>
        <function-ref name="isIdle" scoped="" ref="0x410e0578"/>
        <function-ref name="requestState" scoped="" ref="0x410e0658"/>
        <function-ref name="forceState" scoped="" ref="0x410e0738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x410e24a8" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x410e24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e2680"/>
        <function-ref name="sendDone" scoped="" ref="0x410e2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x410e2170" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x410e2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x410e2348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410e4a70" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x410e4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e4c48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410e4d28"/>
        <function-ref name="request" scoped="" ref="0x410e4e08"/>
        <function-ref name="granted" scoped="" ref="0x410e4ee8"/>
        <function-ref name="isOwner" scoped="" ref="0x410e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41b4ed38" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41b4ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41b4ef10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41bb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x41bb2a80" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x41bb2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41bb2c58"/>
        <function-ref name="sendDone" scoped="" ref="0x41bb2d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x41bb2e98" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41bb2e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x41bb10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x41bb2170" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x41bb2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41bb2348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b4e680" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41b4e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b4e858"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b4e938"/>
        <function-ref name="request" scoped="" ref="0x41b4ea18"/>
        <function-ref name="granted" scoped="" ref="0x41b4eaf8"/>
        <function-ref name="isOwner" scoped="" ref="0x41b4ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x41bb24a8" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x41bb24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x41bb2680"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x41bb2760"/>
        <function-ref name="splitRead" scoped="" ref="0x41bb2840"/>
        <function-ref name="write" scoped="" ref="0x41bb2920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x41103100" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41103100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411032d8"/>
        <function-ref name="configure" scoped="" ref="0x411033b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x41102238" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x41102238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41102410"/>
        <function-ref name="sendDone" scoped="" ref="0x411024f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x41100508" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41100508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x411006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x41103560" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x41103560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41103738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x41102a30" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x41102a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41102c08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41102ce8"/>
        <function-ref name="request" scoped="" ref="0x41102dc8"/>
        <function-ref name="granted" scoped="" ref="0x41102ea8"/>
        <function-ref name="isOwner" scoped="" ref="0x41100010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410cd610" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x410cd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410cd7e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410cd8c8"/>
        <function-ref name="request" scoped="" ref="0x410cd9a8"/>
        <function-ref name="granted" scoped="" ref="0x410cda88"/>
        <function-ref name="isOwner" scoped="" ref="0x410cdb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x41103908" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x41103908"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x41103ae0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x41103bc0"/>
        <function-ref name="splitRead" scoped="" ref="0x41103ca0"/>
        <function-ref name="write" scoped="" ref="0x41103d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x411009f0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x411009f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x41100bc8"/>
        <function-ref name="txDone" scoped="" ref="0x41100ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x4110a010" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x4110a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4110a1f8"/>
        <function-ref name="configure" scoped="" ref="0x4110a2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x4110ade0" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x4110ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41109010"/>
        <function-ref name="sendDone" scoped="" ref="0x411090f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x41109a68" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x41109a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x41109c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x4110a438" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x4110a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4110a610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x41109dd0" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x41109dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41108010"/>
        <function-ref name="enableUartRx" scoped="" ref="0x411080f0"/>
        <function-ref name="setUctl" scoped="" ref="0x411081d0"/>
        <function-ref name="enableUart" scoped="" ref="0x411082b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x41108390"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41108470"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x41108550"/>
        <function-ref name="getUtctl" scoped="" ref="0x41108630"/>
        <function-ref name="getUrctl" scoped="" ref="0x41108710"/>
        <function-ref name="resetUsart" scoped="" ref="0x411087f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x411088d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x411089b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x41108a90"/>
        <function-ref name="getUbr" scoped="" ref="0x41108bf0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41108cd0"/>
        <function-ref name="setUmctl" scoped="" ref="0x41108db0"/>
        <function-ref name="isUartRx" scoped="" ref="0x41108e90"/>
        <function-ref name="isUart" scoped="" ref="0x41107010"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411070f0"/>
        <function-ref name="isSpi" scoped="" ref="0x411071d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x411072b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41107390"/>
        <function-ref name="disableUartRx" scoped="" ref="0x41107470"/>
        <function-ref name="enableIntr" scoped="" ref="0x41107550"/>
        <function-ref name="getMode" scoped="" ref="0x41107630"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x41107810"/>
        <function-ref name="clrIntr" scoped="" ref="0x411078f0"/>
        <function-ref name="setUbr" scoped="" ref="0x411079d0"/>
        <function-ref name="tx" scoped="" ref="0x41107ab0"/>
        <function-ref name="getUctl" scoped="" ref="0x41107b90"/>
        <function-ref name="disableUart" scoped="" ref="0x41107c70"/>
        <function-ref name="enableSpi" scoped="" ref="0x41107d50"/>
        <function-ref name="setModeUart" scoped="" ref="0x41107e30"/>
        <function-ref name="setModeSpi" scoped="" ref="0x41107f10"/>
        <function-ref name="rx" scoped="" ref="0x41106010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x411060f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x411061d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x411062b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x41106390"/>
        <function-ref name="disableUartTx" scoped="" ref="0x41106470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41106a08" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x41106a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41106be0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41106cc0"/>
        <function-ref name="led1On" scoped="" ref="0x41106da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41106e80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41105010"/>
        <function-ref name="get" scoped="" ref="0x411050f0"/>
        <function-ref name="led1Off" scoped="" ref="0x411051d0"/>
        <function-ref name="led2On" scoped="" ref="0x41105550"/>
        <function-ref name="set" scoped="" ref="0x41105390"/>
        <function-ref name="led2Off" scoped="" ref="0x411052b0"/>
        <function-ref name="led0On" scoped="" ref="0x41105470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x41109308" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x41109308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411094f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411095d0"/>
        <function-ref name="request" scoped="" ref="0x411096b0"/>
        <function-ref name="granted" scoped="" ref="0x41109790"/>
        <function-ref name="isOwner" scoped="" ref="0x41109870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4110b868" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x4110b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4110ba50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4110bb30"/>
        <function-ref name="request" scoped="" ref="0x4110bc10"/>
        <function-ref name="granted" scoped="" ref="0x4110bcf0"/>
        <function-ref name="isOwner" scoped="" ref="0x4110bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x4110a770" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x4110a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x4110a948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x4110aa28"/>
        <function-ref name="splitRead" scoped="" ref="0x4110ab08"/>
        <function-ref name="write" scoped="" ref="0x4110abe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x411065f0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x411065f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x411067c8"/>
        <function-ref name="txDone" scoped="" ref="0x411068a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x411056d0" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x411056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411058a8"/>
        <function-ref name="runTask" scoped="" ref="0x41105988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41baeba8" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x41baeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41baed80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41baee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x41baa030" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x41baa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41baa208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41ba7df0" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x41ba7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41ba5010"/>
        <function-ref name="configure" scoped="" ref="0x41ba50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x41baa368" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x41baa368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x41baa540"/>
        <function-ref name="getStartByte" scoped="" ref="0x41baa620"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x41baa700"/>
        <function-ref name="setMasterMode" scoped="" ref="0x41baa7e0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x41baa8c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x41baa9a0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x41baaa80"/>
        <function-ref name="getStopBit" scoped="" ref="0x41baab60"/>
        <function-ref name="setClockSource" scoped="" ref="0x41baac40"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x41baad20"/>
        <function-ref name="getData" scoped="" ref="0x41baae00"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x41baaee0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x41ba9010"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x41ba9170"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x41ba9250"/>
        <function-ref name="getIV" scoped="" ref="0x41ba9330"/>
        <function-ref name="enableI2C" scoped="" ref="0x41ba9410"/>
        <function-ref name="setStartBit" scoped="" ref="0x41ba94f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x41ba95d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x41ba96b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x41ba9790"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x41ba9870"/>
        <function-ref name="isI2C" scoped="" ref="0x41ba9950"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x41ba9a30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x41ba9b10"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x41ba9cf0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x41ba9dd0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x41ba9eb0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x41ba8010"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x41ba80f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x41ba81d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x41ba82b0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x41ba8390"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x41ba8470"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x41ba8550"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x41ba8630"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x41ba8710"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x41ba87f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x41ba88d0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x41ba89b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x41ba8a90"/>
        <function-ref name="setWordMode" scoped="" ref="0x41ba8b70"/>
        <function-ref name="setData" scoped="" ref="0x41ba8c50"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x41ba8d30"/>
        <function-ref name="getClockSource" scoped="" ref="0x41ba8e10"/>
        <function-ref name="getWordMode" scoped="" ref="0x41ba8ef0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x41ba7010"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x41ba70f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x41ba71d0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x41ba74b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x41ba7590"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x41ba7670"/>
        <function-ref name="setStopBit" scoped="" ref="0x41ba7750"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x41ba7830"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x41ba7910"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x41ba79f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x41ba7ad0"/>
        <function-ref name="setStartByte" scoped="" ref="0x41ba7bb0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x41ba7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x41babbf0" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x41babbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x41babdc8"/>
        <function-ref name="txDone" scoped="" ref="0x41babea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bae4f0" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41bae4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bae6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bae7a8"/>
        <function-ref name="request" scoped="" ref="0x41bae888"/>
        <function-ref name="granted" scoped="" ref="0x41bae968"/>
        <function-ref name="isOwner" scoped="" ref="0x41baea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x41bad428" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x41bad428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41bad600"/>
        <function-ref name="enableUartRx" scoped="" ref="0x41bad6e0"/>
        <function-ref name="setUctl" scoped="" ref="0x41bad7c0"/>
        <function-ref name="enableUart" scoped="" ref="0x41bad8a0"/>
        <function-ref name="setUrctl" scoped="" ref="0x41bad980"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41bada60"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x41badb40"/>
        <function-ref name="getUtctl" scoped="" ref="0x41badc20"/>
        <function-ref name="getUrctl" scoped="" ref="0x41badd00"/>
        <function-ref name="resetUsart" scoped="" ref="0x41badde0"/>
        <function-ref name="getUmctl" scoped="" ref="0x41badec0"/>
        <function-ref name="disableIntr" scoped="" ref="0x41bac010"/>
        <function-ref name="setUtctl" scoped="" ref="0x41bac0f0"/>
        <function-ref name="getUbr" scoped="" ref="0x41bac250"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41bac330"/>
        <function-ref name="setUmctl" scoped="" ref="0x41bac410"/>
        <function-ref name="isUartRx" scoped="" ref="0x41bac4f0"/>
        <function-ref name="isUart" scoped="" ref="0x41bac5d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41bac6b0"/>
        <function-ref name="isSpi" scoped="" ref="0x41bac790"/>
        <function-ref name="enableUartTx" scoped="" ref="0x41bac870"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41bac950"/>
        <function-ref name="disableUartRx" scoped="" ref="0x41baca30"/>
        <function-ref name="enableIntr" scoped="" ref="0x41bacb10"/>
        <function-ref name="getMode" scoped="" ref="0x41bacbf0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x41bacdd0"/>
        <function-ref name="clrIntr" scoped="" ref="0x41baceb0"/>
        <function-ref name="setUbr" scoped="" ref="0x41bab010"/>
        <function-ref name="tx" scoped="" ref="0x41bab0f0"/>
        <function-ref name="getUctl" scoped="" ref="0x41bab1d0"/>
        <function-ref name="disableUart" scoped="" ref="0x41bab2b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x41bab390"/>
        <function-ref name="setModeUart" scoped="" ref="0x41bab470"/>
        <function-ref name="setModeSpi" scoped="" ref="0x41bab550"/>
        <function-ref name="rx" scoped="" ref="0x41bab630"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x41bab710"/>
        <function-ref name="isUartTx" scoped="" ref="0x41bab7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x41bab8d0"/>
        <function-ref name="disableSpi" scoped="" ref="0x41bab9b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x41baba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41bad010" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x41bad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41bad1e8"/>
        <function-ref name="userId" scoped="" ref="0x41bad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x41174bd8" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x41174bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41174eb0"/>
        <function-ref name="write" scoped="" ref="0x41173010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x41179190" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x41179190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41179368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x41176270" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x41176270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41176448"/>
        <function-ref name="write" scoped="" ref="0x41176528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x41173a00" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x41173a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41173bd8"/>
        <function-ref name="write" scoped="" ref="0x41173cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x4116e2b0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x4116e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116e488"/>
        <function-ref name="write" scoped="" ref="0x4116e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x41173e38" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x41173e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41172050"/>
        <function-ref name="write" scoped="" ref="0x41172130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x41168b20" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x41168b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41168cf8"/>
        <function-ref name="write" scoped="" ref="0x41168dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4116aa00" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x4116aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116abd8"/>
        <function-ref name="write" scoped="" ref="0x4116acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x41179b98" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x41179b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41179d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x4116c190" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x4116c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116c368"/>
        <function-ref name="write" scoped="" ref="0x4116c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4116a190" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4116a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116a368"/>
        <function-ref name="write" scoped="" ref="0x4116a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x41176ae0" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x41176ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41176cb8"/>
        <function-ref name="write" scoped="" ref="0x41176d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x41174368" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x41174368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41174540"/>
        <function-ref name="write" scoped="" ref="0x41174620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x411705c8" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x411705c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411707a0"/>
        <function-ref name="write" scoped="" ref="0x41170880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x41171880" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x41171880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41171a58"/>
        <function-ref name="write" scoped="" ref="0x41171b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x411722b0" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x411722b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41172488"/>
        <function-ref name="write" scoped="" ref="0x41172568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4117a550" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x4117a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4117a728"/>
        <function-ref name="abortRelease" scoped="" ref="0x4117a808"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4117a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x41178910" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x41178910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41178ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x41178c68" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x41178c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41178ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x4116cc00" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x4116cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116cdd8"/>
        <function-ref name="write" scoped="" ref="0x4116ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x41177080" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x41177080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41177258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4116a5c8" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4116a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116a7a0"/>
        <function-ref name="write" scoped="" ref="0x4116a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x41178260" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x41178260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41178438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x4116dcb8" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x4116dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116de90"/>
        <function-ref name="write" scoped="" ref="0x4116c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x41176f18" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x41176f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41174108"/>
        <function-ref name="write" scoped="" ref="0x411741e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x411766a8" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x411766a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41176880"/>
        <function-ref name="write" scoped="" ref="0x41176960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x4117adc0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x4117adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41179010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x4116d448" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x4116d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116d620"/>
        <function-ref name="write" scoped="" ref="0x4116d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x4116e6e8" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x4116e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116e8c0"/>
        <function-ref name="write" scoped="" ref="0x4116e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x4116d880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x4116d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116da58"/>
        <function-ref name="write" scoped="" ref="0x4116db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x411686e8" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x411686e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411688c0"/>
        <function-ref name="write" scoped="" ref="0x411689a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x4116ae38" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x4116ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41168050"/>
        <function-ref name="write" scoped="" ref="0x41168130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x41171cb8" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x41171cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41171e90"/>
        <function-ref name="write" scoped="" ref="0x41170010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x4116eb20" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x4116eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116ecf8"/>
        <function-ref name="write" scoped="" ref="0x4116edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4116bcf8" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x4116bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116bed0"/>
        <function-ref name="write" scoped="" ref="0x4116a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x41172b20" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x41172b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41172cf8"/>
        <function-ref name="write" scoped="" ref="0x41172dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x41167010" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x41167010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x411671e8"/>
        <function-ref name="writeDone" scoped="" ref="0x411672c8"/>
        <function-ref name="write" scoped="" ref="0x411673a8"/>
        <function-ref name="beginRead" scoped="" ref="0x41167488"/>
        <function-ref name="readDone" scoped="" ref="0x41167568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x4117aa68" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x4117aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4117ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x41177de0" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x41177de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41176010"/>
        <function-ref name="write" scoped="" ref="0x411760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x411747a0" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x411747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41174978"/>
        <function-ref name="write" scoped="" ref="0x41174a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x41170a00" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x41170a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41170bd8"/>
        <function-ref name="write" scoped="" ref="0x41170cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x411726e8" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x411726e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411728c0"/>
        <function-ref name="write" scoped="" ref="0x411729a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x41170e38" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x41170e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116e050"/>
        <function-ref name="write" scoped="" ref="0x4116e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x41173190" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x41173190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41173368"/>
        <function-ref name="write" scoped="" ref="0x41173448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x411794e8" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x411794e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411796c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x411735c8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x411735c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411737a0"/>
        <function-ref name="write" scoped="" ref="0x41173880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4117be88" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x4117be88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4117a070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4117a150"/>
        <function-ref name="request" scoped="" ref="0x4117a230"/>
        <function-ref name="granted" scoped="" ref="0x4117a310"/>
        <function-ref name="isOwner" scoped="" ref="0x4117a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x411773d8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x411773d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411775b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x41177a88" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x41177a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41177c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4116b8c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x4116b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116ba98"/>
        <function-ref name="write" scoped="" ref="0x4116bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4116b488" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x4116b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116b660"/>
        <function-ref name="write" scoped="" ref="0x4116b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x411785b8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x411785b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41178790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x4116b050" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4116b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116b228"/>
        <function-ref name="write" scoped="" ref="0x4116b308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x411682b0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x411682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41168488"/>
        <function-ref name="write" scoped="" ref="0x41168568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x41170190" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x41170190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41170368"/>
        <function-ref name="write" scoped="" ref="0x41170448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x4116d010" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x4116d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116d1e8"/>
        <function-ref name="write" scoped="" ref="0x4116d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x41179840" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x41179840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41179a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x41179ef0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x41179ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411780e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x41171010" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x41171010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411711e8"/>
        <function-ref name="write" scoped="" ref="0x411712c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x41177730" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x41177730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41177908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x41171448" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x41171448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41171620"/>
        <function-ref name="write" scoped="" ref="0x41171700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x4116c5c8" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x4116c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4116c9a0"/>
        <function-ref name="write" scoped="" ref="0x4116ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x411676e8" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x411676e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x411678c0"/>
        <function-ref name="writeDone" scoped="" ref="0x411679a0"/>
        <function-ref name="write" scoped="" ref="0x41167a80"/>
        <function-ref name="beginRead" scoped="" ref="0x41167b60"/>
        <function-ref name="readDone" scoped="" ref="0x41167c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4119a880" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x4119a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119ab58"/>
        <function-ref name="write" scoped="" ref="0x4119ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x41162c28" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x41162c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41162e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4119ce50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x4119ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119b050"/>
        <function-ref name="write" scoped="" ref="0x4119b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x411996a8" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x411996a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41199880"/>
        <function-ref name="write" scoped="" ref="0x41199960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x41195e38" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x41195e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41194050"/>
        <function-ref name="write" scoped="" ref="0x41194130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x41199ae0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x41199ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41199cb8"/>
        <function-ref name="write" scoped="" ref="0x41199d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x4118e6e8" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x4118e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118e8c0"/>
        <function-ref name="write" scoped="" ref="0x4118e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4118f5c8" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x4118f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118f7a0"/>
        <function-ref name="write" scoped="" ref="0x4118f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x411616c0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x411616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41161898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x41193cb8" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x41193cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41193e90"/>
        <function-ref name="write" scoped="" ref="0x41192010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x41191cf8" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41191cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41191ed0"/>
        <function-ref name="write" scoped="" ref="0x4118f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4119b6e8" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x4119b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119b8c0"/>
        <function-ref name="write" scoped="" ref="0x4119b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4119a010" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x4119a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119a1e8"/>
        <function-ref name="write" scoped="" ref="0x4119a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x41195190" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x41195190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41195368"/>
        <function-ref name="write" scoped="" ref="0x41195448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x41196468" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x41196468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41196640"/>
        <function-ref name="write" scoped="" ref="0x41196720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x41199f18" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x41199f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41198108"/>
        <function-ref name="write" scoped="" ref="0x411981e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x41162060" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x41162060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x41162238"/>
        <function-ref name="abortRelease" scoped="" ref="0x41162318"/>
        <function-ref name="attemptRelease" scoped="" ref="0x411623f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x4119e4e8" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x4119e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x4119e840" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x4119e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x411927c8" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x411927c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411929a0"/>
        <function-ref name="write" scoped="" ref="0x41192a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x4119ec18" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x4119ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4118f190" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4118f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118f368"/>
        <function-ref name="write" scoped="" ref="0x4118f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x41161d70" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x41161d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x41193880" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x41193880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41193a58"/>
        <function-ref name="write" scoped="" ref="0x41193b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4119bb20" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x4119bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119bcf8"/>
        <function-ref name="write" scoped="" ref="0x4119bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4119b2b0" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x4119b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119b488"/>
        <function-ref name="write" scoped="" ref="0x4119b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x411628d0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x411628d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41162aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x41193010" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x41193010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411931e8"/>
        <function-ref name="write" scoped="" ref="0x411932c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x411942b0" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x411942b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41194488"/>
        <function-ref name="write" scoped="" ref="0x41194568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x41193448" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x41193448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41193620"/>
        <function-ref name="write" scoped="" ref="0x41193700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x4118e2b0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x4118e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118e488"/>
        <function-ref name="write" scoped="" ref="0x4118e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x4118fa00" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x4118fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118fbd8"/>
        <function-ref name="write" scoped="" ref="0x4118fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x411968a0" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x411968a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41196a78"/>
        <function-ref name="write" scoped="" ref="0x41196b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x411946e8" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x411946e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411948c0"/>
        <function-ref name="write" scoped="" ref="0x411949a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x411918c0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x411918c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41191a98"/>
        <function-ref name="write" scoped="" ref="0x41191b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x411987a0" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x411987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41198978"/>
        <function-ref name="write" scoped="" ref="0x41198a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4118eb20" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x4118eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4118ecf8"/>
        <function-ref name="writeDone" scoped="" ref="0x4118edd8"/>
        <function-ref name="write" scoped="" ref="0x4118eeb8"/>
        <function-ref name="beginRead" scoped="" ref="0x4118d010"/>
        <function-ref name="readDone" scoped="" ref="0x4118d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x41162578" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x41162578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41162750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x4119ca18" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x4119ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119cbf0"/>
        <function-ref name="write" scoped="" ref="0x4119ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4119a448" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x4119a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4119a620"/>
        <function-ref name="write" scoped="" ref="0x4119a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x411955c8" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x411955c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411957a0"/>
        <function-ref name="write" scoped="" ref="0x41195880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x41198368" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x41198368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41198540"/>
        <function-ref name="write" scoped="" ref="0x41198620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x41195a00" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x41195a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41195bd8"/>
        <function-ref name="write" scoped="" ref="0x41195cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4119adb8" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x4119adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41199010"/>
        <function-ref name="write" scoped="" ref="0x411990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x41161010" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x41161010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x411611e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x41199270" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x41199270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41199448"/>
        <function-ref name="write" scoped="" ref="0x41199528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41163980" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41163980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41163b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41163c38"/>
        <function-ref name="request" scoped="" ref="0x41163d18"/>
        <function-ref name="granted" scoped="" ref="0x41163df8"/>
        <function-ref name="isOwner" scoped="" ref="0x41163ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4119c010" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x4119c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4119c6c0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x4119c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x41191488" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x41191488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41191660"/>
        <function-ref name="write" scoped="" ref="0x41191740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x41191050" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x41191050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41191228"/>
        <function-ref name="write" scoped="" ref="0x41191308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x4119e190" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x4119e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x41192c00" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41192c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41192dd8"/>
        <function-ref name="write" scoped="" ref="0x41192eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4118fe38" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x4118fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118e050"/>
        <function-ref name="write" scoped="" ref="0x4118e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x41196cd8" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x41196cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41196eb0"/>
        <function-ref name="write" scoped="" ref="0x41195010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x41194b20" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x41194b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41194cf8"/>
        <function-ref name="write" scoped="" ref="0x41194dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x41161368" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x41161368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41161540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x41161a18" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x41161a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41161bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x41198bd8" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x41198bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41198db0"/>
        <function-ref name="write" scoped="" ref="0x41198e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x4119c368" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x4119c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4119c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x41196030" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x41196030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41196208"/>
        <function-ref name="write" scoped="" ref="0x411962e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x41192190" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x41192190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41192568"/>
        <function-ref name="write" scoped="" ref="0x41192648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4118d270" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x4118d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4118d448"/>
        <function-ref name="writeDone" scoped="" ref="0x4118d528"/>
        <function-ref name="write" scoped="" ref="0x4118d608"/>
        <function-ref name="beginRead" scoped="" ref="0x4118d6e8"/>
        <function-ref name="readDone" scoped="" ref="0x4118d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x41189718" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41189718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x411898f0"/>
        <function-ref name="changed" scoped="" ref="0x411899d0"/>
        <function-ref name="amGroup" scoped="" ref="0x41189ab0"/>
        <function-ref name="setAddress" scoped="" ref="0x41189b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411b10e0" loc="35:../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x411b10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411b12b8"/>
        <function-ref name="stopDone" scoped="" ref="0x411b1398"/>
        <function-ref name="start" scoped="" ref="0x411b1478"/>
        <function-ref name="stop" scoped="" ref="0x411b1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x411aeb50" loc="37:../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x411aeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x411b5508"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x411b5910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411b0480"/>
        <function-ref name="get" scoped="" ref="0x411b01e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x411b16e0" loc="36:../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x411b16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411b18b8"/>
        <function-ref name="recv" scoped="" ref="0x411b1998"/>
        <function-ref name="sendDone" scoped="" ref="0x411b1a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411b0e18" loc="46:../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x411b0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x411ac1a0" loc="47:../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x411ac1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411ac378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411ac458"/>
        <function-ref name="led1On" scoped="" ref="0x411ac538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411ac618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411ac6f8"/>
        <function-ref name="get" scoped="" ref="0x411ac7d8"/>
        <function-ref name="led1Off" scoped="" ref="0x411ac8b8"/>
        <function-ref name="led2Off" scoped="" ref="0x411acc38"/>
        <function-ref name="set" scoped="" ref="0x411ac998"/>
        <function-ref name="led0On" scoped="" ref="0x411aca78"/>
        <function-ref name="led2On" scoped="" ref="0x411acb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411db938" loc="43:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x411db938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411dbb10"/>
        <function-ref name="stopDone" scoped="" ref="0x411dbbf0"/>
        <function-ref name="start" scoped="" ref="0x411dbcd0"/>
        <function-ref name="stop" scoped="" ref="0x411dbdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x411d6ea8" loc="68:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x411d6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411fc010"/>
        <function-ref name="maxSize" scoped="" ref="0x411fd998"/>
        <function-ref name="empty" scoped="" ref="0x411fd4e8"/>
        <function-ref name="put" scoped="" ref="0x411fdbf0"/>
        <function-ref name="size" scoped="" ref="0x411fd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x411d9bd0" loc="49:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x411d9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x411b5508"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x411b5910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411d84b8"/>
        <function-ref name="get" scoped="" ref="0x411d8218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x411d8838" loc="53:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x411d8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411d8a10"/>
        <function-ref name="stopDone" scoped="" ref="0x411d8af0"/>
        <function-ref name="start" scoped="" ref="0x411d8bd0"/>
        <function-ref name="stop" scoped="" ref="0x411d8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x411d9540" loc="47:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x411d9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411d9718"/>
        <function-ref name="recv" scoped="" ref="0x411d97f8"/>
        <function-ref name="sendDone" scoped="" ref="0x411d98d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x411c89b0" loc="62:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x411c89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x411c8b88"/>
        <function-ref name="readLqi" scoped="" ref="0x411c8c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x411fe068" loc="64:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x411fe068"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x411fe240"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x411fe320"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x411fe400"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x411fe4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411d91d0" loc="44:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x411d91d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403a82d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403a82d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411d93a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x411f5f20" loc="70:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x411f5f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x411f9c68"/>
        <function-ref name="enqueue" scoped="" ref="0x411f8380"/>
        <function-ref name="element" scoped="" ref="0x411f86d0"/>
        <function-ref name="maxSize" scoped="" ref="0x411f9a10"/>
        <function-ref name="dequeue" scoped="" ref="0x411f8010"/>
        <function-ref name="empty" scoped="" ref="0x411f9560"/>
        <function-ref name="size" scoped="" ref="0x411f97b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x411f8bc8" loc="73:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x411f8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411f16d8"/>
        <function-ref name="fired" scoped="" ref="0x411f2970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411f1098"/>
        <function-ref name="isOneShot" scoped="" ref="0x411f2e20"/>
        <function-ref name="getdt" scoped="" ref="0x411f1b88"/>
        <function-ref name="gett0" scoped="" ref="0x411f1930"/>
        <function-ref name="isRunning" scoped="" ref="0x411f2bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411f2218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411f13b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x411f2498"/>
        <function-ref name="stop" scoped="" ref="0x411f2718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41365610" loc="430:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x41365610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413657e8"/>
        <function-ref name="runTask" scoped="" ref="0x413658c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x411c76c8" loc="60:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x411c76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x411c78a0"/>
        <function-ref name="matchContext" scoped="" ref="0x411c7980"/>
        <function-ref name="getContext" scoped="" ref="0x411c7a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x411fe7c8" loc="67:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x411fe7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
            <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411d6930"/>
        <function-ref name="maxSize" scoped="" ref="0x411d6348"/>
        <function-ref name="empty" scoped="" ref="0x411fee70"/>
        <function-ref name="put" scoped="" ref="0x411d65a0"/>
        <function-ref name="size" scoped="" ref="0x411d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411f1dc8" loc="75:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x411f1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411f0010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411f00f0"/>
        <function-ref name="led1On" scoped="" ref="0x411f01d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411f02b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411f0390"/>
        <function-ref name="get" scoped="" ref="0x411f0470"/>
        <function-ref name="led1Off" scoped="" ref="0x411f0550"/>
        <function-ref name="led2Off" scoped="" ref="0x411f08d0"/>
        <function-ref name="set" scoped="" ref="0x411f0630"/>
        <function-ref name="led0On" scoped="" ref="0x411f0710"/>
        <function-ref name="led2On" scoped="" ref="0x411f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x411cb108" loc="56:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x411cb108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411cb2e0"/>
        <function-ref name="getPayload" scoped="" ref="0x411cb3c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411cb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x411cb580"/>
        <function-ref name="sendDone" scoped="" ref="0x411cb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x411d2b88" loc="55:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x411d2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411d2d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x411d2e40"/>
        <function-ref name="getPayload" scoped="" ref="0x411d2f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411d7018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411d70f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x411c11b8" loc="63:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x411c11b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x411c1390"/>
        <function-ref name="setRetries" scoped="" ref="0x411c1470"/>
        <function-ref name="getRetries" scoped="" ref="0x411c1550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x411c1630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x411c1710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x411fc598" loc="69:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x411fc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411fa670"/>
        <function-ref name="maxSize" scoped="" ref="0x411fa088"/>
        <function-ref name="empty" scoped="" ref="0x411fcbc0"/>
        <function-ref name="put" scoped="" ref="0x411fa2e0"/>
        <function-ref name="size" scoped="" ref="0x411fce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x411c72f0" loc="57:../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x411c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411c74c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4135d360" loc="19:../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x4135d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4135d538"/>
        <function-ref name="stopDone" scoped="" ref="0x4135d618"/>
        <function-ref name="start" scoped="" ref="0x4135d6f8"/>
        <function-ref name="stop" scoped="" ref="0x4135d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x4138d968" loc="23:../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x4138d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4138db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x4135d9e0" loc="21:../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x4135d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4135dbb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4135dc98"/>
        <function-ref name="getPayload" scoped="" ref="0x4135dd78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4135de58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4138d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4138d1f8" loc="22:../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x4138d1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4138d3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4138d4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4138d590"/>
        <function-ref name="cancel" scoped="" ref="0x4138d670"/>
        <function-ref name="sendDone" scoped="" ref="0x4138d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4138a3c0" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x4138a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4138a598"/>
        <function-ref name="stopDone" scoped="" ref="0x4138a678"/>
        <function-ref name="start" scoped="" ref="0x4138a758"/>
        <function-ref name="stop" scoped="" ref="0x4138a838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4137e500" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4137e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4137e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4137eee8" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x4137eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x413860e0"/>
        <function-ref name="setRetries" scoped="" ref="0x413861c0"/>
        <function-ref name="getRetries" scoped="" ref="0x413862a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x41386380"/>
        <function-ref name="wasDelivered" scoped="" ref="0x41386460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x413813b0" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x413813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x41381588"/>
        <function-ref name="setNetwork" scoped="" ref="0x41381668"/>
        <function-ref name="getRssi" scoped="" ref="0x41381748"/>
        <function-ref name="getNetwork" scoped="" ref="0x41381828"/>
        <function-ref name="getPower" scoped="" ref="0x41381908"/>
        <function-ref name="getLqi" scoped="" ref="0x413819e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x41388760" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x41388760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41388938"/>
        <function-ref name="getPayload" scoped="" ref="0x41388a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41388af8"/>
        <function-ref name="cancel" scoped="" ref="0x41388bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41388cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4137e8c8" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x4137e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4137eaa0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4137eb80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4137ec60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4137ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x41389c08" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x41389c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41389de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4137c0f0" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4137c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4137c2c8"/>
        <function-ref name="noAck" scoped="" ref="0x4137c3a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4137c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4138acf0" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x4138acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4138aec8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41389010"/>
        <function-ref name="request" scoped="" ref="0x413890f0"/>
        <function-ref name="granted" scoped="" ref="0x413891d0"/>
        <function-ref name="isOwner" scoped="" ref="0x413892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41389498" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x41389498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41389670"/>
        <function-ref name="getPayload" scoped="" ref="0x41389750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41389830"/>
        <function-ref name="cancel" scoped="" ref="0x41389910"/>
        <function-ref name="sendDone" scoped="" ref="0x413899f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x41388010" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x41388010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413881e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x413882c8"/>
        <function-ref name="getPayload" scoped="" ref="0x413883a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41388488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41388568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x41388ee8" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x41388ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413870e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41386c20" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x41386c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41386df8"/>
        <function-ref name="stopDone" scoped="" ref="0x41386ed8"/>
        <function-ref name="start" scoped="" ref="0x4137a010"/>
        <function-ref name="stop" scoped="" ref="0x4137a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x41373270" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x41373270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x41373448"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x41373528"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x41373608"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x413736e8"/>
        <function-ref name="setCca" scoped="" ref="0x413737c8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x413738a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4137a280" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4137a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4137a458"/>
        <function-ref name="getPayload" scoped="" ref="0x4137a538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4137a618"/>
        <function-ref name="cancel" scoped="" ref="0x4137a6f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4137a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4137a980" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x4137a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4137ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41372218" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x41372218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413723f0"/>
        <function-ref name="stopDone" scoped="" ref="0x413724d0"/>
        <function-ref name="start" scoped="" ref="0x413725b0"/>
        <function-ref name="stop" scoped="" ref="0x41372690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x41371010" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x41371010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x413711e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x413712c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x413713a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x41371488"/>
        <function-ref name="setCca" scoped="" ref="0x41371568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x41371648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x413b5800" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x413b5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x413b59d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x413b5ab8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x413b5b98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x413b5c78"/>
        <function-ref name="setCca" scoped="" ref="0x413b5d58"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x413b5e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x413afe18" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x413afe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x413ae010"/>
        <function-ref name="setNetwork" scoped="" ref="0x413ae0f0"/>
        <function-ref name="getRssi" scoped="" ref="0x413ae1d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x413ae2b0"/>
        <function-ref name="getPower" scoped="" ref="0x413ae390"/>
        <function-ref name="getLqi" scoped="" ref="0x413ae470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x413b5040" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x413b5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413b5218"/>
        <function-ref name="cancel" scoped="" ref="0x413b52f8"/>
        <function-ref name="modify" scoped="" ref="0x413b53d8"/>
        <function-ref name="sendDone" scoped="" ref="0x413b54b8"/>
        <function-ref name="resend" scoped="" ref="0x413b5598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41372820" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x41372820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413729f8"/>
        <function-ref name="getPayload" scoped="" ref="0x41372ad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41372bb8"/>
        <function-ref name="cancel" scoped="" ref="0x41372c98"/>
        <function-ref name="sendDone" scoped="" ref="0x41372d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x413b4c98" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x413b4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x413b4e70"/>
        <function-ref name="rand32" scoped="" ref="0x413af010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x413b6980" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x413b6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b6b58"/>
        <function-ref name="stop" scoped="" ref="0x413b6c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x413a95b0" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x413a95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x413a9788"/>
        <function-ref name="getHeader" scoped="" ref="0x413a9868"/>
        <function-ref name="getMetadata" scoped="" ref="0x413a9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x41371f28" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x41371f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x413b6110"/>
        <function-ref name="rfOff" scoped="" ref="0x413b61f0"/>
        <function-ref name="rxOn" scoped="" ref="0x413b62d0"/>
        <function-ref name="startVReg" scoped="" ref="0x413b63b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x413b6490"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x413b6570"/>
        <function-ref name="stopOscillator" scoped="" ref="0x413b6650"/>
        <function-ref name="startVRegDone" scoped="" ref="0x413b6730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413af1a0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x413af1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413af378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413af458"/>
        <function-ref name="led1On" scoped="" ref="0x413af538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413af618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413af6f8"/>
        <function-ref name="get" scoped="" ref="0x413af7d8"/>
        <function-ref name="led1Off" scoped="" ref="0x413af8b8"/>
        <function-ref name="led2Off" scoped="" ref="0x413afc38"/>
        <function-ref name="set" scoped="" ref="0x413af998"/>
        <function-ref name="led0On" scoped="" ref="0x413afa78"/>
        <function-ref name="led2On" scoped="" ref="0x413afb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41371800" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41371800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413719d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41371ab8"/>
        <function-ref name="request" scoped="" ref="0x41371b98"/>
        <function-ref name="granted" scoped="" ref="0x41371c78"/>
        <function-ref name="isOwner" scoped="" ref="0x41371d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x413a9bb0" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x413a9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x413a9e08"/>
        <function-ref name="toIdle" scoped="" ref="0x413a9ee8"/>
        <function-ref name="isState" scoped="" ref="0x413ad010"/>
        <function-ref name="isIdle" scoped="" ref="0x413ad0f0"/>
        <function-ref name="requestState" scoped="" ref="0x413ad1d0"/>
        <function-ref name="forceState" scoped="" ref="0x413ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x413a8da8" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x413a8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413a6010"/>
        <function-ref name="runTask" scoped="" ref="0x413a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x413a8598" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x413a8598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413a8770"/>
        <function-ref name="runTask" scoped="" ref="0x413a8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x413accb8" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x413accb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413ace90"/>
        <function-ref name="runTask" scoped="" ref="0x413a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x413c11d0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x413c11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x413c13a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x413c1488"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x413c1568"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x413c1648"/>
        <function-ref name="setCca" scoped="" ref="0x413c1728"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x413c1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x413be2a0" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x413be2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x413be478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x413c5a60" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x413c5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c5c38"/>
        <function-ref name="cancel" scoped="" ref="0x413c5d18"/>
        <function-ref name="modify" scoped="" ref="0x413c5df8"/>
        <function-ref name="sendDone" scoped="" ref="0x413c5ed8"/>
        <function-ref name="resend" scoped="" ref="0x413c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413c55d8" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x413c55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413c57b0"/>
        <function-ref name="stop" scoped="" ref="0x413c5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x413be708" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x413be708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x413be8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x413b9b18" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x413b9b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x413b9cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x413b9dd0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x413b9eb0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x413b8010"/>
        <function-ref name="setCca" scoped="" ref="0x413b80f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x413b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x413f7b78" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x413f7b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x413fb6b8"/>
        <function-ref name="clear" scoped="" ref="0x413fba68"/>
        <function-ref name="isValid" scoped="" ref="0x413fb308"/>
        <function-ref name="set" scoped="" ref="0x413fbe18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x413ec6c0" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x413ec6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ec898"/>
        <function-ref name="write" scoped="" ref="0x413ec978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x413ecb88" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x413ecb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ecd60"/>
        <function-ref name="write" scoped="" ref="0x413ece40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x413b8490" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x413b8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x413b8668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x413eeeb0" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x413eeeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x413ed0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x413f5158" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x413f5158"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x413f5330"/>
        <function-ref name="disable" scoped="" ref="0x413f5410"/>
        <function-ref name="captured" scoped="" ref="0x413f54f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x413f55d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x413b8ee0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x413b8ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413fe3e8"/>
        <function-ref name="fired" scoped="" ref="0x413b7b98"/>
        <function-ref name="startAt" scoped="" ref="0x413fe0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x413b7e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x413fe660"/>
        <function-ref name="start" scoped="" ref="0x413b7680"/>
        <function-ref name="stop" scoped="" ref="0x413b7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x413fe910" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x413fe910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x413feae8"/>
        <function-ref name="setNetwork" scoped="" ref="0x413febc8"/>
        <function-ref name="getRssi" scoped="" ref="0x413feca8"/>
        <function-ref name="getNetwork" scoped="" ref="0x413fed88"/>
        <function-ref name="getPower" scoped="" ref="0x413fee68"/>
        <function-ref name="getLqi" scoped="" ref="0x413fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x413efc68" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x413efc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413efe40"/>
        <function-ref name="write" scoped="" ref="0x413eff20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x413ee188" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x413ee188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ee360"/>
        <function-ref name="write" scoped="" ref="0x413ee440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x413e62b0" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x413e62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413e6488"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x413e6568"/>
        <function-ref name="sfd" scoped="" ref="0x413e6648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x413b93e0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x413b93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413b95b8"/>
        <function-ref name="cancel" scoped="" ref="0x413b9698"/>
        <function-ref name="modify" scoped="" ref="0x413b9778"/>
        <function-ref name="sendDone" scoped="" ref="0x413b9858"/>
        <function-ref name="resend" scoped="" ref="0x413b9938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x413f2ee8" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x413f2ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x413ef0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x413ef1c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x413ef2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x413ed318" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x413ed318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x413ed4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x413f42f0" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x413f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f44c8"/>
        <function-ref name="isInput" scoped="" ref="0x413f45a8"/>
        <function-ref name="toggle" scoped="" ref="0x413f4688"/>
        <function-ref name="isOutput" scoped="" ref="0x413f4768"/>
        <function-ref name="get" scoped="" ref="0x413f4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f4928"/>
        <function-ref name="set" scoped="" ref="0x413f4a08"/>
        <function-ref name="clr" scoped="" ref="0x413f4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413bbb28" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x413bbb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413bbd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x413fd218" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x413fd218"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x413fd3f0"/>
        <function-ref name="getHeader" scoped="" ref="0x413fd4d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x413fd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x413f0a38" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x413f0a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413f0c10"/>
        <function-ref name="isSet" scoped="" ref="0x413f0cf0"/>
        <function-ref name="cancel" scoped="" ref="0x413f0dd0"/>
        <function-ref name="set" scoped="" ref="0x413f0eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x413ed758" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x413ed758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413eda30"/>
        <function-ref name="write" scoped="" ref="0x413edb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x413f2798" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x413f2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413f2970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413f2a50"/>
        <function-ref name="request" scoped="" ref="0x413f2b30"/>
        <function-ref name="granted" scoped="" ref="0x413f2c10"/>
        <function-ref name="isOwner" scoped="" ref="0x413f2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x413f57d0" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x413f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f5a28"/>
        <function-ref name="isInput" scoped="" ref="0x413f5b08"/>
        <function-ref name="toggle" scoped="" ref="0x413f5be8"/>
        <function-ref name="isOutput" scoped="" ref="0x413f5cc8"/>
        <function-ref name="get" scoped="" ref="0x413f5da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f5e88"/>
        <function-ref name="set" scoped="" ref="0x413f4010"/>
        <function-ref name="clr" scoped="" ref="0x413f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x413eb090" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x413eb090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413eb268"/>
        <function-ref name="write" scoped="" ref="0x413eb348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x413eb570" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x413eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413eb748"/>
        <function-ref name="write" scoped="" ref="0x413eb828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x413ee670" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x413ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x413ee848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x413f4ce8" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x413f4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413f4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x413f2010"/>
        <function-ref name="toggle" scoped="" ref="0x413f20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x413f21d0"/>
        <function-ref name="get" scoped="" ref="0x413f22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413f2390"/>
        <function-ref name="set" scoped="" ref="0x413f2470"/>
        <function-ref name="clr" scoped="" ref="0x413f2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413e67d8" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x413e67d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413e69b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413e6a90"/>
        <function-ref name="led1On" scoped="" ref="0x413e6b70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413e6c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413e6d30"/>
        <function-ref name="get" scoped="" ref="0x413e6e10"/>
        <function-ref name="led1Off" scoped="" ref="0x413e6ef0"/>
        <function-ref name="led2Off" scoped="" ref="0x413e92b0"/>
        <function-ref name="set" scoped="" ref="0x413e9010"/>
        <function-ref name="led0On" scoped="" ref="0x413e90f0"/>
        <function-ref name="led2On" scoped="" ref="0x413e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x413ec1a0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x413ec1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ec378"/>
        <function-ref name="write" scoped="" ref="0x413ec458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413bbec8" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x413bbec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b90c0"/>
        <function-ref name="stop" scoped="" ref="0x413b91a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x413ef4c8" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x413ef4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x413ef6a0"/>
        <function-ref name="writeDone" scoped="" ref="0x413ef780"/>
        <function-ref name="write" scoped="" ref="0x413ef860"/>
        <function-ref name="beginRead" scoped="" ref="0x413ef940"/>
        <function-ref name="readDone" scoped="" ref="0x413efa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x413eea80" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x413eea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x413eec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x413edd50" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x413edd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x413edf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x413b8918" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x413b8918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x413b8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4146bbd8" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x4146bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146beb0"/>
        <function-ref name="write" scoped="" ref="0x4146a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x41426190" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x41426190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41426368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4146c270" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x4146c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146c448"/>
        <function-ref name="write" scoped="" ref="0x4146c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4146aa00" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x4146aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146abd8"/>
        <function-ref name="write" scoped="" ref="0x4146acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x414652b0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x414652b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41465488"/>
        <function-ref name="write" scoped="" ref="0x41465568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4146ae38" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x4146ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41469050"/>
        <function-ref name="write" scoped="" ref="0x41469130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x4145fb20" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x4145fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4145fcf8"/>
        <function-ref name="write" scoped="" ref="0x4145fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x41460a00" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x41460a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41460bd8"/>
        <function-ref name="write" scoped="" ref="0x41460cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x41426b98" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x41426b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41426d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x41463190" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x41463190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41463368"/>
        <function-ref name="write" scoped="" ref="0x41463448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x41460190" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x41460190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41460368"/>
        <function-ref name="write" scoped="" ref="0x41460448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4146cae0" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x4146cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146ccb8"/>
        <function-ref name="write" scoped="" ref="0x4146cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4146b368" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x4146b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146b540"/>
        <function-ref name="write" scoped="" ref="0x4146b620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x414665c8" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x414665c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414667a0"/>
        <function-ref name="write" scoped="" ref="0x41466880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x41468880" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x41468880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41468a58"/>
        <function-ref name="write" scoped="" ref="0x41468b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x414692b0" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x414692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41469488"/>
        <function-ref name="write" scoped="" ref="0x41469568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x41427530" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x41427530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x41427708"/>
        <function-ref name="abortRelease" scoped="" ref="0x414277e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x414278c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x41425910" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x41425910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41425ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x41425c68" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x41425c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41425ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x41463c00" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x41463c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41463dd8"/>
        <function-ref name="write" scoped="" ref="0x41463eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x41424080" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x41424080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41424258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x414605c8" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x414605c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414607a0"/>
        <function-ref name="write" scoped="" ref="0x41460880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x41425260" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x41425260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41425438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x41464cb8" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x41464cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41464e90"/>
        <function-ref name="write" scoped="" ref="0x41463010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4146cf18" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x4146cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146b108"/>
        <function-ref name="write" scoped="" ref="0x4146b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4146c6a8" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x4146c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146c880"/>
        <function-ref name="write" scoped="" ref="0x4146c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x41427da0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x41427da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41426010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x41464448" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x41464448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41464620"/>
        <function-ref name="write" scoped="" ref="0x41464700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x414656e8" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x414656e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414658c0"/>
        <function-ref name="write" scoped="" ref="0x414659a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x41464880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x41464880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41464a58"/>
        <function-ref name="write" scoped="" ref="0x41464b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x4145f6e8" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x4145f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4145f8c0"/>
        <function-ref name="write" scoped="" ref="0x4145f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x41460e38" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x41460e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4145f050"/>
        <function-ref name="write" scoped="" ref="0x4145f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x41468cb8" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x41468cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41468e90"/>
        <function-ref name="write" scoped="" ref="0x41466010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x41465b20" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x41465b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41465cf8"/>
        <function-ref name="write" scoped="" ref="0x41465dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x41462cf8" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x41462cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41462ed0"/>
        <function-ref name="write" scoped="" ref="0x41460010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x41469b20" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x41469b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41469cf8"/>
        <function-ref name="write" scoped="" ref="0x41469dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4145e010" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x4145e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4145e1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x4145e2c8"/>
        <function-ref name="write" scoped="" ref="0x4145e3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x4145e488"/>
        <function-ref name="readDone" scoped="" ref="0x4145e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x41427a48" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x41427a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41427c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x41424de0" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x41424de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146c010"/>
        <function-ref name="write" scoped="" ref="0x4146c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4146b7a0" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x4146b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146b978"/>
        <function-ref name="write" scoped="" ref="0x4146ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x41466a00" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x41466a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41466bd8"/>
        <function-ref name="write" scoped="" ref="0x41466cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x414696e8" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x414696e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414698c0"/>
        <function-ref name="write" scoped="" ref="0x414699a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x41466e38" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x41466e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41465050"/>
        <function-ref name="write" scoped="" ref="0x41465130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4146a190" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x4146a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146a368"/>
        <function-ref name="write" scoped="" ref="0x4146a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x414264e8" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x414264e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414266c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4146a5c8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x4146a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4146a7a0"/>
        <function-ref name="write" scoped="" ref="0x4146a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41428e60" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41428e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41427050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41427130"/>
        <function-ref name="request" scoped="" ref="0x41427210"/>
        <function-ref name="granted" scoped="" ref="0x414272f0"/>
        <function-ref name="isOwner" scoped="" ref="0x414273d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x414243d8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x414243d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x41424a88" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x41424a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41424c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x414628c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x414628c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41462a98"/>
        <function-ref name="write" scoped="" ref="0x41462b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x41462488" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x41462488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41462660"/>
        <function-ref name="write" scoped="" ref="0x41462740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x414255b8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x414255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41425790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x41462050" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x41462050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41462228"/>
        <function-ref name="write" scoped="" ref="0x41462308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4145f2b0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x4145f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4145f488"/>
        <function-ref name="write" scoped="" ref="0x4145f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x41466190" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x41466190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41466368"/>
        <function-ref name="write" scoped="" ref="0x41466448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x41464010" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x41464010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414641e8"/>
        <function-ref name="write" scoped="" ref="0x414642c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x41426840" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x41426840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41426a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x41426ef0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x41426ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414250e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x41468010" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x41468010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414681e8"/>
        <function-ref name="write" scoped="" ref="0x414682c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x41424730" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x41424730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41424908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x41468448" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x41468448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41468620"/>
        <function-ref name="write" scoped="" ref="0x41468700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x414635c8" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x414635c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414639a0"/>
        <function-ref name="write" scoped="" ref="0x41463a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4145e6e8" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x4145e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4145e8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x4145e9a0"/>
        <function-ref name="write" scoped="" ref="0x4145ea80"/>
        <function-ref name="beginRead" scoped="" ref="0x4145eb60"/>
        <function-ref name="readDone" scoped="" ref="0x4145ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x41455620" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x41455620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414557f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x414558d8"/>
        <function-ref name="sfd" scoped="" ref="0x414559b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41455b60" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x41455b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41455d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x41454010" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x41454010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x414541e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41455180" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x41455180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41455358"/>
        <function-ref name="stop" scoped="" ref="0x41455438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x41450cc8" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x41450cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41450ea0"/>
        <function-ref name="isInput" scoped="" ref="0x4144f010"/>
        <function-ref name="toggle" scoped="" ref="0x4144f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4144f1d0"/>
        <function-ref name="get" scoped="" ref="0x4144f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144f390"/>
        <function-ref name="set" scoped="" ref="0x4144f470"/>
        <function-ref name="clr" scoped="" ref="0x4144f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x4144a010" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x4144a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4144a1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4144a2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4144a3a8"/>
        <function-ref name="syncDone" scoped="" ref="0x4144a488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4144a568"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4144a648"/>
        <function-ref name="setChannel" scoped="" ref="0x4144a728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4144a808"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4144a8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4144a9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x4144aaa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4144ab88"/>
        <function-ref name="sync" scoped="" ref="0x4144ac68"/>
        <function-ref name="getChannel" scoped="" ref="0x4144adc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4144aea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x41488330" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x41488330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41488508"/>
        <function-ref name="runTask" scoped="" ref="0x414885e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x414492b0" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x414492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41449db0"/>
        <function-ref name="clear" scoped="" ref="0x41448170"/>
        <function-ref name="isValid" scoped="" ref="0x41449a00"/>
        <function-ref name="set" scoped="" ref="0x41448520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x4144f768" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x4144f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4144f940"/>
        <function-ref name="isInput" scoped="" ref="0x4144fa20"/>
        <function-ref name="toggle" scoped="" ref="0x4144fb00"/>
        <function-ref name="isOutput" scoped="" ref="0x4144fbe0"/>
        <function-ref name="get" scoped="" ref="0x4144fcc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4144fda0"/>
        <function-ref name="set" scoped="" ref="0x4144fe80"/>
        <function-ref name="clr" scoped="" ref="0x4144e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x41491398" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x41491398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41491570"/>
        <function-ref name="write" scoped="" ref="0x41491650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x41491860" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x41491860"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41491a38"/>
        <function-ref name="write" scoped="" ref="0x41491b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x41490238" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x41490238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41490410"/>
        <function-ref name="write" scoped="" ref="0x414904f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4144b1f0" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x4144b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4144b3c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x4144b4a8"/>
        <function-ref name="getRssi" scoped="" ref="0x4144b588"/>
        <function-ref name="getNetwork" scoped="" ref="0x4144b668"/>
        <function-ref name="getPower" scoped="" ref="0x4144b748"/>
        <function-ref name="getLqi" scoped="" ref="0x4144b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x41451500" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x41451500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414516d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x414517b8"/>
        <function-ref name="sfd" scoped="" ref="0x41451898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x4144d8b0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x4144d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4144da88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x414502c0" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x414502c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41450498"/>
        <function-ref name="isInput" scoped="" ref="0x41450578"/>
        <function-ref name="toggle" scoped="" ref="0x41450658"/>
        <function-ref name="isOutput" scoped="" ref="0x41450738"/>
        <function-ref name="get" scoped="" ref="0x41450818"/>
        <function-ref name="makeOutput" scoped="" ref="0x414508f8"/>
        <function-ref name="set" scoped="" ref="0x414509d8"/>
        <function-ref name="clr" scoped="" ref="0x41450ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x41490738" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x41490738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41490910"/>
        <function-ref name="write" scoped="" ref="0x414909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41454c90" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41454c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41454e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4144ba30" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4144ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x4144bc08"/>
        <function-ref name="getHeader" scoped="" ref="0x4144bce8"/>
        <function-ref name="getMetadata" scoped="" ref="0x4144bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41451a40" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x41451a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41451c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4144e968" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x4144e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4144eb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4144ec20"/>
        <function-ref name="request" scoped="" ref="0x4144ed00"/>
        <function-ref name="granted" scoped="" ref="0x4144ede0"/>
        <function-ref name="isOwner" scoped="" ref="0x4144eec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x41491d28" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x41491d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41491f00"/>
        <function-ref name="write" scoped="" ref="0x41490010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x4144d128" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x4144d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4144d300"/>
        <function-ref name="writeDone" scoped="" ref="0x4144d3e0"/>
        <function-ref name="write" scoped="" ref="0x4144d4c0"/>
        <function-ref name="beginRead" scoped="" ref="0x4144d5a0"/>
        <function-ref name="readDone" scoped="" ref="0x4144d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x41490c20" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x41490c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41490ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x41451ed8" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x41451ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x414500c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4148f0a0" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x4148f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4148f278"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4148f358"/>
        <function-ref name="led1On" scoped="" ref="0x4148f438"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4148f518"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4148f5f8"/>
        <function-ref name="get" scoped="" ref="0x4148f6d8"/>
        <function-ref name="led1Off" scoped="" ref="0x4148f7b8"/>
        <function-ref name="led2Off" scoped="" ref="0x4148fb38"/>
        <function-ref name="set" scoped="" ref="0x4148f898"/>
        <function-ref name="led0On" scoped="" ref="0x4148f978"/>
        <function-ref name="led2On" scoped="" ref="0x4148fa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x41448e58" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x41448e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41491050"/>
        <function-ref name="write" scoped="" ref="0x41491130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x41448a18" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x41448a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x41448bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x4144e2a8" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x4144e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4144e480"/>
        <function-ref name="disable" scoped="" ref="0x4144e560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4144e640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4144e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x4144dce0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x4144dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4144b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41451060" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x41451060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41451238"/>
        <function-ref name="stop" scoped="" ref="0x41451318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4149bb20" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4149bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4149bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x4149e690" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x4149e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4149e868"/>
        <function-ref name="setNetwork" scoped="" ref="0x4149e948"/>
        <function-ref name="getRssi" scoped="" ref="0x4149ea28"/>
        <function-ref name="getNetwork" scoped="" ref="0x4149eb08"/>
        <function-ref name="getPower" scoped="" ref="0x4149ebe8"/>
        <function-ref name="getLqi" scoped="" ref="0x4149ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x414991a0" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414991a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41499ca0"/>
        <function-ref name="clear" scoped="" ref="0x41498068"/>
        <function-ref name="isValid" scoped="" ref="0x414998f0"/>
        <function-ref name="set" scoped="" ref="0x41498418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x4149b590" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4149b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x4149b768"/>
        <function-ref name="getHeader" scoped="" ref="0x4149b848"/>
        <function-ref name="getMetadata" scoped="" ref="0x4149b928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x41495308" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x41495308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414954e0"/>
        <function-ref name="isSet" scoped="" ref="0x414955c0"/>
        <function-ref name="cancel" scoped="" ref="0x414956a0"/>
        <function-ref name="set" scoped="" ref="0x41495780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x41498b50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x41498b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414976b8"/>
        <function-ref name="clear" scoped="" ref="0x41497a68"/>
        <function-ref name="isValid" scoped="" ref="0x41497308"/>
        <function-ref name="set" scoped="" ref="0x41497e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4149b010" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x4149b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4149b1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4149b2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4149b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x414dc4a8" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x414dc4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x414dc680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x414920e0" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x414920e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x414922b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x41492398"/>
        <function-ref name="getRssi" scoped="" ref="0x41492478"/>
        <function-ref name="getNetwork" scoped="" ref="0x41492558"/>
        <function-ref name="getPower" scoped="" ref="0x41492638"/>
        <function-ref name="getLqi" scoped="" ref="0x41492718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x414d7380" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x414d7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414d7558"/>
        <function-ref name="payloadLength" scoped="" ref="0x414d7638"/>
        <function-ref name="getPayload" scoped="" ref="0x414d7718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414d77f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414d78d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x414dcb00" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x414dcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414db6b8"/>
        <function-ref name="clear" scoped="" ref="0x414dba68"/>
        <function-ref name="isValid" scoped="" ref="0x414db308"/>
        <function-ref name="set" scoped="" ref="0x414dbe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x41492f08" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x41492f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x414dc0f0"/>
        <function-ref name="getHeader" scoped="" ref="0x414dc1d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x414dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x414d8cb0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x414d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d8e88"/>
        <function-ref name="isSet" scoped="" ref="0x414d7010"/>
        <function-ref name="cancel" scoped="" ref="0x414d70f0"/>
        <function-ref name="set" scoped="" ref="0x414d71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x414d7c18" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x414d7c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d6278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x414d6688" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x414d6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x414da578" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414da578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414d8088"/>
        <function-ref name="clear" scoped="" ref="0x414d8438"/>
        <function-ref name="isValid" scoped="" ref="0x414dacc8"/>
        <function-ref name="set" scoped="" ref="0x414d87e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41492988" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x41492988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41492b60"/>
        <function-ref name="noAck" scoped="" ref="0x41492c40"/>
        <function-ref name="wasAcked" scoped="" ref="0x41492d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x41493ef0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x41493ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f4578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x414f48c8" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x414f48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa700"/>
            <typename><typedef-ref name="T32khz" ref="0x406fa8c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f3048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414f3538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414f32c0"/>
        <function-ref name="overflow" scoped="" ref="0x414f37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x414f2c38" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x414f2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414ef730"/>
        <function-ref name="fired" scoped="" ref="0x414f09d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414ef0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x414f0e80"/>
        <function-ref name="getdt" scoped="" ref="0x414efbe0"/>
        <function-ref name="gett0" scoped="" ref="0x414ef988"/>
        <function-ref name="isRunning" scoped="" ref="0x414f0c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414f0278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414ef410"/>
        <function-ref name="startOneShot" scoped="" ref="0x414f04f8"/>
        <function-ref name="stop" scoped="" ref="0x414f0778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x414e76e8" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x414e76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e79c0"/>
        <function-ref name="write" scoped="" ref="0x414e7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x414edae0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x414edae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414edcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x414e9c78" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x414e9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e9e50"/>
        <function-ref name="write" scoped="" ref="0x414e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x414e54b8" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x414e54b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e5690"/>
        <function-ref name="write" scoped="" ref="0x414e5770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x414e2cb8" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x414e2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e2e90"/>
        <function-ref name="write" scoped="" ref="0x414e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x414e58f0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x414e58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e5ac8"/>
        <function-ref name="write" scoped="" ref="0x414e5ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x415275c8" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x415275c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x415277a0"/>
        <function-ref name="write" scoped="" ref="0x41527880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x41528448" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x41528448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41528620"/>
        <function-ref name="write" scoped="" ref="0x41528700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x414eb528" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x414eb528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414eb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x414dfb20" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x414dfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414dfcf8"/>
        <function-ref name="write" scoped="" ref="0x414dfdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x414ddb90" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x414ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414ddd68"/>
        <function-ref name="write" scoped="" ref="0x414dde48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x414e85c8" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x414e85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e87a0"/>
        <function-ref name="write" scoped="" ref="0x414e8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x414e8e38" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x414e8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e7050"/>
        <function-ref name="write" scoped="" ref="0x414e7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x414e2010" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x414e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e21e8"/>
        <function-ref name="write" scoped="" ref="0x414e22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x414e32b0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x414e32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e3488"/>
        <function-ref name="write" scoped="" ref="0x414e3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x414e5d28" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x414e5d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e5f00"/>
        <function-ref name="write" scoped="" ref="0x414e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4149cf00" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x4149cf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x414ed0f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x414ed1d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x414ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x414ea368" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x414ea368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ea540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x414ea6c0" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x414ea6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ea918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x414de648" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x414de648"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414de820"/>
        <function-ref name="write" scoped="" ref="0x414de900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x414eaa98" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x414eaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414eac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x41528010" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x41528010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x415281e8"/>
        <function-ref name="write" scoped="" ref="0x415282c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x414ebbd8" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x414ebbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ebdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x414df6e8" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x414df6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414df8c0"/>
        <function-ref name="write" scoped="" ref="0x414df9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x414e8a00" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x414e8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e8bd8"/>
        <function-ref name="write" scoped="" ref="0x414e8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x414e8190" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x414e8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e8368"/>
        <function-ref name="write" scoped="" ref="0x414e8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x414ed788" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x414ed788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ed960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x414e1e38" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x414e1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414df050"/>
        <function-ref name="write" scoped="" ref="0x414df130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x414e1190" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x414e1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e1368"/>
        <function-ref name="write" scoped="" ref="0x414e1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x414df2b0" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x414df2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414df488"/>
        <function-ref name="write" scoped="" ref="0x414df568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x41527190" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x41527190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41527368"/>
        <function-ref name="write" scoped="" ref="0x41527448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x41528880" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x41528880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41528a58"/>
        <function-ref name="write" scoped="" ref="0x41528b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x414e36e8" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x414e36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e38c0"/>
        <function-ref name="write" scoped="" ref="0x414e39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x414e15c8" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x414e15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e17a0"/>
        <function-ref name="write" scoped="" ref="0x414e1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x414dd758" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x414dd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414dd930"/>
        <function-ref name="write" scoped="" ref="0x414dda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x414e45c8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x414e45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e47a0"/>
        <function-ref name="write" scoped="" ref="0x414e4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x41527a00" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x41527a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x41527bd8"/>
        <function-ref name="writeDone" scoped="" ref="0x41527cb8"/>
        <function-ref name="write" scoped="" ref="0x41527d98"/>
        <function-ref name="beginRead" scoped="" ref="0x41527e78"/>
        <function-ref name="readDone" scoped="" ref="0x41526010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x414ed430" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x414ed430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ed608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x414e9840" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x414e9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e9a18"/>
        <function-ref name="write" scoped="" ref="0x414e9af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x414e72b0" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x414e72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e7488"/>
        <function-ref name="write" scoped="" ref="0x414e7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x414e2448" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x414e2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e2620"/>
        <function-ref name="write" scoped="" ref="0x414e2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x414e4190" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x414e4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e4368"/>
        <function-ref name="write" scoped="" ref="0x414e4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x414e2880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x414e2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e2a58"/>
        <function-ref name="write" scoped="" ref="0x414e2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x414e7c20" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x414e7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e7df8"/>
        <function-ref name="write" scoped="" ref="0x414e7ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x414ede38" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x414ede38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414eb050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x414e5080" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x414e5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e5258"/>
        <function-ref name="write" scoped="" ref="0x414e5338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4149c848" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x4149c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4149ca20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4149cb00"/>
        <function-ref name="request" scoped="" ref="0x4149cbe0"/>
        <function-ref name="granted" scoped="" ref="0x4149ccc0"/>
        <function-ref name="isOwner" scoped="" ref="0x4149cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x414eadf0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x414eadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x414e94e8" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x414e94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414e96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x414dd320" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x414dd320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414dd4f8"/>
        <function-ref name="write" scoped="" ref="0x414dd5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x414deeb8" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x414deeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414dd0c0"/>
        <function-ref name="write" scoped="" ref="0x414dd1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x414ea010" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x414ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414ea1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x414dea80" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x414dea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414dec58"/>
        <function-ref name="write" scoped="" ref="0x414ded38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x41528cb8" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x41528cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41528e90"/>
        <function-ref name="write" scoped="" ref="0x41527010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x414e3b20" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x414e3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e3cf8"/>
        <function-ref name="write" scoped="" ref="0x414e3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x414e1a00" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x414e1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e1bd8"/>
        <function-ref name="write" scoped="" ref="0x414e1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x414eb1d0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x414eb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414eb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x414eb880" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x414eb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414eba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x414e4a00" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x414e4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e4bd8"/>
        <function-ref name="write" scoped="" ref="0x414e4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x414e9190" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x414e9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x414e9368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x414e4e38" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x414e4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414e3050"/>
        <function-ref name="write" scoped="" ref="0x414e3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x414de010" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x414de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414de3e8"/>
        <function-ref name="write" scoped="" ref="0x414de4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x41526190" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x41526190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x41526368"/>
        <function-ref name="writeDone" scoped="" ref="0x41526448"/>
        <function-ref name="write" scoped="" ref="0x41526528"/>
        <function-ref name="beginRead" scoped="" ref="0x41526608"/>
        <function-ref name="readDone" scoped="" ref="0x415266e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4150e948" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x4150e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4150eb20"/>
        <function-ref name="rand32" scoped="" ref="0x4150ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4150e088" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x4150e088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4150e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41512e20" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41512e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4150f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4150a478" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x4150a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4150a650"/>
        <function-ref name="rand32" scoped="" ref="0x4150a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4150db00" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x4150db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4150a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4150d5e0" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4150d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4150d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x41511608" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x41511608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415117e0"/>
        <function-ref name="toIdle" scoped="" ref="0x415118c0"/>
        <function-ref name="isState" scoped="" ref="0x415119a0"/>
        <function-ref name="isIdle" scoped="" ref="0x41511a80"/>
        <function-ref name="requestState" scoped="" ref="0x41511b60"/>
        <function-ref name="forceState" scoped="" ref="0x41511c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4154faf0" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x4154faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4154fcc8"/>
        <function-ref name="getPayload" scoped="" ref="0x4154fda8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4154fe88"/>
        <function-ref name="cancel" scoped="" ref="0x4154c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4154c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4154f380" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4154f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4154f558"/>
        <function-ref name="getPayload" scoped="" ref="0x4154f638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4154f718"/>
        <function-ref name="cancel" scoped="" ref="0x4154f7f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4154f8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41549570" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x41549570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41549748"/>
        <function-ref name="getPayload" scoped="" ref="0x41549828"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41549908"/>
        <function-ref name="cancel" scoped="" ref="0x415499e8"/>
        <function-ref name="sendDone" scoped="" ref="0x41549ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4154ca10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4154ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4154cbe8"/>
        <function-ref name="getPayload" scoped="" ref="0x4154ccc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4154cda8"/>
        <function-ref name="cancel" scoped="" ref="0x4154ce88"/>
        <function-ref name="sendDone" scoped="" ref="0x41549010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41548430" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x41548430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41548608"/>
        <function-ref name="rand32" scoped="" ref="0x415486e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41549180" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41549180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41549358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x415488d0" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x415488d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x41548aa8"/>
        <function-ref name="getHeader" scoped="" ref="0x41548b88"/>
        <function-ref name="getMetadata" scoped="" ref="0x41548c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x41549c40" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x41549c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41549e18"/>
        <function-ref name="toIdle" scoped="" ref="0x41549ef8"/>
        <function-ref name="isState" scoped="" ref="0x41548010"/>
        <function-ref name="isIdle" scoped="" ref="0x415480f0"/>
        <function-ref name="requestState" scoped="" ref="0x415481d0"/>
        <function-ref name="forceState" scoped="" ref="0x415482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4154bab8" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x4154bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4154bc90"/>
        <function-ref name="toIdle" scoped="" ref="0x4154bd70"/>
        <function-ref name="isState" scoped="" ref="0x4154be50"/>
        <function-ref name="isIdle" scoped="" ref="0x4154a010"/>
        <function-ref name="requestState" scoped="" ref="0x4154a0f0"/>
        <function-ref name="forceState" scoped="" ref="0x4154a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4153bb28" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x4153bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4153bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4153b2d8" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x4153b2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4153b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x4153b700" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x4153b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4153b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41537330" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x41537330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41537508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4153aef8" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4153aef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415370e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4153a788" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x4153a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4153a960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x415376f0" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x415376f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x415378c8"/>
        <function-ref name="getHeader" scoped="" ref="0x415379a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x41537a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x4153abb0" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x4153abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4153ad88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4156b7b8" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x4156b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4156b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4156bb68" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x4156bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4156bd40"/>
        <function-ref name="getPayload" scoped="" ref="0x4156be20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4156bf00"/>
        <function-ref name="cancel" scoped="" ref="0x4156a010"/>
        <function-ref name="sendDone" scoped="" ref="0x4156a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4156e960" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4156e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4156eb38"/>
        <function-ref name="getPayload" scoped="" ref="0x4156ec18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4156ecf8"/>
        <function-ref name="cancel" scoped="" ref="0x4156edd8"/>
        <function-ref name="sendDone" scoped="" ref="0x4156eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x4156c430" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x4156c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4156c608"/>
        <function-ref name="getPayload" scoped="" ref="0x4156c6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4156c7c8"/>
        <function-ref name="cancel" scoped="" ref="0x4156c8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4156c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4156c060" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x4156c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4156c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4156e298" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x4156e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4156e470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4156e550"/>
        <function-ref name="request" scoped="" ref="0x4156e630"/>
        <function-ref name="granted" scoped="" ref="0x4156e710"/>
        <function-ref name="isOwner" scoped="" ref="0x4156e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x4156cbb8" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x4156cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4156cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x4156b010" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x4156b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4156b1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4156b2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4156b3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4156b488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4156b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41565cb0" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x41565cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41565e88"/>
        <function-ref name="getPayload" scoped="" ref="0x41564010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415640f0"/>
        <function-ref name="cancel" scoped="" ref="0x415641d0"/>
        <function-ref name="sendDone" scoped="" ref="0x415642b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x415644c0" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x415644c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41564698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x41597250" loc="180:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x41597250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41597428"/>
        <function-ref name="runTask" scoped="" ref="0x41597508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x41564858" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x41564858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x41564a30"/>
        <function-ref name="setNetwork" scoped="" ref="0x41564b10"/>
        <function-ref name="getRssi" scoped="" ref="0x41564bf0"/>
        <function-ref name="getNetwork" scoped="" ref="0x41564cd0"/>
        <function-ref name="getPower" scoped="" ref="0x41564db0"/>
        <function-ref name="getLqi" scoped="" ref="0x41564e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x415669b8" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x415669b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41566b90"/>
        <function-ref name="getPayload" scoped="" ref="0x41566c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41566d50"/>
        <function-ref name="cancel" scoped="" ref="0x41566e30"/>
        <function-ref name="sendDone" scoped="" ref="0x41566f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x415636c0" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x415636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41563898"/>
        <function-ref name="isEmpty" scoped="" ref="0x41563978"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41563a58"/>
        <function-ref name="dequeue" scoped="" ref="0x41563b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x41563108" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x41563108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x415632e0"/>
        <function-ref name="getHeader" scoped="" ref="0x415633c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x415634a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x415665e8" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x415665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x415667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41567718" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x41567718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x415678f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x415679d0"/>
        <function-ref name="request" scoped="" ref="0x41567ab0"/>
        <function-ref name="granted" scoped="" ref="0x41567b90"/>
        <function-ref name="isOwner" scoped="" ref="0x41567c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41567e58" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x41567e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41566050"/>
        <function-ref name="getPayload" scoped="" ref="0x41566130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41566210"/>
        <function-ref name="cancel" scoped="" ref="0x415662f0"/>
        <function-ref name="sendDone" scoped="" ref="0x415663d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x41565160" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x41565160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41565338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x41565540" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x41565540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41565718"/>
        <function-ref name="payloadLength" scoped="" ref="0x415657f8"/>
        <function-ref name="getPayload" scoped="" ref="0x415658d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415659b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41565a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415869f0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x415869f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41586bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41586d28" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x41586d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41586f00"/>
        <function-ref name="isEmpty" scoped="" ref="0x41585010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x415850f0"/>
        <function-ref name="dequeue" scoped="" ref="0x415851d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4157d0e0" loc="46:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x4157d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4157d2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4157d398"/>
        <function-ref name="start" scoped="" ref="0x4157d478"/>
        <function-ref name="stop" scoped="" ref="0x4157d558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4157c010" loc="51:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x4157c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4157c1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4157c2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4157c3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4157c488"/>
        <function-ref name="sendDone" scoped="" ref="0x4157c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4157c778" loc="52:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x4157c778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4157c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4157e5f8" loc="44:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4157e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4157e7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4157e8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4157e990"/>
        <function-ref name="cancel" scoped="" ref="0x4157ea70"/>
        <function-ref name="sendDone" scoped="" ref="0x4157eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4157e010" loc="43:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x4157e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4157e1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4157e2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4157e3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4157e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x4157d750" loc="47:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x4157d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4157d928"/>
        <function-ref name="toIdle" scoped="" ref="0x4157da08"/>
        <function-ref name="isState" scoped="" ref="0x4157dae8"/>
        <function-ref name="isIdle" scoped="" ref="0x4157dbc8"/>
        <function-ref name="requestState" scoped="" ref="0x4157dca8"/>
        <function-ref name="forceState" scoped="" ref="0x4157dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4157cb98" loc="53:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x4157cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4157cd70"/>
        <function-ref name="stopDone" scoped="" ref="0x4157ce50"/>
        <function-ref name="start" scoped="" ref="0x4157b010"/>
        <function-ref name="stop" scoped="" ref="0x4157b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4157ecd8" loc="45:../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x4157ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4157eeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x415c55a0" loc="59:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x415c55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x415c5778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41578e10" loc="56:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x41578e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41577010"/>
        <function-ref name="getPayload" scoped="" ref="0x415770f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415771d0"/>
        <function-ref name="cancel" scoped="" ref="0x415772b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41577390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x415b4040" loc="109:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x415b4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415b4218"/>
        <function-ref name="runTask" scoped="" ref="0x415b42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x41577cd8" loc="58:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x41577cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x41577eb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x415c5010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x415c50f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x415c51d0"/>
        <function-ref name="setCca" scoped="" ref="0x415c52b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x415c5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x415b6e48" loc="71:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x415b6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x415b8050"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x415b8130"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x415b8210"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x415b82f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x415c2ed0" loc="67:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OffTimer" scoped="" ref="0x415c2ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415bea18"/>
        <function-ref name="fired" scoped="" ref="0x415bfcb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415be3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x415be180"/>
        <function-ref name="getdt" scoped="" ref="0x415beec8"/>
        <function-ref name="gett0" scoped="" ref="0x415bec70"/>
        <function-ref name="isRunning" scoped="" ref="0x415bff08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415bf558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415be6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x415bf7d8"/>
        <function-ref name="stop" scoped="" ref="0x415bfa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41578340" loc="51:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x41578340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41578518"/>
        <function-ref name="getPayload" scoped="" ref="0x415785f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415786d8"/>
        <function-ref name="cancel" scoped="" ref="0x415787b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41578898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4157bcc0" loc="50:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x4157bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4157be98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41578010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x415780f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x415781d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x415c3408" loc="64:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x415c3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415c3660"/>
        <function-ref name="toIdle" scoped="" ref="0x415c3740"/>
        <function-ref name="isState" scoped="" ref="0x415c3820"/>
        <function-ref name="isIdle" scoped="" ref="0x415c3900"/>
        <function-ref name="requestState" scoped="" ref="0x415c39e0"/>
        <function-ref name="forceState" scoped="" ref="0x415c3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x415ba4b8" loc="69:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x415ba4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x415ba690"/>
        <function-ref name="rand32" scoped="" ref="0x415ba770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x415775c0" loc="57:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resend" scoped="" ref="0x415775c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41577798"/>
        <function-ref name="cancel" scoped="" ref="0x41577878"/>
        <function-ref name="modify" scoped="" ref="0x41577958"/>
        <function-ref name="sendDone" scoped="" ref="0x41577a38"/>
        <function-ref name="resend" scoped="" ref="0x41577b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4157b8f8" loc="49:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4157b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4157bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x415c59c0" loc="60:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x415c59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415c5b98"/>
        <function-ref name="stopDone" scoped="" ref="0x415c5c78"/>
        <function-ref name="start" scoped="" ref="0x415c5d58"/>
        <function-ref name="stop" scoped="" ref="0x415c5e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41578a20" loc="52:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x41578a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41578bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x415c0880" loc="62:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x415c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x415c0a58"/>
        <function-ref name="getHeader" scoped="" ref="0x415c0b38"/>
        <function-ref name="getMetadata" scoped="" ref="0x415c0c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x415c3cf0" loc="65:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x415c3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415c3ec8"/>
        <function-ref name="toIdle" scoped="" ref="0x415c2010"/>
        <function-ref name="isState" scoped="" ref="0x415c20f0"/>
        <function-ref name="isIdle" scoped="" ref="0x415c21d0"/>
        <function-ref name="requestState" scoped="" ref="0x415c22b0"/>
        <function-ref name="forceState" scoped="" ref="0x415c2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x415b3110" loc="111:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x415b3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415b32e8"/>
        <function-ref name="runTask" scoped="" ref="0x415b33c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x415ba8e0" loc="70:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x415ba8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x415baab8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x415bab98"/>
        <function-ref name="led1On" scoped="" ref="0x415bac78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x415bad58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x415bae38"/>
        <function-ref name="get" scoped="" ref="0x415baf18"/>
        <function-ref name="led1Off" scoped="" ref="0x415b9010"/>
        <function-ref name="led2Off" scoped="" ref="0x415b9390"/>
        <function-ref name="set" scoped="" ref="0x415b90f0"/>
        <function-ref name="led0On" scoped="" ref="0x415b91d0"/>
        <function-ref name="led2On" scoped="" ref="0x415b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x415bd2b8" loc="68:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendDoneTimer" scoped="" ref="0x415bd2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415bbd90"/>
        <function-ref name="fired" scoped="" ref="0x415bb048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415bb750"/>
        <function-ref name="isOneShot" scoped="" ref="0x415bb4f8"/>
        <function-ref name="getdt" scoped="" ref="0x415ba268"/>
        <function-ref name="gett0" scoped="" ref="0x415ba010"/>
        <function-ref name="isRunning" scoped="" ref="0x415bb2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415bd8e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415bba70"/>
        <function-ref name="startOneShot" scoped="" ref="0x415bdb60"/>
        <function-ref name="stop" scoped="" ref="0x415bdde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x415c0e38" loc="63:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x415c0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415c3050"/>
        <function-ref name="noAck" scoped="" ref="0x415c3130"/>
        <function-ref name="wasAcked" scoped="" ref="0x415c3210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x415c25d8" loc="66:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x415c25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415c27b0"/>
        <function-ref name="toIdle" scoped="" ref="0x415c2890"/>
        <function-ref name="isState" scoped="" ref="0x415c2970"/>
        <function-ref name="isIdle" scoped="" ref="0x415c2a50"/>
        <function-ref name="requestState" scoped="" ref="0x415c2b30"/>
        <function-ref name="forceState" scoped="" ref="0x415c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x415b4830" loc="110:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="resend" scoped="" ref="0x415b4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415b4a08"/>
        <function-ref name="runTask" scoped="" ref="0x415b4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x415c0300" loc="61:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x415c0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x415c04d8"/>
        <function-ref name="detected" scoped="" ref="0x415c05b8"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x415c0698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x415b38f8" loc="112:../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x415b38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415b3ad0"/>
        <function-ref name="runTask" scoped="" ref="0x415b3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x415d58d0" loc="42:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x415d58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415d5aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x415d5b88"/>
        <function-ref name="start" scoped="" ref="0x415d5c68"/>
        <function-ref name="stop" scoped="" ref="0x415d5d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x415d2878" loc="44:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x415d2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415d2a50"/>
        <function-ref name="toIdle" scoped="" ref="0x415d2b30"/>
        <function-ref name="isState" scoped="" ref="0x415d2c10"/>
        <function-ref name="isIdle" scoped="" ref="0x415d2cf0"/>
        <function-ref name="requestState" scoped="" ref="0x415d2dd0"/>
        <function-ref name="forceState" scoped="" ref="0x415d2eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x415d2010" loc="43:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x415d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415d21e8"/>
        <function-ref name="toIdle" scoped="" ref="0x415d22c8"/>
        <function-ref name="isState" scoped="" ref="0x415d23a8"/>
        <function-ref name="isIdle" scoped="" ref="0x415d2488"/>
        <function-ref name="requestState" scoped="" ref="0x415d2568"/>
        <function-ref name="forceState" scoped="" ref="0x415d2648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x415d5378" loc="41:../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x415d5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x415d5550"/>
        <function-ref name="detected" scoped="" ref="0x415d5630"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x415d5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x415d1af0" loc="59:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x415d1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415d1cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x415d1da8"/>
        <function-ref name="start" scoped="" ref="0x415d1e88"/>
        <function-ref name="stop" scoped="" ref="0x415ce010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x415c9718" loc="70:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x415c9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x415c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x415c92b0" loc="69:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x415c92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x415c9488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x415cbd28" loc="67:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x415cbd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415cbf00"/>
        <function-ref name="toIdle" scoped="" ref="0x415ca010"/>
        <function-ref name="isState" scoped="" ref="0x415ca0f0"/>
        <function-ref name="isIdle" scoped="" ref="0x415ca1d0"/>
        <function-ref name="requestState" scoped="" ref="0x415ca2b0"/>
        <function-ref name="forceState" scoped="" ref="0x415ca390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x415c69f0" loc="96:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x415c69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415c6c48"/>
        <function-ref name="runTask" scoped="" ref="0x415c6d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x415cc5b8" loc="64:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x415cc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x415cc790"/>
        <function-ref name="stopDone" scoped="" ref="0x415cc870"/>
        <function-ref name="start" scoped="" ref="0x415cc950"/>
        <function-ref name="stop" scoped="" ref="0x415cca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x415ccc60" loc="65:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x415ccc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415cce38"/>
        <function-ref name="toIdle" scoped="" ref="0x415ccf18"/>
        <function-ref name="isState" scoped="" ref="0x415cb010"/>
        <function-ref name="isIdle" scoped="" ref="0x415cb0f0"/>
        <function-ref name="requestState" scoped="" ref="0x415cb1d0"/>
        <function-ref name="forceState" scoped="" ref="0x415cb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x415c9b90" loc="71:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x415c9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x415c9d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x415ca500" loc="68:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x415ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x415ca6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x415ca7b8"/>
        <function-ref name="led1On" scoped="" ref="0x415ca898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x415ca978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x415caa58"/>
        <function-ref name="get" scoped="" ref="0x415cab38"/>
        <function-ref name="led1Off" scoped="" ref="0x415cac18"/>
        <function-ref name="led2Off" scoped="" ref="0x415c9010"/>
        <function-ref name="set" scoped="" ref="0x415cacf8"/>
        <function-ref name="led0On" scoped="" ref="0x415cadd8"/>
        <function-ref name="led2On" scoped="" ref="0x415caeb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x41615250" loc="97:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getCca" scoped="" ref="0x41615250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41615428"/>
        <function-ref name="runTask" scoped="" ref="0x41615508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x415cb4f8" loc="66:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x415cb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415cb6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x415cb7b0"/>
        <function-ref name="isState" scoped="" ref="0x415cb890"/>
        <function-ref name="isIdle" scoped="" ref="0x415cb970"/>
        <function-ref name="requestState" scoped="" ref="0x415cba50"/>
        <function-ref name="forceState" scoped="" ref="0x415cbb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x415ce300" loc="63:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OnTimer" scoped="" ref="0x415ce300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415cdde0"/>
        <function-ref name="fired" scoped="" ref="0x415cd098"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415cd7a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x415cd548"/>
        <function-ref name="getdt" scoped="" ref="0x415cc2a0"/>
        <function-ref name="gett0" scoped="" ref="0x415cc048"/>
        <function-ref name="isRunning" scoped="" ref="0x415cd2f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415ce928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415cdac0"/>
        <function-ref name="startOneShot" scoped="" ref="0x415ceba8"/>
        <function-ref name="stop" scoped="" ref="0x415cee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x415d1598" loc="58:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x415d1598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x415d1770"/>
        <function-ref name="detected" scoped="" ref="0x415d1850"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x415d1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x415c61d0" loc="95:../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x415c61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415c63a8"/>
        <function-ref name="runTask" scoped="" ref="0x415c6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x415f9e58" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x415f9e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415f8050"/>
        <function-ref name="toIdle" scoped="" ref="0x415f8130"/>
        <function-ref name="isState" scoped="" ref="0x415f8210"/>
        <function-ref name="isIdle" scoped="" ref="0x415f82f0"/>
        <function-ref name="requestState" scoped="" ref="0x415f83d0"/>
        <function-ref name="forceState" scoped="" ref="0x415f84b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x415f7070" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x415f7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x415f7248"/>
        <function-ref name="toIdle" scoped="" ref="0x415f7328"/>
        <function-ref name="isState" scoped="" ref="0x415f7408"/>
        <function-ref name="isIdle" scoped="" ref="0x415f74e8"/>
        <function-ref name="requestState" scoped="" ref="0x415f75c8"/>
        <function-ref name="forceState" scoped="" ref="0x415f76a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415f62c0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x415f62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415f5db0"/>
        <function-ref name="fired" scoped="" ref="0x415f5068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415f5770"/>
        <function-ref name="isOneShot" scoped="" ref="0x415f5518"/>
        <function-ref name="getdt" scoped="" ref="0x415f32a0"/>
        <function-ref name="gett0" scoped="" ref="0x415f3048"/>
        <function-ref name="isRunning" scoped="" ref="0x415f52c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415f68e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415f5a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x415f6b68"/>
        <function-ref name="stop" scoped="" ref="0x415f6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415f20a0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x415f20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415f1b88"/>
        <function-ref name="fired" scoped="" ref="0x415f2e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415f1548"/>
        <function-ref name="isOneShot" scoped="" ref="0x415f12f0"/>
        <function-ref name="getdt" scoped="" ref="0x415f0048"/>
        <function-ref name="gett0" scoped="" ref="0x415f1de0"/>
        <function-ref name="isRunning" scoped="" ref="0x415f1098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415f26c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415f1868"/>
        <function-ref name="startOneShot" scoped="" ref="0x415f2948"/>
        <function-ref name="stop" scoped="" ref="0x415f2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4163bcd8" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x4163bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4163beb0"/>
        <function-ref name="toIdle" scoped="" ref="0x4163a010"/>
        <function-ref name="isState" scoped="" ref="0x4163a0f0"/>
        <function-ref name="isIdle" scoped="" ref="0x4163a1d0"/>
        <function-ref name="requestState" scoped="" ref="0x4163a2b0"/>
        <function-ref name="forceState" scoped="" ref="0x4163a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41639010" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x41639010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41638b00"/>
        <function-ref name="fired" scoped="" ref="0x41639d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416384c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41638268"/>
        <function-ref name="getdt" scoped="" ref="0x41637010"/>
        <function-ref name="gett0" scoped="" ref="0x41638d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41638010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41639638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x416387e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x416398b8"/>
        <function-ref name="stop" scoped="" ref="0x41639b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41637e18" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x41637e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41634920"/>
        <function-ref name="fired" scoped="" ref="0x41636bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416342e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41634088"/>
        <function-ref name="getdt" scoped="" ref="0x41634dd0"/>
        <function-ref name="gett0" scoped="" ref="0x41634b78"/>
        <function-ref name="isRunning" scoped="" ref="0x41636e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41636468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41634600"/>
        <function-ref name="startOneShot" scoped="" ref="0x416366e8"/>
        <function-ref name="stop" scoped="" ref="0x41636968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x41633a68" loc="3:../../tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41633a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41633c40"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41633d20"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41633e00"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41633ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x416306c0" loc="5:../../tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x416306c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41630898"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41630978"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41630a58"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41630b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x416224c8" loc="47:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x416224c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416226a0"/>
        <function-ref name="getPayload" scoped="" ref="0x41622780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41622860"/>
        <function-ref name="cancel" scoped="" ref="0x41622940"/>
        <function-ref name="sendDone" scoped="" ref="0x41622a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x416255c0" loc="42:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x416255c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41625798"/>
        <function-ref name="getPayload" scoped="" ref="0x41625878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41625958"/>
        <function-ref name="cancel" scoped="" ref="0x41625a38"/>
        <function-ref name="sendDone" scoped="" ref="0x41625b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x41625cc0" loc="43:../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x41625cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x41625e98"/>
        <function-ref name="setRetries" scoped="" ref="0x41622010"/>
        <function-ref name="getRetries" scoped="" ref="0x416220f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x416221d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x416222b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4161e010" loc="47:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x4161e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4161e1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4161e2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4161e3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4161e488"/>
        <function-ref name="sendDone" scoped="" ref="0x4161e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x41619ee0" loc="77:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x41619ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416180e0"/>
        <function-ref name="runTask" scoped="" ref="0x416181c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x4161c678" loc="50:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x4161c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4161a170"/>
        <function-ref name="fired" scoped="" ref="0x4161b410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4161bb18"/>
        <function-ref name="isOneShot" scoped="" ref="0x4161b8c0"/>
        <function-ref name="getdt" scoped="" ref="0x4161a620"/>
        <function-ref name="gett0" scoped="" ref="0x4161a3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4161b668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4161cca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4161be38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4161cf20"/>
        <function-ref name="stop" scoped="" ref="0x4161b1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4161f100" loc="42:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x4161f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4161f2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4161f3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4161f498"/>
        <function-ref name="cancel" scoped="" ref="0x4161f578"/>
        <function-ref name="sendDone" scoped="" ref="0x4161f658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x4161e760" loc="48:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x4161e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4161e938"/>
        <function-ref name="toIdle" scoped="" ref="0x4161ea18"/>
        <function-ref name="isState" scoped="" ref="0x4161eaf8"/>
        <function-ref name="isIdle" scoped="" ref="0x4161ebd8"/>
        <function-ref name="requestState" scoped="" ref="0x4161ecb8"/>
        <function-ref name="forceState" scoped="" ref="0x4161ed98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4161a8d8" loc="51:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4161a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x4161aab0"/>
        <function-ref name="getHeader" scoped="" ref="0x4161ab90"/>
        <function-ref name="getMetadata" scoped="" ref="0x4161ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x4161c010" loc="49:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4161c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4161c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4161c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4161c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4161f800" loc="43:../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x4161f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4161f9d8"/>
        <function-ref name="setRetries" scoped="" ref="0x4161fab8"/>
        <function-ref name="getRetries" scoped="" ref="0x4161fb98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4161fc78"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4161fd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x416510a0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x416510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41651278"/>
        <function-ref name="toIdle" scoped="" ref="0x41651358"/>
        <function-ref name="isState" scoped="" ref="0x41651438"/>
        <function-ref name="isIdle" scoped="" ref="0x41651518"/>
        <function-ref name="requestState" scoped="" ref="0x416515f8"/>
        <function-ref name="forceState" scoped="" ref="0x416516d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x416502f0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x416502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4164fdd0"/>
        <function-ref name="fired" scoped="" ref="0x4164f088"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4164f790"/>
        <function-ref name="isOneShot" scoped="" ref="0x4164f538"/>
        <function-ref name="getdt" scoped="" ref="0x4164d2a0"/>
        <function-ref name="gett0" scoped="" ref="0x4164d048"/>
        <function-ref name="isRunning" scoped="" ref="0x4164f2e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41650918"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4164fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41650b98"/>
        <function-ref name="stop" scoped="" ref="0x41650e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4138e328" loc="11:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x4138e328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4138e500"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4138e5e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4138e6c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4138e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41644140" loc="13:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41644140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41644318"/>
        <function-ref name="noAck" scoped="" ref="0x416443f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x416444d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4138e948" loc="12:../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x4138e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4138eb20"/>
        <function-ref name="setRetries" scoped="" ref="0x4138ec00"/>
        <function-ref name="getRetries" scoped="" ref="0x4138ece0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4138edc0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4138eea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x41646178" loc="12:../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x41646178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x41646350"/>
        <function-ref name="readLqi" scoped="" ref="0x41646430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4163e380" loc="10:../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x4163e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4163e558"/>
        <function-ref name="setNetwork" scoped="" ref="0x4163e638"/>
        <function-ref name="getRssi" scoped="" ref="0x4163e718"/>
        <function-ref name="getNetwork" scoped="" ref="0x4163e7f8"/>
        <function-ref name="getPower" scoped="" ref="0x4163e8d8"/>
        <function-ref name="getLqi" scoped="" ref="0x4163e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x4163feb8" loc="9:../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x4163feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x4163e0c0"/>
        <function-ref name="readLqi" scoped="" ref="0x4163e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41645238" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x41645238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x406fa2c0"/>
            <typename><typedef-ref name="TMilli" ref="0x406fa488"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41642d58"/>
        <function-ref name="fired" scoped="" ref="0x41642010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41642718"/>
        <function-ref name="isOneShot" scoped="" ref="0x416424c0"/>
        <function-ref name="getdt" scoped="" ref="0x4168c268"/>
        <function-ref name="gett0" scoped="" ref="0x4168c010"/>
        <function-ref name="isRunning" scoped="" ref="0x41642268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41645860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41642a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41645ae0"/>
        <function-ref name="stop" scoped="" ref="0x41645d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41688ba8" loc="42:../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41688ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
            <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41687c88"/>
        <function-ref name="maxSize" scoped="" ref="0x416876a0"/>
        <function-ref name="empty" scoped="" ref="0x416871f0"/>
        <function-ref name="put" scoped="" ref="0x416878f8"/>
        <function-ref name="size" scoped="" ref="0x41687448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41c8cd18" loc="56:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41c8cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
            <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c8bde8"/>
        <function-ref name="maxSize" scoped="" ref="0x41c8b800"/>
        <function-ref name="empty" scoped="" ref="0x41c8b350"/>
        <function-ref name="put" scoped="" ref="0x41c8ba58"/>
        <function-ref name="size" scoped="" ref="0x41c8b5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c8c970" loc="55:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41c8c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c8cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41672ef8" loc="42:../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41672ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41670010"/>
        <function-ref name="maxSize" scoped="" ref="0x41671a08"/>
        <function-ref name="empty" scoped="" ref="0x41671558"/>
        <function-ref name="put" scoped="" ref="0x41671c60"/>
        <function-ref name="size" scoped="" ref="0x416717b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41c814c8" loc="56:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41c814c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c805f8"/>
        <function-ref name="maxSize" scoped="" ref="0x41c80010"/>
        <function-ref name="empty" scoped="" ref="0x41c81af0"/>
        <function-ref name="put" scoped="" ref="0x41c80268"/>
        <function-ref name="size" scoped="" ref="0x41c81d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c81120" loc="55:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41c81120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c812f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x416b1ce8" loc="43:../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x416b1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x4072f968"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4166fa58"/>
        <function-ref name="enqueue" scoped="" ref="0x4166e150"/>
        <function-ref name="element" scoped="" ref="0x4166e4a0"/>
        <function-ref name="maxSize" scoped="" ref="0x4166f800"/>
        <function-ref name="dequeue" scoped="" ref="0x4166fdc8"/>
        <function-ref name="empty" scoped="" ref="0x4166f350"/>
        <function-ref name="size" scoped="" ref="0x4166f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416b0828" loc="42:../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x416b0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416ae8f8"/>
        <function-ref name="maxSize" scoped="" ref="0x416ae310"/>
        <function-ref name="empty" scoped="" ref="0x416b0e50"/>
        <function-ref name="put" scoped="" ref="0x416ae568"/>
        <function-ref name="size" scoped="" ref="0x416ae0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41c714c8" loc="56:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41c714c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c705f8"/>
        <function-ref name="maxSize" scoped="" ref="0x41c70010"/>
        <function-ref name="empty" scoped="" ref="0x41c71af0"/>
        <function-ref name="put" scoped="" ref="0x41c70268"/>
        <function-ref name="size" scoped="" ref="0x41c71d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c71120" loc="55:../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41c71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c712f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x416aa680" loc="10:../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x416aa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x416aa858"/>
        <function-ref name="stopDone" scoped="" ref="0x416aa938"/>
        <function-ref name="start" scoped="" ref="0x416aaa18"/>
        <function-ref name="stop" scoped="" ref="0x416aaaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x416a7798" loc="15:../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x416a7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x416a7970"/>
        <function-ref name="stopDone" scoped="" ref="0x416a7a50"/>
        <function-ref name="start" scoped="" ref="0x416a7b30"/>
        <function-ref name="stop" scoped="" ref="0x416a7c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x416a7db0" loc="16:../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x416a7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x416a6010"/>
        <function-ref name="changed" scoped="" ref="0x416a60f0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x416a61d0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x416a62b0"/>
        <function-ref name="setSource" scoped="" ref="0x416a6390"/>
        <function-ref name="removeAddress" scoped="" ref="0x416a6470"/>
        <function-ref name="isLLAddress" scoped="" ref="0x416a6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x416a7268" loc="14:../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x416a7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416a7440"/>
        <function-ref name="stop" scoped="" ref="0x416a7520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x416aace0" loc="13:../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x416aace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416aaeb8"/>
        <function-ref name="stop" scoped="" ref="0x416a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x41690010" loc="50:../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x41690010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416901e8"/>
        <function-ref name="recv" scoped="" ref="0x416902c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x416908b8" loc="54:../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x416908b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41690a90"/>
        <function-ref name="changed" scoped="" ref="0x41690b70"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x41690c50"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x41690d30"/>
        <function-ref name="setSource" scoped="" ref="0x41690e10"/>
        <function-ref name="removeAddress" scoped="" ref="0x41690ef0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x416e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x416e2180" loc="55:../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x416e2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416e2358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416e2438"/>
        <function-ref name="led1On" scoped="" ref="0x416e2518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x416e25f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x416e26d8"/>
        <function-ref name="get" scoped="" ref="0x416e27b8"/>
        <function-ref name="led1Off" scoped="" ref="0x416e2898"/>
        <function-ref name="led2Off" scoped="" ref="0x416e2c18"/>
        <function-ref name="set" scoped="" ref="0x416e2978"/>
        <function-ref name="led0On" scoped="" ref="0x416e2a58"/>
        <function-ref name="led2On" scoped="" ref="0x416e2b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x41690460" loc="53:../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x41690460"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41690638"/>
        <function-ref name="recv" scoped="" ref="0x41690718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x41699c30" loc="15:../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x41699c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x41699e08"/>
        <function-ref name="delTLV" scoped="" ref="0x41699ee8"/>
        <function-ref name="findTLV" scoped="" ref="0x416ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416cf278" loc="42:../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x416cf278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40752010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416bf3a0"/>
        <function-ref name="maxSize" scoped="" ref="0x416cfd50"/>
        <function-ref name="empty" scoped="" ref="0x416cf8a0"/>
        <function-ref name="put" scoped="" ref="0x416bf010"/>
        <function-ref name="size" scoped="" ref="0x416cfaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41c67058" loc="56:../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x41c67058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40752010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41cd0130"/>
        <function-ref name="maxSize" scoped="" ref="0x41c67b30"/>
        <function-ref name="empty" scoped="" ref="0x41c67680"/>
        <function-ref name="put" scoped="" ref="0x41c67d88"/>
        <function-ref name="size" scoped="" ref="0x41c678d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c68c88" loc="55:../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41c68c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c68e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x416bc260" loc="9:../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="HemeraSamplerC.UDPService"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x416bc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x416bc438"/>
        <function-ref name="bind" scoped="" ref="0x416bc518"/>
        <function-ref name="sendtov" scoped="" ref="0x416bc5f8"/>
        <function-ref name="recvfrom" scoped="" ref="0x416bc6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x4170cb38" loc="13:../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x4170cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x411b3b48"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x411b3dd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4170b480"/>
        <function-ref name="get" scoped="" ref="0x4170b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x4170c3b8" loc="12:../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x4170c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x4170c590"/>
        <function-ref name="bind" scoped="" ref="0x4170c670"/>
        <function-ref name="sendtov" scoped="" ref="0x4170c750"/>
        <function-ref name="recvfrom" scoped="" ref="0x4170c830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x41706e40" loc="15:../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x41706e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x411b3b48"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x411b3dd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41705758"/>
        <function-ref name="get" scoped="" ref="0x417054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41706960" loc="14:../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x41706960"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403a82d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403a82d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41706b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41705e18" loc="19:../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x41705e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41704010"/>
        <function-ref name="changed" scoped="" ref="0x417040f0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x417041d0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x417042b0"/>
        <function-ref name="setSource" scoped="" ref="0x41704390"/>
        <function-ref name="removeAddress" scoped="" ref="0x41704470"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41704550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x41706100" loc="13:../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x41706100"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x417062d8"/>
        <function-ref name="bind" scoped="" ref="0x417063b8"/>
        <function-ref name="sendtov" scoped="" ref="0x41706498"/>
        <function-ref name="recvfrom" scoped="" ref="0x41706578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x417059c0" loc="18:../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x417059c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41705b98"/>
        <function-ref name="recv" scoped="" ref="0x41705c78"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x405f5bf0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x405f5090" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x40606470" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x406073f0" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x40606070" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x40607038" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x40607838" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x4060a8a8" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x4060ac60" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x40607c38" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="43:../../tos/platforms/hemera/hardware.h">
        <short>&#10; Hardware definition for the Hemera platform.</short>
        <long>&#10; Hardware definition for the Hemera platform.&#10;&#10; @author Brad Campbell&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x405e4210" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x404151f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x4063ed18" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x4063ebc0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x4063f438" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40611c78"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x40610248"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x4063d290" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x4063dad0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x4063e770" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x4063d688" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x4063f890" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x4063fcd8" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x4063e340" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40611c78"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40610248"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4063e1e8" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40611c78"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40610248"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x4063a978" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x40646010" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x40647e18" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40646760" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40646608" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40647970" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406474d0" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x4063aee0" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x4063ad88" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x4063c520" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x4063ca78" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x4063c920" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x40638058" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x4063ced0" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x406385f8" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x406384a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406389a0" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40631a88" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x40630868" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x40630710" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x40631e78" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40632210" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x40630298" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40632a58" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x406316e0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40632660" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40632e20" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x40631328" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x406311d0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x40630e50" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x40630cf8" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40656580" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x405e3038" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x405e5508" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403a8e60" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403a6798" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403a62d0" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403a96d8" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403a9bf0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4076d7f8" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4076d7f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4077d038" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4076ae28" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4077e010" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4077fc48" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4077fe30" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4077f7a0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4077d9b0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4077d480" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4077f2e0" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4076de50" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4076dcf8" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4077e9f8" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4077e6b0" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4077e898" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4076a590" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4076a438" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4076aa60" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40793168" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40793010" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40793eb0" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40793d58" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407888d0" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40793678" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40780690" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40795630" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40780258" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x40795168" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40795010" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40789e00" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40780b28" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40782910" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40782910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40782dc0" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4078d5d0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40782910"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4078d2a0" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4078d470" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40782910"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x407917e8" loc="18:../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x407912a0" loc="18:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40791480" loc="18:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40791680" loc="19:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x40792df0" loc="12:../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x40792c98" loc="12:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x4078f060" loc="21:../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40791c78" loc="21:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x40791ec8" loc="22:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x4078fc80" loc="29:../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x4078f4b8" loc="29:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x40741d78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4078f698" loc="29:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4078f898" loc="30:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x4078fb10" loc="30:../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x407771a8" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x407775f0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40777a70" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x407752f8" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4078a010" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4078a4b8" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40777e98" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4078abf8" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4078aaa0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40778d48" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40775778" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40775ba0" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40787af8" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40787f20" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x40784e98" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40784d40" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40779dd0" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40785758" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x40783490" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40785320" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407876b8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x40784418" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x40787210" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40779610" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x40785b80" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x40784860" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x40784018" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x407799e0" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x407af1d8" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x407af5c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x407b0a30" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x407afd90" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407b0df0" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x407af998" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b02f0" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x407b0680" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4090c010" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4090c010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4090c4f0" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409083b8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409083b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40908520" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40905810" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x409074d0" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x409051c8" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40907e48" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40905068" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40907940" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40905ca0" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40908b50" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409089f8" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40908520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40907070" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4095c0c0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4095c0c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4095c228" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4095c228"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4095c710" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4095c228"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4095b158" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4095cc38" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4095b558" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x40a78d10" loc="41:../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x40a88170" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a89d48" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40a88010" loc="84:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x40a88668" loc="92:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x40a89870" loc="76:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x40a8aab0" loc="61:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x40a87560" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40a87408" loc="109:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a8a010" loc="47:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x40a87be8" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a87a90" loc="116:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x40a88ee8" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a88ba8" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40a88d88" loc="100:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x40a8a5c0" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a8a468" loc="54:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x40a89360" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a89010" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40a89200" loc="69:../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40a8d038" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40a6c6f8" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40a6c0f8" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40a6cba8" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40a8d730" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40aa5ed0" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40aa5a70" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40aa5660" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40aa50f8" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40b2e010" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b2e5e8" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40b28980" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b284c0" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40b2fcd0" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40b2b6e8" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40b2f7a0" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40b2b210" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b2bcc0" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40b2dee0" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40b293f8" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40b212e8" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2cc70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b21190" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2cc70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40b25f10" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40b225f0" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2cc70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b22498" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2cc70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40b22ba0" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40b2cc70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40b5a730" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b56ca0" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b791a8" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../../tos/interfaces/I2CPacket.nc">
      <documentation loc="32:../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x40b9bd58" loc="59:../../tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40b9bd58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40b97a18" loc="76:../../tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../../tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b9d768"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b97298" loc="76:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b9d768"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b97498" loc="76:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b97698" loc="76:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b978a8" loc="76:../../tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40b92248" loc="112:../../tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../../tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b94ab8" loc="112:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b94cb8" loc="112:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b94eb8" loc="112:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b920d8" loc="112:../../tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b95cc8" loc="92:../../tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../../tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b9d768"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b95548" loc="92:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b9d768"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b95748" loc="92:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b95948" loc="92:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b95b58" loc="92:../../tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b94180" loc="102:../../tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../../tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b96950" loc="102:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b96b50" loc="102:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b96d50" loc="102:../../tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b94010" loc="102:../../tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430I2CConfigure" loc="38:../../tos/chips/msp430/usart/Msp430I2CConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x40be7bc0" loc="39:../../tos/chips/msp430/usart/Msp430I2CConfigure.nc">
        <interfacedef-ref qname="Msp430I2CConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x40bf0af8"/>
              <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x40bf0d20"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40c05ae8" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x40c12938" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x40c1c890" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x40c16a18" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c168c0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x40bf9e48" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x40c13010" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x40c18600" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x40c1c070" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x40c1b0c8" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x40c1d738" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x40c1d5e0" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x40bf7810" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x40c1a0c8" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x40c142c0" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x40c12518" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x40c16480" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x40c0f900" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x40c0d7c8" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x40bf8660" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x40c1bc90" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x40c1aa98" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x40c1dc38" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x40bf9400" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x40c16010" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c17e58" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x40bf9010" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x40c14b08" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x40c12d50" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x40c0e680" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x40c0d3c8" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x40c13870" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x40c11158" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x40c16e50" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x40c0f010" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x40bf8a38" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x40c17038" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x40c11988" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x40c120f8" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x40c18188" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x40c18030" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x40c0eae0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x40c17a28" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x40c13440" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x40bf9a40" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x40bf0af8"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x40bf0d20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40bf98e8" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x40bf0af8"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x40bf0d20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x40c1b8b0" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x40bf73e8" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40bf7290" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x40c1a600" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c1a4a8" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x40c0f490" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x40c1d1c8" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x40bf8e58" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x40c175c8" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x40c17470" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x40bf8290" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x40c11538" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x40c13c98" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x40c146e8" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x40c18bb0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x40c18a58" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x40c1b4a0" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x40c1c470" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x40c0ef10" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x40bf7d70" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40bf7c18" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x40c0fd80" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x40c1cc80" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x40c0e210" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40c72090" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x40c4fed8" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x40c56380" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bc0240"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x40bc06a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c56228" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bc0240"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x40bc06a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x40c51d28" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Enables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x40c55870" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbd500"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x40bbd968"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c55718" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbd500"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x40bbd968"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40c4ced0" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x40c49438" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x40c55288" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbe338"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x40bbe740"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x40c55d08" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbd500"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x40bbd968"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x40c526b0" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x40c52558" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x40c52138" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x40c4cae0" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x40c56dd8" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbe338"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x40bbe740"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c56c80" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bbe338"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x40bbe740"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x40c53708" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40c4a2d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x40c53ca8" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x40c53b50" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x40c514d0" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x40c518f8" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40c4c308" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x40c4d010" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x40c4f610" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40c4c700" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x40c4e378" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
          <long>&#10; Disables the Uart RX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x40c4a6a8" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40c52b30" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x40bc4590"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x40bc1400"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x40c4aaf0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x40c49c30" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x40c532b8" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x40c53160" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40c725f8" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c724a0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x40c567f8" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40bc0240"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x40bc06a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x40c4f1a8" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40c4e798" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x40c4de30" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x40bd3b30"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x40bd3d58"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40c4dcd8" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x40bd3b30"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x40bd3d58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x40c4d690" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
          <long>&#10; Switches USART to Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x40bdecd0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x40bdeef8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40c4d538" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x40bdecd0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x40bdeef8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40c72b50" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x40c49010" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x40c51010" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x40c49840" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x40c4eba8" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x40c4fa98" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
          <long>&#10; Disables the Uart TX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x40ca45f0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ca4498" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40ca4010" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40d7c838" loc="97:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40d4fa60" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40d3dc00"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x40d3de88"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40d5cda8" loc="86:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x40d4f030" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40d3dc00"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x40d3de88"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x40d4f250" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x40d4f480" loc="87:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x40d4f6c8" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x40d4f8e0" loc="88:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40d7b1c8" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x40d7ce10" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x40d7b068" loc="107:../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40d54b28" loc="189:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x40d5a790" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40d5a638" loc="84:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x40d594f8" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40d59180" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x40d59398" loc="106:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x40d55868" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40d56d78" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x40d552b8" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x40d554e0" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x40d556f8" loc="177:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x40d52528" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x40d52150" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x40d52388" loc="227:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x40d57bc0" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x40d57108" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x40d3d4d0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x40d3d010"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x40d57600" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x40d57838" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x40d57a50" loc="138:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x40d53338" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d531e0" loc="206:../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x40d790c8" loc="49:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x40d79590" loc="54:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40d72138" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40d72620" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x40d6acd0" loc="63:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5f278"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x40d5f7f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x40d67090" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40d3dc00"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x40d3de88"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d69f28" loc="82:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x40d666e8" loc="106:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x40d93138" loc="118:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x40d66ca8" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x40d66b50" loc="112:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x40d691a8" loc="68:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5e518"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x40d5e9d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x40d699c8" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40d3dc00"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x40d3de88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d69600" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x40d69868" loc="75:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40d3dc00"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x40d3de88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40d93a50" loc="128:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x40d6a1e0" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5f278"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x40d5f7f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x40d6a088" loc="51:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5f278"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x40d5f7f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x40d67718" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d675c0" loc="89:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x40d67d60" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40d67c08" loc="95:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x40d66278" loc="101:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x40d935a0" loc="123:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x40d93e90" loc="133:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x40d6a808" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5e518"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x40d5e9d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x40d6a6b0" loc="57:../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40d5e518"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x40d5e9d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x40e88e08" loc="28:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40e88a20" loc="28:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40e88ca8" loc="29:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x40e884e0" loc="13:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40e880f8" loc="13:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40e88380" loc="14:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x40e868d0" loc="39:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40e86518" loc="39:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x40e86770" loc="39:../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x40e58e78" loc="43:../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x40e57420" loc="50:../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x40e60da8" loc="17:../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e60c50" loc="17:../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40e5d968" loc="23:../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x400334b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40e5d1c0" loc="23:../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x40e5d398" loc="23:../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40e5d580" loc="24:../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x400334b8"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x40e5d7f8" loc="24:../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x40e58010" loc="22:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x40e62488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40e59e78" loc="22:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x40e593f8" loc="18:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x40e62488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40e59068" loc="18:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40e59278" loc="18:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x40e5bb10" loc="16:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x40e63d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40e5b9b8" loc="16:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x40e63d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x40e59a30" loc="20:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x40e62488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x40e63d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40e598b8" loc="20:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x40e63d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x40e5b520" loc="10:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x40e63d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40e5fcf8" loc="10:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40e5ff08" loc="10:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x40e5b1a8" loc="11:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x40e5b3b0" loc="11:../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x40e7bda8" loc="29:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40e7bc50" loc="29:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40e75058" loc="54:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x40e76ed8" loc="54:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x40e76088" loc="44:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40e77f10" loc="44:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x40e773f0" loc="34:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40e77298" loc="34:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40e779d8" loc="39:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40e77880" loc="39:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x40e76b28" loc="52:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x40e766b0" loc="50:../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40e76558" loc="50:../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x40e7aa28" loc="14:../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x40e7a438" loc="14:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x40e7a670" loc="15:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x40e7a8c0" loc="15:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x40e72d40" loc="21:../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40e727e8" loc="21:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40e729d8" loc="22:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x40e72bd8" loc="23:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x40e723d0" loc="17:../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x40e7ae58" loc="17:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x4073d6c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40e72068" loc="18:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x40e72268" loc="19:../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x40e935b0" loc="18:../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40e93010" loc="18:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40e93270" loc="19:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40e93448" loc="20:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40e925f0" loc="28:../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40e92010" loc="28:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40e92200" loc="29:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40e92488" loc="30:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40e93b50" loc="22:../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40e939f8" loc="22:../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e90280" loc="50:../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e90280"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40e8ef10" loc="97:../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e90280"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40e8e1a8" loc="80:../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40e90720" loc="61:../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40e8e7b0" loc="89:../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e90280"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40e8e658" loc="89:../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e90280"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40e90c30" loc="72:../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x40ee0910" loc="18:../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x4072b978"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40ee0370" loc="18:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x4072b978"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40ee05d0" loc="19:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x4074a1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40ee07a8" loc="20:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40ede8a8" loc="28:../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40ede2c8" loc="28:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40740328"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40ede4b8" loc="29:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40ede740" loc="30:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x4074ba98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ee0eb0" loc="22:../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40ee0d58" loc="22:../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x40730c80"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="resolveAddress" ref="0x40ee2060" loc="11:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x4072cef8"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x4072b168"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40e99c38" loc="11:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x40e99ed0" loc="12:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x4072cef8"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x4072b168"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x40ee2910" loc="17:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40ee25b0" loc="17:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x40ee27b0" loc="17:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x40ee1170" loc="18:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x40ee2d18" loc="18:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x40ee1010" loc="18:../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x40edb660" loc="5:../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4072c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40ed78b0" loc="10:../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40ed7518" loc="8:../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4072c2a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40ed73c0" loc="8:../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4072c2a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40edbf18" loc="7:../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x4072e880"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x4072c568"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40edbac8" loc="6:../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4072c2a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x40ef2e00" loc="20:../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40ef2ca8" loc="20:../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x40741208"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40f2db78" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x4072e880"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4072ed10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40f24d90" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x40f24a28" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x40f24c30" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x40f24090" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40f25a88" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40f25698" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40f25928" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40f2cf10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f2cdb8" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40f245a8" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40f277a0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40f27648" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40f288c8" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f28770" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40f59950" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40f25188" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40f25030" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40f59488" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40f28d10" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x4072e880"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4072ed10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40f271c8" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40f2c908" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40f28340" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40f27be0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40f49168" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40f49010" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40f40a18" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40f404d0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40f406d0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f408b0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40f72190" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f40e40" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f72030" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40f66ba0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40f66ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40f66d08" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f66d08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40f63348" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f66d08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40f631f0" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f66d08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x40fa04e8" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x40f9e7f0" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x40f9e388" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x40fa3608" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40fa0010" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x40fa0a00" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x40fa0ec0" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40fa3b10" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40fc24a8" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fc2350" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40fc2b40" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fc29e8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40f90010" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x40723010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40f90880" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40f90480" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40725d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40f93ab0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40725d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40723010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40f93748" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40725d38"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40f93950" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40723010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40fc1ec8" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40fc4010" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40f92748" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f92c20" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40f92e20" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40fc4df8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40fc45b8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40fc4a90" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40fc4c90" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x41044b98" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x410415b0" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x41041168" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x41041010" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x41044690" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x41064d68" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x41061290" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x41061770" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x41085e80" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41085b20" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x41085d20" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x410815c8" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41081068" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x41081268" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41081460" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41083838" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410834d8" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x410836d8" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x41085290" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x406f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41088ef8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x41085130" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41084c80" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41084720" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x41084920" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41084b18" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x410aa068" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x41074ad8" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x41074cf0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41074ee0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x410a96b0" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x410aaf18" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x410a9148" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410a9338" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x410a9540" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x41075c88" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x41075b30" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x410a5738" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x410a68a8" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x410a52d0" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x410a5178" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x410a6cc0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x410a7d60" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x410a7c08" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x410a6420" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x410a62c8" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x410c9230" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x40bdecd0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x40bdeef8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x410cfa70" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410cf918" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x410cb6e8" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410cb590" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x410cb010" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x410cbd30" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410cbbd8" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x411b1ef8" loc="24:../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x411b1ef8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x411ae8b0" loc="34:../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x411ae518" loc="29:../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x411b1ef8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x411ae3c0" loc="29:../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x411b1ef8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x411c8848" loc="8:../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c86f0" loc="8:../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x411c82a0" loc="6:../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c8148" loc="6:../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x411bf090" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c2cc0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x411c2ef8" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x411bfb50" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411bf9f8" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x411c27e8" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x411c2168" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x411c2010" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411fad60" loc="43:../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x411f6010" loc="73:../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x411f6ec8" loc="90:../../tos/interfaces/Queue.nc">
        <documentation loc="83:../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x411f6d70" loc="90:../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40039840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x40039840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x411f57f8" loc="101:../../tos/interfaces/Queue.nc">
        <documentation loc="92:../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x411f56a0" loc="101:../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x411f7b10" loc="65:../../tos/interfaces/Queue.nc">
        <documentation loc="60:../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x411f66b8" loc="81:../../tos/interfaces/Queue.nc">
        <documentation loc="75:../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411fad60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x411f7210" loc="50:../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x411f7658" loc="58:../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x411d7b60" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d7820" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x411d7a00" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x411cc6a8" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411cc348" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x411cc528" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x411cedc0" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x411cd7c0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411cd668" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x411ce4a0" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411ce148" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x411ce340" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x411d5580" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d5428" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x411d3010" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d5df8" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x411d2010" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d1c58" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x411d1e38" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x411d1670" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x411d3c70" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d3930" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x411d3b10" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x411c3380" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c3228" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x411c6718" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c6380" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x411c65b8" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x411c4a20" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c48c8" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x411c43a8" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c4010" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x411c4248" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x411c3ca0" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411c3b48" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x411c9378" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
              <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411cbde8" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x411c9010" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x411c91f0" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4137ce98" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4137cd40" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x41384288" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x41387ed8" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x41384128" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x41381248" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x41382ea8" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x413810e8" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x41384910" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x402324e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x413847b8" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x413828b0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x41382758" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x41387a10" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x413878b8" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x41382010" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x41384e80" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x413804a8" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41380350" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4137f010" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41380e48" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4137fa98" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4137f940" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x41373010" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41374e58" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x41376e78" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41376d20" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x41376010" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x41377e88" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x41377900" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x413777a8" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x41376608" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x413764b0" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x41374788" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41374630" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x413b3a40" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x413b36f8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x413b38e0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x413b1640" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x413b0d40" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x413b0550" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x413b09f8" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x413b0bd8" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x413b0060" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x413b1cf0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x413b1ee8" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x413b1168" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x413b1010" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x413b4a98" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x413b45f0" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x413ab908" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413ab790" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x413ab2c8" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x406f8300"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x406f7308"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413ab130" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x413a93f8" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x406f79c8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x406f5cd0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413a9260" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x413be010" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x413fda80" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x413fda80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x413fdbe8" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x413fdbe8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x413f9df0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x413fdbe8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f9c98" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x413f89c0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f8868" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x413f92a0" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f9148" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x413f74b8" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x413fdbe8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f7148" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x413f7358" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x413fdbe8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x413e6090" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x413e7ad8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x413e7ef8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x413e7640" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x413e71c0" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x413e7068" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40233250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x413f3370" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40232dc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f3218" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x413f6a40" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403a12e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f68e8" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x413f0550" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f03f8" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x413f3c48" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413f3af0" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40731560"/>
                <typename><typedef-ref name="message_t" ref="0x40730318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4150f570" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4150f570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4150fbc0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403aa1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4150f570"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4150fa68" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4150f570"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:../../tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x415b9d80" loc="3:../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x415b9c28" loc="3:../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x415b6868" loc="6:../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x415b6ce0" loc="7:../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x415b6390" loc="4:../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x415b6238" loc="4:../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x415c4cd8" loc="48:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x415c00f8" loc="55:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x415c47d8" loc="43:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x415c4680" loc="43:../../tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x40233010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
